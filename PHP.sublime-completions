{
	"scope": "source.php - variable.other.php",

	"completions": [
		{
			"trigger": "_",
			"contents": "_( ${1:\\$msgid} )"
		},
		{
			"trigger": "abs",
			"contents": "abs( ${1:\\$number} )"
		},
		{
			"trigger": "acos",
			"contents": "acos( ${1:\\$number} )"
		},
		{
			"trigger": "acosh",
			"contents": "acosh( ${1:\\$number} )"
		},
		{
			"trigger": "addcslashes",
			"contents": "addcslashes( ${1:\\$str}, ${2:\\$charlist} )"
		},
		{
			"trigger": "addslashes",
			"contents": "addslashes( ${1:\\$str} )"
		},
		{
			"trigger": "apc_add",
			"contents": "apc_add( ${1:\\$key}, ${2:\\$var}${3:, ${4:\\$ttl}} )"
		},
		{
			"trigger": "apc_bin_dump",
			"contents": "apc_bin_dump(${1: ${2:\\$files}${3:, ${4:\\$user_vars}} })"
		},
		{
			"trigger": "apc_bin_dumpfile",
			"contents": "apc_bin_dumpfile( ${1:\\$files}, ${2:\\$user_vars}, ${3:\\$filename}${4:, ${5:\\$flags}${6:, ${7:\\$context}}} )"
		},
		{
			"trigger": "apc_bin_load",
			"contents": "apc_bin_load( ${1:\\$data}${2:, ${3:\\$flags}} )"
		},
		{
			"trigger": "apc_bin_loadfile",
			"contents": "apc_bin_loadfile( ${1:\\$filename}${2:, ${3:\\$context}${4:, ${5:\\$flags}}} )"
		},
		{
			"trigger": "apc_cache_info",
			"contents": "apc_cache_info(${1: ${2:\\$type}${3:, ${4:\\$limited}} })"
		},
		{
			"trigger": "apc_cas",
			"contents": "apc_cas( ${1:\\$key}, ${2:\\$old}, ${3:\\$new} )"
		},
		{
			"trigger": "apc_clear_cache",
			"contents": "apc_clear_cache(${1: ${2:\\$info} })"
		},
		{
			"trigger": "apc_compile_file",
			"contents": "apc_compile_file( ${1:\\$filenames}${2:, ${3:\\$atomic}} )"
		},
		{
			"trigger": "apc_dec",
			"contents": "apc_dec( ${1:\\$key}${2:, ${3:\\$step}${4:, ${5:\\$success}}} )"
		},
		{
			"trigger": "apc_define_constants",
			"contents": "apc_define_constants( ${1:\\$key}, ${2:\\$constants}${3:, ${4:\\$case_sensitive}} )"
		},
		{
			"trigger": "apc_delete",
			"contents": "apc_delete( ${1:\\$keys} )"
		},
		{
			"trigger": "apc_delete_file",
			"contents": "apc_delete_file( ${1:\\$keys} )"
		},
		{
			"trigger": "apc_exists",
			"contents": "apc_exists( ${1:\\$keys} )"
		},
		{
			"trigger": "apc_fetch",
			"contents": "apc_fetch( ${1:\\$key}${2:, ${3:\\$success}} )"
		},
		{
			"trigger": "apc_inc",
			"contents": "apc_inc( ${1:\\$key}${2:, ${3:\\$step}${4:, ${5:\\$success}}} )"
		},
		{
			"trigger": "apc_load_constants",
			"contents": "apc_load_constants( ${1:\\$key}${2:, ${3:\\$case_sensitive}} )"
		},
		{
			"trigger": "apc_sma_info",
			"contents": "apc_sma_info(${1: ${2:\\$limited} })"
		},
		{
			"trigger": "apc_store",
			"contents": "apc_store( ${1:\\$key}, ${2:\\$var}${3:, ${4:\\$ttl}} )"
		},
		{
			"trigger": "array_change_key_case",
			"contents": "array_change_key_case( ${1:\\$input}${2:, ${3:\\$case}} )"
		},
		{
			"trigger": "array_chunk",
			"contents": "array_chunk( ${1:\\$arg}, ${2:\\$size}${3:, ${4:\\$preserve_keys}} )"
		},
		{
			"trigger": "array_combine",
			"contents": "array_combine( ${1:\\$keys}, ${2:\\$values} )"
		},
		{
			"trigger": "array_count_values",
			"contents": "array_count_values( ${1:\\$arg} )"
		},
		{
			"trigger": "array_diff",
			"contents": "array_diff( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_diff_assoc",
			"contents": "array_diff_assoc( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_diff_key",
			"contents": "array_diff_key( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_diff_uassoc",
			"contents": "array_diff_uassoc( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_data_comp_func} )"
		},
		{
			"trigger": "array_diff_ukey",
			"contents": "array_diff_ukey( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_key_comp_func} )"
		},
		{
			"trigger": "array_fill",
			"contents": "array_fill( ${1:\\$start_key}, ${2:\\$num}, ${3:\\$val} )"
		},
		{
			"trigger": "array_fill_keys",
			"contents": "array_fill_keys( ${1:\\$keys}, ${2:\\$val} )"
		},
		{
			"trigger": "array_filter",
			"contents": "array_filter( ${1:\\$arg}${2:, ${3:\\$callback}} )"
		},
		{
			"trigger": "array_flip",
			"contents": "array_flip( ${1:\\$arg} )"
		},
		{
			"trigger": "array_intersect",
			"contents": "array_intersect( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_intersect_assoc",
			"contents": "array_intersect_assoc( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_intersect_key",
			"contents": "array_intersect_key( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_intersect_uassoc",
			"contents": "array_intersect_uassoc( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_key_compare_func} )"
		},
		{
			"trigger": "array_intersect_ukey",
			"contents": "array_intersect_ukey( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_key_compare_func} )"
		},
		{
			"trigger": "array_key_exists",
			"contents": "array_key_exists( ${1:\\$key}, ${2:\\$search} )"
		},
		{
			"trigger": "array_keys",
			"contents": "array_keys( ${1:\\$arg}${2:, ${3:\\$search_value}${4:, ${5:\\$strict}}} )"
		},
		{
			"trigger": "array_map",
			"contents": "array_map( ${1:\\$callback}, ${2:\\$arg}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_merge",
			"contents": "array_merge( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_merge_recursive",
			"contents": "array_merge_recursive( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_multisort",
			"contents": "array_multisort( ${1:\\$arr1}${2:, ${3:\\$SORT_ASC_or_SORT_DESC}${4:, ${5:\\$SORT_REGULAR_or_SORT_NUMERIC_or_SORT_STRING}${6:, ${7:\\$arr2}${8:, ${9:\\$SORT_ASC_or_SORT_DESC}${10:, ${11:\\$SORT_REGULAR_or_SORT_NUMERIC_or_SORT_STRING}}}}}} )"
		},
		{
			"trigger": "array_pad",
			"contents": "array_pad( ${1:\\$arg}, ${2:\\$pad_size}, ${3:\\$pad_value} )"
		},
		{
			"trigger": "array_pop",
			"contents": "array_pop( ${1:\\$stack} )"
		},
		{
			"trigger": "array_product",
			"contents": "array_product( ${1:\\$arg} )"
		},
		{
			"trigger": "array_push",
			"contents": "array_push( ${1:\\$stack}, ${2:\\$var}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_rand",
			"contents": "array_rand( ${1:\\$arg}${2:, ${3:\\$num_req}} )"
		},
		{
			"trigger": "array_reduce",
			"contents": "array_reduce( ${1:\\$arg}, ${2:\\$callback}${3:, ${4:\\$initial}} )"
		},
		{
			"trigger": "array_replace",
			"contents": "array_replace( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_replace_recursive",
			"contents": "array_replace_recursive( ${1:\\$arr1}, ${2:\\$arr2}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_reverse",
			"contents": "array_reverse( ${1:\\$input}${2:, ${3:\\$preserve_keys}} )"
		},
		{
			"trigger": "array_search",
			"contents": "array_search( ${1:\\$needle}, ${2:\\$haystack}${3:, ${4:\\$strict}} )"
		},
		{
			"trigger": "array_shift",
			"contents": "array_shift( ${1:\\$stack} )"
		},
		{
			"trigger": "array_slice",
			"contents": "array_slice( ${1:\\$arg}, ${2:\\$offset}${3:, ${4:\\$length}${5:, ${6:\\$preserve_keys}}} )"
		},
		{
			"trigger": "array_splice",
			"contents": "array_splice( ${1:\\$arg}, ${2:\\$offset}${3:, ${4:\\$length}${5:, ${6:\\$replacement}}} )"
		},
		{
			"trigger": "array_sum",
			"contents": "array_sum( ${1:\\$arg} )"
		},
		{
			"trigger": "array_udiff",
			"contents": "array_udiff( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_data_comp_func} )"
		},
		{
			"trigger": "array_udiff_assoc",
			"contents": "array_udiff_assoc( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_key_comp_func} )"
		},
		{
			"trigger": "array_udiff_uassoc",
			"contents": "array_udiff_uassoc( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_data_comp_func}, ${4:\\$callback_key_comp_func} )"
		},
		{
			"trigger": "array_uintersect",
			"contents": "array_uintersect( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_data_compare_func} )"
		},
		{
			"trigger": "array_uintersect_assoc",
			"contents": "array_uintersect_assoc( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_data_compare_func} )"
		},
		{
			"trigger": "array_uintersect_uassoc",
			"contents": "array_uintersect_uassoc( ${1:\\$arr1}, ${2:\\$arr2}, ${3:\\$callback_data_compare_func}, ${4:\\$callback_key_compare_func} )"
		},
		{
			"trigger": "array_unique",
			"contents": "array_unique( ${1:\\$arg} )"
		},
		{
			"trigger": "array_unshift",
			"contents": "array_unshift( ${1:\\$stack}, ${2:\\$var}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "array_values",
			"contents": "array_values( ${1:\\$arg} )"
		},
		{
			"trigger": "array_walk",
			"contents": "array_walk( ${1:\\$input}, ${2:\\$funcname}${3:, ${4:\\$userdata}} )"
		},
		{
			"trigger": "array_walk_recursive",
			"contents": "array_walk_recursive( ${1:\\$input}, ${2:\\$funcname}${3:, ${4:\\$userdata}} )"
		},
		{
			"trigger": "arsort",
			"contents": "arsort( ${1:\\$arg}${2:, ${3:\\$sort_flags}} )"
		},
		{
			"trigger": "asin",
			"contents": "asin( ${1:\\$number} )"
		},
		{
			"trigger": "asinh",
			"contents": "asinh( ${1:\\$number} )"
		},
		{
			"trigger": "asort",
			"contents": "asort( ${1:\\$arg}${2:, ${3:\\$sort_flags}} )"
		},
		{
			"trigger": "assert",
			"contents": "assert( ${1:\\$assertion} )"
		},
		{
			"trigger": "assert_options",
			"contents": "assert_options( ${1:\\$what}${2:, ${3:\\$value}} )"
		},
		{
			"trigger": "atan",
			"contents": "atan( ${1:\\$number} )"
		},
		{
			"trigger": "atan2",
			"contents": "atan2( ${1:\\$y}, ${2:\\$x} )"
		},
		{
			"trigger": "atanh",
			"contents": "atanh( ${1:\\$number} )"
		},
		{
			"trigger": "base64_decode",
			"contents": "base64_decode( ${1:\\$str}${2:, ${3:\\$strict}} )"
		},
		{
			"trigger": "base64_encode",
			"contents": "base64_encode( ${1:\\$str} )"
		},
		{
			"trigger": "base_convert",
			"contents": "base_convert( ${1:\\$number}, ${2:\\$frombase}, ${3:\\$tobase} )"
		},
		{
			"trigger": "basename",
			"contents": "basename( ${1:\\$path}${2:, ${3:\\$suffix}} )"
		},
		{
			"trigger": "bcadd",
			"contents": "bcadd( ${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:\\$scale}} )"
		},
		{
			"trigger": "bccomp",
			"contents": "bccomp( ${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:\\$scale}} )"
		},
		{
			"trigger": "bcdiv",
			"contents": "bcdiv( ${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:\\$scale}} )"
		},
		{
			"trigger": "bcmod",
			"contents": "bcmod( ${1:\\$left_operand}, ${2:\\$right_operand} )"
		},
		{
			"trigger": "bcmul",
			"contents": "bcmul( ${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:\\$scale}} )"
		},
		{
			"trigger": "bcpow",
			"contents": "bcpow( ${1:\\$x}, ${2:\\$y}${3:, ${4:\\$scale}} )"
		},
		{
			"trigger": "bcpowmod",
			"contents": "bcpowmod( ${1:\\$x}, ${2:\\$y}, ${3:\\$mod}${4:, ${5:\\$scale}} )"
		},
		{
			"trigger": "bcscale",
			"contents": "bcscale( ${1:\\$scale} )"
		},
		{
			"trigger": "bcsqrt",
			"contents": "bcsqrt( ${1:\\$operand}${2:, ${3:\\$scale}} )"
		},
		{
			"trigger": "bcsub",
			"contents": "bcsub( ${1:\\$left_operand}, ${2:\\$right_operand}${3:, ${4:\\$scale}} )"
		},
		{
			"trigger": "bin2hex",
			"contents": "bin2hex( ${1:\\$data} )"
		},
		{
			"trigger": "bind_textdomain_codeset",
			"contents": "bind_textdomain_codeset( ${1:\\$domain}, ${2:\\$codeset} )"
		},
		{
			"trigger": "bindec",
			"contents": "bindec( ${1:\\$binary_number} )"
		},
		{
			"trigger": "bindtextdomain",
			"contents": "bindtextdomain( ${1:\\$domain_name}, ${2:\\$dir} )"
		},
		{
			"trigger": "bzclose",
			"contents": "bzclose( ${1:\\$fp} )"
		},
		{
			"trigger": "bzcompress",
			"contents": "bzcompress( ${1:\\$source}, ${2:\\$blocksize}${3:, ${4:\\$workfactor}} )"
		},
		{
			"trigger": "bzdecompress",
			"contents": "bzdecompress( ${1:\\$source}${2:, ${3:\\$small}} )"
		},
		{
			"trigger": "bzerrno",
			"contents": "bzerrno( ${1:\\$bz} )"
		},
		{
			"trigger": "bzerror",
			"contents": "bzerror( ${1:\\$bz} )"
		},
		{
			"trigger": "bzerrstr",
			"contents": "bzerrstr( ${1:\\$bz} )"
		},
		{
			"trigger": "bzflush",
			"contents": "bzflush( ${1:\\$fp} )"
		},
		{
			"trigger": "bzopen",
			"contents": "bzopen( ${1:\\$file}, ${2:\\$mode} )"
		},
		{
			"trigger": "bzread",
			"contents": "bzread( ${1:\\$bz}${2:, ${3:\\$length}} )"
		},
		{
			"trigger": "bzwrite",
			"contents": "bzwrite( ${1:\\$fp}, ${2:\\$str}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "cal_days_in_month",
			"contents": "cal_days_in_month( ${1:\\$calendar}, ${2:\\$month}, ${3:\\$year} )"
		},
		{
			"trigger": "cal_from_jd",
			"contents": "cal_from_jd( ${1:\\$jd}, ${2:\\$calendar} )"
		},
		{
			"trigger": "cal_info",
			"contents": "cal_info(${1: ${2:\\$calendar} })"
		},
		{
			"trigger": "cal_to_jd",
			"contents": "cal_to_jd( ${1:\\$calendar}, ${2:\\$month}, ${3:\\$day}, ${4:\\$year} )"
		},
		{
			"trigger": "call_user_func",
			"contents": "call_user_func( ${1:\\$function_name}${2:, ${3:\\$parmeter}${4:, ${5:\\$...}}} )"
		},
		{
			"trigger": "call_user_func_array",
			"contents": "call_user_func_array( ${1:\\$function_name}, ${2:\\$parameters} )"
		},
		{
			"trigger": "call_user_method",
			"contents": "call_user_method( ${1:\\$method_name}, ${2:\\$object}${3:, ${4:\\$parameter}${5:, ${6:\\$...}}} )"
		},
		{
			"trigger": "call_user_method_array",
			"contents": "call_user_method_array( ${1:\\$method_name}, ${2:\\$object}, ${3:\\$params} )"
		},
		{
			"trigger": "ceil",
			"contents": "ceil( ${1:\\$number} )"
		},
		{
			"trigger": "chdir",
			"contents": "chdir( ${1:\\$directory} )"
		},
		{
			"trigger": "checkdate",
			"contents": "checkdate( ${1:\\$month}, ${2:\\$day}, ${3:\\$year} )"
		},
		{
			"trigger": "checkdnsrr",
			"contents": "checkdnsrr( ${1:\\$host}${2:, ${3:\\$type}} )"
		},
		{
			"trigger": "chgrp",
			"contents": "chgrp( ${1:\\$filename}, ${2:\\$group} )"
		},
		{
			"trigger": "chmod",
			"contents": "chmod( ${1:\\$filename}, ${2:\\$mode} )"
		},
		{
			"trigger": "chop",
			"contents": "chop( ${1:\\$str}${2:, ${3:\\$character_mask}} )"
		},
		{
			"trigger": "chown",
			"contents": "chown( ${1:\\$filename}, ${2:\\$user} )"
		},
		{
			"trigger": "chr",
			"contents": "chr( ${1:\\$codepoint} )"
		},
		{
			"trigger": "chunk_split",
			"contents": "chunk_split( ${1:\\$str}${2:, ${3:\\$chunklen}${4:, ${5:\\$ending}}} )"
		},
		{
			"trigger": "class_alias",
			"contents": "class_alias( ${1:\\$user_class_name}, ${2:\\$alias_name}${3:, ${4:\\$autoload}} )"
		},
		{
			"trigger": "class_exists",
			"contents": "class_exists( ${1:\\$classname}${2:, ${3:\\$autoload}} )"
		},
		{
			"trigger": "class_implements",
			"contents": "class_implements( ${1:\\$what}${2:, ${3:\\$autoload}} )"
		},
		{
			"trigger": "class_parents",
			"contents": "class_parents( ${1:\\$instance}${2:, ${3:\\$autoload}} )"
		},
		{
			"trigger": "class_uses",
			"contents": "class_uses( ${1:\\$what}${2:, ${3:\\$autoload}} )"
		},
		{
			"trigger": "clearstatcache",
			"contents": "clearstatcache(${1: ${2:\\$clear_realpath_cache}${3:, ${4:\\$filename}} })"
		},
		{
			"trigger": "closedir",
			"contents": "closedir(${1: ${2:\\$dir_handle} })"
		},
		{
			"trigger": "closelog",
			"contents": "closelog()"
		},
		{
			"trigger": "compact",
			"contents": "compact( ${1:\\$var_names}${2:, ${3:\\$...}} )"
		},
		{
			"trigger": "connection_aborted",
			"contents": "connection_aborted()"
		},
		{
			"trigger": "connection_status",
			"contents": "connection_status()"
		},
		{
			"trigger": "constant",
			"contents": "constant( ${1:\\$const_name} )"
		},
		{
			"trigger": "convert_cyr_string",
			"contents": "convert_cyr_string( ${1:\\$str}, ${2:\\$from}, ${3:\\$to} )"
		},
		{
			"trigger": "convert_uudecode",
			"contents": "convert_uudecode( ${1:\\$data} )"
		},
		{
			"trigger": "convert_uuencode",
			"contents": "convert_uuencode( ${1:\\$data} )"
		},
		{
			"trigger": "copy",
			"contents": "copy( ${1:\\$source_file}, ${2:\\$destination_file}, ${3:\\$context} )"
		},
		{
			"trigger": "cos",
			"contents": "cos( ${1:\\$number} )"
		},
		{
			"trigger": "cosh",
			"contents": "cosh( ${1:\\$number} )"
		},
		{
			"trigger": "count",
			"contents": "count( ${1:\\$var}${2:, ${3:\\$mode}} )"
		},
		{
			"trigger": "count_chars",
			"contents": "count_chars( ${1:\\$input}${2:, ${3:\\$mode}} )"
		},
		{
			"trigger": "crc32",
			"contents": "crc32( ${1:\\$str} )"
		},
		{
			"trigger": "create_function",
			"contents": "create_function( ${1:\\$args}, ${2:\\$code} )"
		},
		{
			"trigger": "crypt",
			"contents": "crypt( ${1:\\$str}${2:, ${3:\\$salt}} )"
		},
		{
			"trigger": "ctype_alnum",
			"contents": "ctype_alnum( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_alpha",
			"contents": "ctype_alpha( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_cntrl",
			"contents": "ctype_cntrl( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_digit",
			"contents": "ctype_digit( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_graph",
			"contents": "ctype_graph( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_lower",
			"contents": "ctype_lower( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_print",
			"contents": "ctype_print( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_punct",
			"contents": "ctype_punct( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_space",
			"contents": "ctype_space( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_upper",
			"contents": "ctype_upper( ${1:\\$text} )"
		},
		{
			"trigger": "ctype_xdigit",
			"contents": "ctype_xdigit( ${1:\\$text} )"
		},
		{
			"trigger": "curl_close",
			"contents": "curl_close( ${1:\\$ch} )"
		},
		{
			"trigger": "curl_copy_handle",
			"contents": "curl_copy_handle( ${1:\\$ch} )"
		},
		{
			"trigger": "curl_errno",
			"contents": "curl_errno( ${1:\\$ch} )"
		},
		{
			"trigger": "curl_error",
			"contents": "curl_error( ${1:\\$ch} )"
		},
		{
			"trigger": "curl_exec",
			"contents": "curl_exec( ${1:\\$ch} )"
		},
		{
			"trigger": "curl_getinfo",
			"contents": "curl_getinfo( ${1:\\$ch}${2:, ${3:\\$option}} )"
		},
		{
			"trigger": "curl_init",
			"contents": "curl_init(${1: ${2:\\$url} })"
		},
		{
			"trigger": "curl_multi_add_handle",
			"contents": "curl_multi_add_handle( ${1:\\$mh}, ${2:\\$ch} )"
		},
		{
			"trigger": "curl_multi_close",
			"contents": "curl_multi_close( ${1:\\$mh} )"
		},
		{
			"trigger": "curl_multi_exec",
			"contents": "curl_multi_exec( ${1:\\$mh}${2:, ${3:\\$still_running}} )"
		},
		{
			"trigger": "curl_multi_getcontent",
			"contents": "curl_multi_getcontent( ${1:\\$ch} )"
		},
		{
			"trigger": "curl_multi_info_read",
			"contents": "curl_multi_info_read( ${1:\\$mh}${2:, ${3:\\$msgs_in_queue}} )"
		},
		{
			"trigger": "curl_multi_init",
			"contents": "curl_multi_init()"
		},
		{
			"trigger": "curl_multi_remove_handle",
			"contents": "curl_multi_remove_handle( ${1:\\$mh}, ${2:\\$ch} )"
		},
		{
			"trigger": "curl_multi_select",
			"contents": "curl_multi_select( ${1:\\$mh}${2:, ${3:\\$timeout}} )"
		},
		{
			"trigger": "curl_setopt",
			"contents": "curl_setopt( ${1:\\$ch}, ${2:\\$option}, ${3:\\$value} )"
		},
		{
			"trigger": "curl_setopt_array",
			"contents": "curl_setopt_array( ${1:\\$ch}, ${2:\\$options} )"
		},
		{
			"trigger": "curl_version",
			"contents": "curl_version(${1: ${2:\\$version} })"
		},
		{
			"trigger": "current",
			"contents": "current( ${1:\\$arg} )"
		},
		{
			"trigger": "date",
			"contents": "date( ${1:\\$format}${2:, ${3:\\$timestamp}} )"
		},
		{
			"trigger": "date_add",
			"contents": "date_add( ${1:\\$object}, ${2:\\$interval} )"
		},
		{
			"trigger": "date_create",
			"contents": "date_create(${1: ${2:\\$time}${3:, ${4:\\$object}} })"
		},
		{
			"trigger": "date_create_from_format",
			"contents": "date_create_from_format( ${1:\\$format}, ${2:\\$time}${3:, ${4:\\$object}} )"
		},
		{
			"trigger": "date_date_set",
			"contents": "date_date_set( ${1:\\$object}, ${2:\\$year}, ${3:\\$month}, ${4:\\$day} )"
		},
		{
			"trigger": "date_default_timezone_get",
			"contents": "date_default_timezone_get()"
		},
		{
			"trigger": "date_default_timezone_set",
			"contents": "date_default_timezone_set( ${1:\\$timezone_identifier} )"
		},
		{
			"trigger": "date_diff",
			"contents": "date_diff( ${1:\\$object}, ${2:\\$object2}${3:, ${4:\\$absolute}} )"
		},
		{
			"trigger": "date_format",
			"contents": "date_format( ${1:\\$object}, ${2:\\$format} )"
		},
		{
			"trigger": "date_get_last_errors",
			"contents": "date_get_last_errors()"
		},
		{
			"trigger": "date_interval_create_from_date_string",
			"contents": "date_interval_create_from_date_string( ${1:\\$time} )"
		},
		{
			"trigger": "date_interval_format",
			"contents": "date_interval_format( ${1:\\$object}, ${2:\\$format} )"
		},
		{
			"trigger": "date_isodate_set",
			"contents": "date_isodate_set( ${1:\\$object}, ${2:\\$year}, ${3:\\$week}${4:, ${5:\\$day}} )"
		},
		{
			"trigger": "date_modify",
			"contents": "date_modify( ${1:\\$object}, ${2:\\$modify} )"
		},
		{
			"trigger": "date_offset_get",
			"contents": "date_offset_get( ${1:\\$object} )"
		},
		{
			"trigger": "date_parse",
			"contents": "date_parse( ${1:\\$date} )"
		},
		{
			"trigger": "date_parse_from_format",
			"contents": "date_parse_from_format( ${1:\\$format}, ${2:\\$date} )"
		},
		{
			"trigger": "date_sub",
			"contents": "date_sub( ${1:\\$object}, ${2:\\$interval} )"
		},
		{
			"trigger": "date_sun_info",
			"contents": "date_sun_info( ${1:\\$time}, ${2:\\$latitude}, ${3:\\$longitude} )"
		},
		{
			"trigger": "date_sunrise",
			"contents": "date_sunrise( ${1:\\$time}${2:, ${3:\\$format}${4:, ${5:\\$latitude}${6:, ${7:\\$longitude}${8:, ${9:\\$zenith}${10:, ${11:\\$gmt_offset}}}}}} )"
		},
		{
			"trigger": "date_sunset",
			"contents": "date_sunset( ${1:\\$time}${2:, ${3:\\$format}${4:, ${5:\\$latitude}${6:, ${7:\\$longitude}${8:, ${9:\\$zenith}${10:, ${11:\\$gmt_offset}}}}}} )"
		},
		{
			"trigger": "date_time_set",
			"contents": "date_time_set( ${1:\\$object}, ${2:\\$hour}, ${3:\\$minute}${4:, ${5:\\$second}} )"
		},
		{
			"trigger": "date_timestamp_get",
			"contents": "date_timestamp_get( ${1:\\$object} )"
		},
		{
			"trigger": "date_timestamp_set",
			"contents": "date_timestamp_set( ${1:\\$object}, ${2:\\$unixtimestamp} )"
		},
		{
			"trigger": "date_timezone_get",
			"contents": "date_timezone_get( ${1:\\$object} )"
		},
		{
			"trigger": "date_timezone_set",
			"contents": "date_timezone_set( ${1:\\$object}, ${2:\\$timezone} )"
		},
		{
			"trigger": "dba_close",
			"contents": "dba_close( ${1:\\$handle} )"
		},
		{
			"trigger": "dba_delete",
			"contents": "dba_delete( ${1:\\$key}, ${2:\\$handle} )"
		},
		{
			"trigger": "dba_exists",
			"contents": "dba_exists( ${1:\\$key}, ${2:\\$handle} )"
		},
		{
			"trigger": "dba_fetch",
			"contents": "dba_fetch( ${1:\\$key}, ${2:\\$skip}${3:, ${4:\\$handle}} )"
		},
		{
			"trigger": "dba_firstkey",
			"contents": "dba_firstkey( ${1:\\$handle} )"
		},
		{
			"trigger": "dba_handlers",
			"contents": "dba_handlers(${1: ${2:\\$full_info} })"
		},
		{
			"trigger": "dba_insert",
			"contents": "dba_insert( ${1:\\$key}, ${2:\\$value}, ${3:\\$handle} )"
		},
		{
			"trigger": "dba_key_split",
			"contents": "dba_key_split( ${1:\\$key} )"
		},
		{
			"trigger": "dba_list",
			"contents": "dba_list()"
		},
		{
			"trigger": "dba_nextkey",
			"contents": "dba_nextkey( ${1:\\$handle} )"
		},
		{
			"trigger": "dba_open",
			"contents": "dba_open( ${1:\\$path}, ${2:\\$mode}${3:, ${4:\\$handlername}${5:, ${6:\\$...}}} )"
		},
		{
			"trigger": "dba_optimize",
			"contents": "dba_optimize( ${1:\\$handle} )"
		},
		{
			"trigger": "dba_popen",
			"contents": "dba_popen( ${1:\\$path}, ${2:\\$mode}${3:, ${4:\\$handlername}${5:, ${6:\\$...}}} )"
		},
		{
			"trigger": "dba_replace",
			"contents": "dba_replace( ${1:\\$key}, ${2:\\$value}, ${3:\\$handle} )"
		},
		{
			"trigger": "dba_sync",
			"contents": "dba_sync( ${1:\\$handle} )"
		},
		{
			"trigger": "dcgettext",
			"contents": "dcgettext( ${1:\\$domain_name}, ${2:\\$msgid}, ${3:\\$category} )"
		},
		{
			"trigger": "dcngettext",
			"contents": "dcngettext( ${1:\\$domain}, ${2:\\$msgid1}, ${3:\\$msgid2}, ${4:\\$count}, ${5:\\$category} )"
		},
		{
			"trigger": "debug_backtrace",
			"contents": "debug_backtrace(${1: ${2:\\$options}${3:, ${4:\\$limit}} })"
		},
		{
			"trigger": "debug_print_backtrace",
			"contents": "debug_print_backtrace(${1: ${2:\\$options} })"
		},
		{
			"trigger": "debug_zval_dump",
			"contents": "debug_zval_dump( ${1:\\$var}${2:, ${3:\\$...}} )"
		},
		{
			"trigger": "decbin",
			"contents": "decbin( ${1:\\$decimal_number} )"
		},
		{
			"trigger": "dechex",
			"contents": "dechex( ${1:\\$decimal_number} )"
		},
		{
			"trigger": "decoct",
			"contents": "decoct( ${1:\\$decimal_number} )"
		},
		{
			"trigger": "define",
			"contents": "define( ${1:\\$constant_name}, ${2:\\$value}, ${3:\\$case_insensitive} )"
		},
		{
			"trigger": "defined",
			"contents": "defined( ${1:\\$constant_name} )"
		},
		{
			"trigger": "deg2rad",
			"contents": "deg2rad( ${1:\\$number} )"
		},
		{
			"trigger": "dgettext",
			"contents": "dgettext( ${1:\\$domain_name}, ${2:\\$msgid} )"
		},
		{
			"trigger": "dir",
			"contents": "dir( ${1:\\$directory}${2:, ${3:\\$context}} )"
		},
		{
			"trigger": "dirname",
			"contents": "dirname( ${1:\\$path} )"
		},
		{
			"trigger": "disk_free_space",
			"contents": "disk_free_space( ${1:\\$path} )"
		},
		{
			"trigger": "disk_total_space",
			"contents": "disk_total_space( ${1:\\$path} )"
		},
		{
			"trigger": "diskfreespace",
			"contents": "diskfreespace( ${1:\\$path} )"
		},
		{
			"trigger": "dl",
			"contents": "dl( ${1:\\$extension_filename} )"
		},
		{
			"trigger": "dngettext",
			"contents": "dngettext( ${1:\\$domain}, ${2:\\$msgid1}, ${3:\\$msgid2}, ${4:\\$count} )"
		},
		{
			"trigger": "dns_check_record",
			"contents": "dns_check_record( ${1:\\$host}${2:, ${3:\\$type}} )"
		},
		{
			"trigger": "dns_get_mx",
			"contents": "dns_get_mx( ${1:\\$hostname}, ${2:\\$mxhosts}${3:, ${4:\\$weight}} )"
		},
		{
			"trigger": "dns_get_record",
			"contents": "dns_get_record( ${1:\\$hostname}${2:, ${3:\\$type}${4:, ${5:\\$authns}${6:, ${7:\\$addtl}${8:, ${9:\\$raw}}}}} )"
		},
		{
			"trigger": "dom_import_simplexml",
			"contents": "dom_import_simplexml( ${1:\\$node} )"
		},
		{
			"trigger": "doubleval",
			"contents": "doubleval( ${1:\\$var} )"
		},
		{
			"trigger": "each",
			"contents": "each( ${1:\\$arr} )"
		},
		{
			"trigger": "easter_date",
			"contents": "easter_date(${1: ${2:\\$year} })"
		},
		{
			"trigger": "easter_days",
			"contents": "easter_days(${1: ${2:\\$year}${3:, ${4:\\$method}} })"
		},
		{
			"trigger": "end",
			"contents": "end( ${1:\\$arg} )"
		},
		{
			"trigger": "ereg",
			"contents": "ereg( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$registers}} )"
		},
		{
			"trigger": "ereg_replace",
			"contents": "ereg_replace( ${1:\\$pattern}, ${2:\\$replacement}, ${3:\\$string} )"
		},
		{
			"trigger": "eregi",
			"contents": "eregi( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$registers}} )"
		},
		{
			"trigger": "eregi_replace",
			"contents": "eregi_replace( ${1:\\$pattern}, ${2:\\$replacement}, ${3:\\$string} )"
		},
		{
			"trigger": "error_get_last",
			"contents": "error_get_last()"
		},
		{
			"trigger": "error_log",
			"contents": "error_log( ${1:\\$message}${2:, ${3:\\$message_type}${4:, ${5:\\$destination}${6:, ${7:\\$extra_headers}}}} )"
		},
		{
			"trigger": "error_reporting",
			"contents": "error_reporting(${1: ${2:\\$new_error_level} })"
		},
		{
			"trigger": "escapeshellarg",
			"contents": "escapeshellarg( ${1:\\$arg} )"
		},
		{
			"trigger": "escapeshellcmd",
			"contents": "escapeshellcmd( ${1:\\$command} )"
		},
		{
			"trigger": "exec",
			"contents": "exec( ${1:\\$command}${2:, ${3:\\$output}${4:, ${5:\\$return_value}}} )"
		},
		{
			"trigger": "exif_imagetype",
			"contents": "exif_imagetype( ${1:\\$imagefile} )"
		},
		{
			"trigger": "exif_read_data",
			"contents": "exif_read_data( ${1:\\$filename}${2:, ${3:\\$sections_needed}${4:, ${5:\\$sub_arrays}${6:, ${7:\\$read_thumbnail}}}} )"
		},
		{
			"trigger": "exif_tagname",
			"contents": "exif_tagname( ${1:\\$index} )"
		},
		{
			"trigger": "exif_thumbnail",
			"contents": "exif_thumbnail( ${1:\\$filename}${2:, ${3:\\$width}${4:, ${5:\\$height}${6:, ${7:\\$imagetype}}}} )"
		},
		{
			"trigger": "exp",
			"contents": "exp( ${1:\\$number} )"
		},
		{
			"trigger": "explode",
			"contents": "explode( ${1:\\$separator}, ${2:\\$str}${3:, ${4:\\$limit}} )"
		},
		{
			"trigger": "expm1",
			"contents": "expm1( ${1:\\$number} )"
		},
		{
			"trigger": "extension_loaded",
			"contents": "extension_loaded( ${1:\\$extension_name} )"
		},
		{
			"trigger": "extract",
			"contents": "extract( ${1:\\$arg}${2:, ${3:\\$extract_type}${4:, ${5:\\$prefix}}} )"
		},
		{
			"trigger": "ezmlm_hash",
			"contents": "ezmlm_hash( ${1:\\$addr} )"
		},
		{
			"trigger": "fastcgi_finish_request",
			"contents": "fastcgi_finish_request()"
		},
		{
			"trigger": "fclose",
			"contents": "fclose( ${1:\\$fp} )"
		},
		{
			"trigger": "feof",
			"contents": "feof( ${1:\\$fp} )"
		},
		{
			"trigger": "fflush",
			"contents": "fflush( ${1:\\$fp} )"
		},
		{
			"trigger": "fgetc",
			"contents": "fgetc( ${1:\\$fp} )"
		},
		{
			"trigger": "fgetcsv",
			"contents": "fgetcsv( ${1:\\$fp}${2:, ${3:\\$length}${4:, ${5:\\$delimiter}${6:, ${7:\\$enclosure}${8:, ${9:\\$escape}}}}} )"
		},
		{
			"trigger": "fgets",
			"contents": "fgets( ${1:\\$fp}${2:, ${3:\\$length}} )"
		},
		{
			"trigger": "fgetss",
			"contents": "fgetss( ${1:\\$fp}${2:, ${3:\\$length}${4:, ${5:\\$allowable_tags}}} )"
		},
		{
			"trigger": "file",
			"contents": "file( ${1:\\$filename}${2:, ${3:\\$flags}${4:, ${5:\\$context}}} )"
		},
		{
			"trigger": "file_exists",
			"contents": "file_exists( ${1:\\$filename} )"
		},
		{
			"trigger": "file_get_contents",
			"contents": "file_get_contents( ${1:\\$filename}${2:, ${3:\\$flags}${4:, ${5:\\$context}${6:, ${7:\\$offset}${8:, ${9:\\$maxlen}}}}} )"
		},
		{
			"trigger": "file_put_contents",
			"contents": "file_put_contents( ${1:\\$filename}, ${2:\\$data}${3:, ${4:\\$flags}${5:, ${6:\\$context}}} )"
		},
		{
			"trigger": "fileatime",
			"contents": "fileatime( ${1:\\$filename} )"
		},
		{
			"trigger": "filectime",
			"contents": "filectime( ${1:\\$filename} )"
		},
		{
			"trigger": "filegroup",
			"contents": "filegroup( ${1:\\$filename} )"
		},
		{
			"trigger": "fileinode",
			"contents": "fileinode( ${1:\\$filename} )"
		},
		{
			"trigger": "filemtime",
			"contents": "filemtime( ${1:\\$filename} )"
		},
		{
			"trigger": "fileowner",
			"contents": "fileowner( ${1:\\$filename} )"
		},
		{
			"trigger": "fileperms",
			"contents": "fileperms( ${1:\\$filename} )"
		},
		{
			"trigger": "filesize",
			"contents": "filesize( ${1:\\$filename} )"
		},
		{
			"trigger": "filetype",
			"contents": "filetype( ${1:\\$filename} )"
		},
		{
			"trigger": "filter_has_var",
			"contents": "filter_has_var( ${1:\\$type}, ${2:\\$variable_name} )"
		},
		{
			"trigger": "filter_id",
			"contents": "filter_id( ${1:\\$filtername} )"
		},
		{
			"trigger": "filter_input",
			"contents": "filter_input( ${1:\\$type}, ${2:\\$variable_name}${3:, ${4:\\$filter}${5:, ${6:\\$options}}} )"
		},
		{
			"trigger": "filter_input_array",
			"contents": "filter_input_array( ${1:\\$type}${2:, ${3:\\$definition}${4:, ${5:\\$add_empty}}} )"
		},
		{
			"trigger": "filter_list",
			"contents": "filter_list()"
		},
		{
			"trigger": "filter_var",
			"contents": "filter_var( ${1:\\$variable}${2:, ${3:\\$filter}${4:, ${5:\\$options}}} )"
		},
		{
			"trigger": "filter_var_array",
			"contents": "filter_var_array( ${1:\\$data}${2:, ${3:\\$definition}${4:, ${5:\\$add_empty}}} )"
		},
		{
			"trigger": "finfo_buffer",
			"contents": "finfo_buffer( ${1:\\$finfo}, ${2:\\$string}${3:, ${4:\\$options}${5:, ${6:\\$context}}} )"
		},
		{
			"trigger": "finfo_close",
			"contents": "finfo_close( ${1:\\$finfo} )"
		},
		{
			"trigger": "finfo_file",
			"contents": "finfo_file( ${1:\\$finfo}, ${2:\\$filename}${3:, ${4:\\$options}${5:, ${6:\\$context}}} )"
		},
		{
			"trigger": "finfo_open",
			"contents": "finfo_open(${1: ${2:\\$options}${3:, ${4:\\$arg}} })"
		},
		{
			"trigger": "finfo_set_flags",
			"contents": "finfo_set_flags( ${1:\\$finfo}, ${2:\\$options} )"
		},
		{
			"trigger": "floatval",
			"contents": "floatval( ${1:\\$var} )"
		},
		{
			"trigger": "flock",
			"contents": "flock( ${1:\\$fp}, ${2:\\$operation}${3:, ${4:\\$wouldblock}} )"
		},
		{
			"trigger": "floor",
			"contents": "floor( ${1:\\$number} )"
		},
		{
			"trigger": "flush",
			"contents": "flush()"
		},
		{
			"trigger": "fmod",
			"contents": "fmod( ${1:\\$x}, ${2:\\$y} )"
		},
		{
			"trigger": "fnmatch",
			"contents": "fnmatch( ${1:\\$pattern}, ${2:\\$filename}${3:, ${4:\\$flags}} )"
		},
		{
			"trigger": "fopen",
			"contents": "fopen( ${1:\\$filename}, ${2:\\$mode}${3:, ${4:\\$use_include_path}${5:, ${6:\\$context}}} )"
		},
		{
			"trigger": "forward_static_call",
			"contents": "forward_static_call( ${1:\\$function_name}${2:, ${3:\\$parameter}${4:, ${5:\\$...}}} )"
		},
		{
			"trigger": "forward_static_call_array",
			"contents": "forward_static_call_array( ${1:\\$function_name}, ${2:\\$parameters} )"
		},
		{
			"trigger": "fpassthru",
			"contents": "fpassthru( ${1:\\$fp} )"
		},
		{
			"trigger": "fprintf",
			"contents": "fprintf( ${1:\\$stream}, ${2:\\$format}${3:, ${4:\\$arg1}${5:, ${6:\\$...}}} )"
		},
		{
			"trigger": "fputcsv",
			"contents": "fputcsv( ${1:\\$fp}, ${2:\\$fields}${3:, ${4:\\$delimiter}${5:, ${6:\\$enclosure}}} )"
		},
		{
			"trigger": "fputs",
			"contents": "fputs( ${1:\\$fp}, ${2:\\$str}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "fread",
			"contents": "fread( ${1:\\$fp}, ${2:\\$length} )"
		},
		{
			"trigger": "frenchtojd",
			"contents": "frenchtojd( ${1:\\$month}, ${2:\\$day}, ${3:\\$year} )"
		},
		{
			"trigger": "fscanf",
			"contents": "fscanf( ${1:\\$stream}, ${2:\\$format}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "fseek",
			"contents": "fseek( ${1:\\$fp}, ${2:\\$offset}${3:, ${4:\\$whence}} )"
		},
		{
			"trigger": "fsockopen",
			"contents": "fsockopen( ${1:\\$hostname}, ${2:\\$port}${3:, ${4:\\$errno}${5:, ${6:\\$errstr}${7:, ${8:\\$timeout}}}} )"
		},
		{
			"trigger": "fstat",
			"contents": "fstat( ${1:\\$fp} )"
		},
		{
			"trigger": "ftell",
			"contents": "ftell( ${1:\\$fp} )"
		},
		{
			"trigger": "ftok",
			"contents": "ftok( ${1:\\$pathname}, ${2:\\$proj} )"
		},
		{
			"trigger": "ftp_alloc",
			"contents": "ftp_alloc( ${1:\\$ftp}, ${2:\\$size}${3:, ${4:\\$response}} )"
		},
		{
			"trigger": "ftp_cdup",
			"contents": "ftp_cdup( ${1:\\$ftp} )"
		},
		{
			"trigger": "ftp_chdir",
			"contents": "ftp_chdir( ${1:\\$ftp}, ${2:\\$directory} )"
		},
		{
			"trigger": "ftp_chmod",
			"contents": "ftp_chmod( ${1:\\$ftp}, ${2:\\$mode}, ${3:\\$filename} )"
		},
		{
			"trigger": "ftp_close",
			"contents": "ftp_close( ${1:\\$ftp} )"
		},
		{
			"trigger": "ftp_connect",
			"contents": "ftp_connect( ${1:\\$host}${2:, ${3:\\$port}${4:, ${5:\\$timeout}}} )"
		},
		{
			"trigger": "ftp_delete",
			"contents": "ftp_delete( ${1:\\$ftp}, ${2:\\$file} )"
		},
		{
			"trigger": "ftp_exec",
			"contents": "ftp_exec( ${1:\\$ftp}, ${2:\\$command} )"
		},
		{
			"trigger": "ftp_fget",
			"contents": "ftp_fget( ${1:\\$ftp}, ${2:\\$fp}, ${3:\\$remote_file}, ${4:\\$mode}${5:, ${6:\\$resumepos}} )"
		},
		{
			"trigger": "ftp_fput",
			"contents": "ftp_fput( ${1:\\$ftp}, ${2:\\$remote_file}, ${3:\\$fp}, ${4:\\$mode}${5:, ${6:\\$startpos}} )"
		},
		{
			"trigger": "ftp_get",
			"contents": "ftp_get( ${1:\\$ftp}, ${2:\\$local_file}, ${3:\\$remote_file}, ${4:\\$mode}${5:, ${6:\\$resume_pos}} )"
		},
		{
			"trigger": "ftp_get_option",
			"contents": "ftp_get_option( ${1:\\$ftp}, ${2:\\$option} )"
		},
		{
			"trigger": "ftp_login",
			"contents": "ftp_login( ${1:\\$ftp}, ${2:\\$username}, ${3:\\$password} )"
		},
		{
			"trigger": "ftp_mdtm",
			"contents": "ftp_mdtm( ${1:\\$ftp}, ${2:\\$filename} )"
		},
		{
			"trigger": "ftp_mkdir",
			"contents": "ftp_mkdir( ${1:\\$ftp}, ${2:\\$directory} )"
		},
		{
			"trigger": "ftp_nb_continue",
			"contents": "ftp_nb_continue( ${1:\\$ftp} )"
		},
		{
			"trigger": "ftp_nb_fget",
			"contents": "ftp_nb_fget( ${1:\\$ftp}, ${2:\\$fp}, ${3:\\$remote_file}, ${4:\\$mode}${5:, ${6:\\$resumepos}} )"
		},
		{
			"trigger": "ftp_nb_fput",
			"contents": "ftp_nb_fput( ${1:\\$ftp}, ${2:\\$remote_file}, ${3:\\$fp}, ${4:\\$mode}${5:, ${6:\\$startpos}} )"
		},
		{
			"trigger": "ftp_nb_get",
			"contents": "ftp_nb_get( ${1:\\$ftp}, ${2:\\$local_file}, ${3:\\$remote_file}, ${4:\\$mode}${5:, ${6:\\$resume_pos}} )"
		},
		{
			"trigger": "ftp_nb_put",
			"contents": "ftp_nb_put( ${1:\\$ftp}, ${2:\\$remote_file}, ${3:\\$local_file}, ${4:\\$mode}${5:, ${6:\\$startpos}} )"
		},
		{
			"trigger": "ftp_nlist",
			"contents": "ftp_nlist( ${1:\\$ftp}, ${2:\\$directory} )"
		},
		{
			"trigger": "ftp_pasv",
			"contents": "ftp_pasv( ${1:\\$ftp}, ${2:\\$pasv} )"
		},
		{
			"trigger": "ftp_put",
			"contents": "ftp_put( ${1:\\$ftp}, ${2:\\$remote_file}, ${3:\\$local_file}, ${4:\\$mode}${5:, ${6:\\$startpos}} )"
		},
		{
			"trigger": "ftp_pwd",
			"contents": "ftp_pwd( ${1:\\$ftp} )"
		},
		{
			"trigger": "ftp_quit",
			"contents": "ftp_quit( ${1:\\$ftp} )"
		},
		{
			"trigger": "ftp_raw",
			"contents": "ftp_raw( ${1:\\$ftp}, ${2:\\$command} )"
		},
		{
			"trigger": "ftp_rawlist",
			"contents": "ftp_rawlist( ${1:\\$ftp}, ${2:\\$directory}${3:, ${4:\\$recursive}} )"
		},
		{
			"trigger": "ftp_rename",
			"contents": "ftp_rename( ${1:\\$ftp}, ${2:\\$src}, ${3:\\$dest} )"
		},
		{
			"trigger": "ftp_rmdir",
			"contents": "ftp_rmdir( ${1:\\$ftp}, ${2:\\$directory} )"
		},
		{
			"trigger": "ftp_set_option",
			"contents": "ftp_set_option( ${1:\\$ftp}, ${2:\\$option}, ${3:\\$value} )"
		},
		{
			"trigger": "ftp_site",
			"contents": "ftp_site( ${1:\\$ftp}, ${2:\\$cmd} )"
		},
		{
			"trigger": "ftp_size",
			"contents": "ftp_size( ${1:\\$ftp}, ${2:\\$filename} )"
		},
		{
			"trigger": "ftp_ssl_connect",
			"contents": "ftp_ssl_connect( ${1:\\$host}${2:, ${3:\\$port}${4:, ${5:\\$timeout}}} )"
		},
		{
			"trigger": "ftp_systype",
			"contents": "ftp_systype( ${1:\\$ftp} )"
		},
		{
			"trigger": "ftruncate",
			"contents": "ftruncate( ${1:\\$fp}, ${2:\\$size} )"
		},
		{
			"trigger": "func_get_arg",
			"contents": "func_get_arg( ${1:\\$arg_num} )"
		},
		{
			"trigger": "func_get_args",
			"contents": "func_get_args()"
		},
		{
			"trigger": "func_num_args",
			"contents": "func_num_args()"
		},
		{
			"trigger": "function_exists",
			"contents": "function_exists( ${1:\\$function_name} )"
		},
		{
			"trigger": "fwrite",
			"contents": "fwrite( ${1:\\$fp}, ${2:\\$str}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "gc_collect_cycles",
			"contents": "gc_collect_cycles()"
		},
		{
			"trigger": "gc_disable",
			"contents": "gc_disable()"
		},
		{
			"trigger": "gc_enable",
			"contents": "gc_enable()"
		},
		{
			"trigger": "gc_enabled",
			"contents": "gc_enabled()"
		},
		{
			"trigger": "gd_info",
			"contents": "gd_info()"
		},
		{
			"trigger": "get_browser",
			"contents": "get_browser(${1: ${2:\\$browser_name}${3:, ${4:\\$return_array}} })"
		},
		{
			"trigger": "get_called_class",
			"contents": "get_called_class()"
		},
		{
			"trigger": "get_cfg_var",
			"contents": "get_cfg_var( ${1:\\$option_name} )"
		},
		{
			"trigger": "get_class",
			"contents": "get_class(${1: ${2:\\$object} })"
		},
		{
			"trigger": "get_class_methods",
			"contents": "get_class_methods( ${1:\\$class} )"
		},
		{
			"trigger": "get_class_vars",
			"contents": "get_class_vars( ${1:\\$class_name} )"
		},
		{
			"trigger": "get_current_user",
			"contents": "get_current_user()"
		},
		{
			"trigger": "get_declared_classes",
			"contents": "get_declared_classes()"
		},
		{
			"trigger": "get_declared_interfaces",
			"contents": "get_declared_interfaces()"
		},
		{
			"trigger": "get_declared_traits",
			"contents": "get_declared_traits()"
		},
		{
			"trigger": "get_defined_constants",
			"contents": "get_defined_constants(${1: ${2:\\$categorize} })"
		},
		{
			"trigger": "get_defined_functions",
			"contents": "get_defined_functions()"
		},
		{
			"trigger": "get_defined_vars",
			"contents": "get_defined_vars()"
		},
		{
			"trigger": "get_extension_funcs",
			"contents": "get_extension_funcs( ${1:\\$extension_name} )"
		},
		{
			"trigger": "get_headers",
			"contents": "get_headers( ${1:\\$url}${2:, ${3:\\$format}} )"
		},
		{
			"trigger": "get_html_translation_table",
			"contents": "get_html_translation_table(${1: ${2:\\$table}${3:, ${4:\\$quote_style}} })"
		},
		{
			"trigger": "get_include_path",
			"contents": "get_include_path()"
		},
		{
			"trigger": "get_included_files",
			"contents": "get_included_files()"
		},
		{
			"trigger": "get_loaded_extensions",
			"contents": "get_loaded_extensions(${1: ${2:\\$zend_extensions} })"
		},
		{
			"trigger": "get_magic_quotes_gpc",
			"contents": "get_magic_quotes_gpc()"
		},
		{
			"trigger": "get_magic_quotes_runtime",
			"contents": "get_magic_quotes_runtime()"
		},
		{
			"trigger": "get_meta_tags",
			"contents": "get_meta_tags( ${1:\\$filename}${2:, ${3:\\$use_include_path}} )"
		},
		{
			"trigger": "get_object_vars",
			"contents": "get_object_vars( ${1:\\$obj} )"
		},
		{
			"trigger": "get_parent_class",
			"contents": "get_parent_class(${1: ${2:\\$object} })"
		},
		{
			"trigger": "get_required_files",
			"contents": "get_required_files()"
		},
		{
			"trigger": "get_resource_type",
			"contents": "get_resource_type( ${1:\\$res} )"
		},
		{
			"trigger": "getcwd",
			"contents": "getcwd()"
		},
		{
			"trigger": "getdate",
			"contents": "getdate(${1: ${2:\\$timestamp} })"
		},
		{
			"trigger": "getenv",
			"contents": "getenv( ${1:\\$varname} )"
		},
		{
			"trigger": "gethostbyaddr",
			"contents": "gethostbyaddr( ${1:\\$ip_address} )"
		},
		{
			"trigger": "gethostbyname",
			"contents": "gethostbyname( ${1:\\$hostname} )"
		},
		{
			"trigger": "gethostbynamel",
			"contents": "gethostbynamel( ${1:\\$hostname} )"
		},
		{
			"trigger": "gethostname",
			"contents": "gethostname()"
		},
		{
			"trigger": "getimagesize",
			"contents": "getimagesize( ${1:\\$imagefile}${2:, ${3:\\$info}} )"
		},
		{
			"trigger": "getimagesizefromstring",
			"contents": "getimagesizefromstring( ${1:\\$imagefile}${2:, ${3:\\$info}} )"
		},
		{
			"trigger": "getlastmod",
			"contents": "getlastmod()"
		},
		{
			"trigger": "getmxrr",
			"contents": "getmxrr( ${1:\\$hostname}, ${2:\\$mxhosts}${3:, ${4:\\$weight}} )"
		},
		{
			"trigger": "getmygid",
			"contents": "getmygid()"
		},
		{
			"trigger": "getmyinode",
			"contents": "getmyinode()"
		},
		{
			"trigger": "getmypid",
			"contents": "getmypid()"
		},
		{
			"trigger": "getmyuid",
			"contents": "getmyuid()"
		},
		{
			"trigger": "getopt",
			"contents": "getopt( ${1:\\$options}${2:, ${3:\\$opts}} )"
		},
		{
			"trigger": "getprotobyname",
			"contents": "getprotobyname( ${1:\\$name} )"
		},
		{
			"trigger": "getprotobynumber",
			"contents": "getprotobynumber( ${1:\\$proto} )"
		},
		{
			"trigger": "getrandmax",
			"contents": "getrandmax()"
		},
		{
			"trigger": "getrusage",
			"contents": "getrusage(${1: ${2:\\$who} })"
		},
		{
			"trigger": "getservbyname",
			"contents": "getservbyname( ${1:\\$service}, ${2:\\$protocol} )"
		},
		{
			"trigger": "getservbyport",
			"contents": "getservbyport( ${1:\\$port}, ${2:\\$protocol} )"
		},
		{
			"trigger": "gettext",
			"contents": "gettext( ${1:\\$msgid} )"
		},
		{
			"trigger": "gettimeofday",
			"contents": "gettimeofday(${1: ${2:\\$get_as_float} })"
		},
		{
			"trigger": "gettype",
			"contents": "gettype( ${1:\\$var} )"
		},
		{
			"trigger": "glob",
			"contents": "glob( ${1:\\$pattern}${2:, ${3:\\$flags}} )"
		},
		{
			"trigger": "gmdate",
			"contents": "gmdate( ${1:\\$format}${2:, ${3:\\$timestamp}} )"
		},
		{
			"trigger": "gmmktime",
			"contents": "gmmktime(${1: ${2:\\$hour}${3:, ${4:\\$min}${5:, ${6:\\$sec}${7:, ${8:\\$mon}${9:, ${10:\\$day}${11:, ${12:\\$year}}}}}} })"
		},
		{
			"trigger": "gmstrftime",
			"contents": "gmstrftime( ${1:\\$format}${2:, ${3:\\$timestamp}} )"
		},
		{
			"trigger": "gregoriantojd",
			"contents": "gregoriantojd( ${1:\\$month}, ${2:\\$day}, ${3:\\$year} )"
		},
		{
			"trigger": "gzclose",
			"contents": "gzclose( ${1:\\$fp} )"
		},
		{
			"trigger": "gzcompress",
			"contents": "gzcompress( ${1:\\$data}${2:, ${3:\\$level}${4:, ${5:\\$encoding}}} )"
		},
		{
			"trigger": "gzdecode",
			"contents": "gzdecode( ${1:\\$data}${2:, ${3:\\$max_decoded_len}} )"
		},
		{
			"trigger": "gzdeflate",
			"contents": "gzdeflate( ${1:\\$data}${2:, ${3:\\$level}${4:, ${5:\\$encoding}}} )"
		},
		{
			"trigger": "gzencode",
			"contents": "gzencode( ${1:\\$data}${2:, ${3:\\$level}${4:, ${5:\\$encoding}}} )"
		},
		{
			"trigger": "gzeof",
			"contents": "gzeof( ${1:\\$fp} )"
		},
		{
			"trigger": "gzfile",
			"contents": "gzfile( ${1:\\$filename}${2:, ${3:\\$use_include_path}} )"
		},
		{
			"trigger": "gzgetc",
			"contents": "gzgetc( ${1:\\$fp} )"
		},
		{
			"trigger": "gzgets",
			"contents": "gzgets( ${1:\\$fp}${2:, ${3:\\$length}} )"
		},
		{
			"trigger": "gzgetss",
			"contents": "gzgetss( ${1:\\$fp}${2:, ${3:\\$length}${4:, ${5:\\$allowable_tags}}} )"
		},
		{
			"trigger": "gzinflate",
			"contents": "gzinflate( ${1:\\$data}${2:, ${3:\\$max_decoded_len}} )"
		},
		{
			"trigger": "gzopen",
			"contents": "gzopen( ${1:\\$filename}, ${2:\\$mode}${3:, ${4:\\$use_include_path}} )"
		},
		{
			"trigger": "gzpassthru",
			"contents": "gzpassthru( ${1:\\$fp} )"
		},
		{
			"trigger": "gzputs",
			"contents": "gzputs( ${1:\\$fp}, ${2:\\$str}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "gzread",
			"contents": "gzread( ${1:\\$fp}, ${2:\\$length} )"
		},
		{
			"trigger": "gzrewind",
			"contents": "gzrewind( ${1:\\$fp} )"
		},
		{
			"trigger": "gzseek",
			"contents": "gzseek( ${1:\\$fp}, ${2:\\$offset}${3:, ${4:\\$whence}} )"
		},
		{
			"trigger": "gztell",
			"contents": "gztell( ${1:\\$fp} )"
		},
		{
			"trigger": "gzuncompress",
			"contents": "gzuncompress( ${1:\\$data}${2:, ${3:\\$max_decoded_len}} )"
		},
		{
			"trigger": "gzwrite",
			"contents": "gzwrite( ${1:\\$fp}, ${2:\\$str}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "hash",
			"contents": "hash( ${1:\\$algo}, ${2:\\$data}${3:, ${4:\\$raw_output}} )"
		},
		{
			"trigger": "hash_algos",
			"contents": "hash_algos()"
		},
		{
			"trigger": "hash_copy",
			"contents": "hash_copy( ${1:\\$context} )"
		},
		{
			"trigger": "hash_file",
			"contents": "hash_file( ${1:\\$algo}, ${2:\\$filename}${3:, ${4:\\$raw_output}} )"
		},
		{
			"trigger": "hash_final",
			"contents": "hash_final( ${1:\\$context}${2:, ${3:\\$raw_output}} )"
		},
		{
			"trigger": "hash_hmac",
			"contents": "hash_hmac( ${1:\\$algo}, ${2:\\$data}, ${3:\\$key}${4:, ${5:\\$raw_output}} )"
		},
		{
			"trigger": "hash_hmac_file",
			"contents": "hash_hmac_file( ${1:\\$algo}, ${2:\\$filename}, ${3:\\$key}${4:, ${5:\\$raw_output}} )"
		},
		{
			"trigger": "hash_init",
			"contents": "hash_init( ${1:\\$algo}${2:, ${3:\\$options}${4:, ${5:\\$key}}} )"
		},
		{
			"trigger": "hash_update",
			"contents": "hash_update( ${1:\\$context}, ${2:\\$data} )"
		},
		{
			"trigger": "hash_update_file",
			"contents": "hash_update_file( ${1:\\$context}, ${2:\\$filename}${3:, ${4:\\$context}} )"
		},
		{
			"trigger": "hash_update_stream",
			"contents": "hash_update_stream( ${1:\\$context}, ${2:\\$handle}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "header",
			"contents": "header( ${1:\\$header}${2:, ${3:\\$replace}${4:, ${5:\\$http_response_code}}} )"
		},
		{
			"trigger": "header_register_callback",
			"contents": "header_register_callback( ${1:\\$callback} )"
		},
		{
			"trigger": "header_remove",
			"contents": "header_remove(${1: ${2:\\$name} })"
		},
		{
			"trigger": "headers_list",
			"contents": "headers_list()"
		},
		{
			"trigger": "headers_sent",
			"contents": "headers_sent(${1: ${2:\\$file}${3:, ${4:\\$line}} })"
		},
		{
			"trigger": "hebrev",
			"contents": "hebrev( ${1:\\$str}${2:, ${3:\\$max_chars_per_line}} )"
		},
		{
			"trigger": "hebrevc",
			"contents": "hebrevc( ${1:\\$str}${2:, ${3:\\$max_chars_per_line}} )"
		},
		{
			"trigger": "hex2bin",
			"contents": "hex2bin( ${1:\\$data} )"
		},
		{
			"trigger": "hexdec",
			"contents": "hexdec( ${1:\\$hexadecimal_number} )"
		},
		{
			"trigger": "highlight_file",
			"contents": "highlight_file( ${1:\\$file_name}${2:, ${3:\\$return}} )"
		},
		{
			"trigger": "highlight_string",
			"contents": "highlight_string( ${1:\\$string}${2:, ${3:\\$return}} )"
		},
		{
			"trigger": "html_entity_decode",
			"contents": "html_entity_decode( ${1:\\$string}${2:, ${3:\\$quote_style}${4:, ${5:\\$charset}}} )"
		},
		{
			"trigger": "htmlentities",
			"contents": "htmlentities( ${1:\\$string}${2:, ${3:\\$quote_style}${4:, ${5:\\$charset}${6:, ${7:\\$double_encode}}}} )"
		},
		{
			"trigger": "htmlspecialchars",
			"contents": "htmlspecialchars( ${1:\\$string}${2:, ${3:\\$quote_style}${4:, ${5:\\$charset}${6:, ${7:\\$double_encode}}}} )"
		},
		{
			"trigger": "htmlspecialchars_decode",
			"contents": "htmlspecialchars_decode( ${1:\\$string}${2:, ${3:\\$quote_style}} )"
		},
		{
			"trigger": "http_build_query",
			"contents": "http_build_query( ${1:\\$formdata}${2:, ${3:\\$prefix}${4:, ${5:\\$arg_separator}${6:, ${7:\\$enc_type}}}} )"
		},
		{
			"trigger": "http_response_code",
			"contents": "http_response_code(${1: ${2:\\$response_code} })"
		},
		{
			"trigger": "hypot",
			"contents": "hypot( ${1:\\$num1}, ${2:\\$num2} )"
		},
		{
			"trigger": "iconv",
			"contents": "iconv( ${1:\\$in_charset}, ${2:\\$out_charset}, ${3:\\$str} )"
		},
		{
			"trigger": "iconv_get_encoding",
			"contents": "iconv_get_encoding(${1: ${2:\\$type} })"
		},
		{
			"trigger": "iconv_mime_decode",
			"contents": "iconv_mime_decode( ${1:\\$encoded_string}${2:, ${3:\\$mode}${4:, ${5:\\$charset}}} )"
		},
		{
			"trigger": "iconv_mime_decode_headers",
			"contents": "iconv_mime_decode_headers( ${1:\\$headers}${2:, ${3:\\$mode}${4:, ${5:\\$charset}}} )"
		},
		{
			"trigger": "iconv_mime_encode",
			"contents": "iconv_mime_encode( ${1:\\$field_name}, ${2:\\$field_value}${3:, ${4:\\$preference}} )"
		},
		{
			"trigger": "iconv_set_encoding",
			"contents": "iconv_set_encoding( ${1:\\$type}, ${2:\\$charset} )"
		},
		{
			"trigger": "iconv_strlen",
			"contents": "iconv_strlen( ${1:\\$str}${2:, ${3:\\$charset}} )"
		},
		{
			"trigger": "iconv_strpos",
			"contents": "iconv_strpos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}${5:, ${6:\\$charset}}} )"
		},
		{
			"trigger": "iconv_strrpos",
			"contents": "iconv_strrpos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$charset}} )"
		},
		{
			"trigger": "iconv_substr",
			"contents": "iconv_substr( ${1:\\$str}, ${2:\\$offset}${3:, ${4:\\$length}${5:, ${6:\\$charset}}} )"
		},
		{
			"trigger": "idate",
			"contents": "idate( ${1:\\$format}${2:, ${3:\\$timestamp}} )"
		},
		{
			"trigger": "ignore_user_abort",
			"contents": "ignore_user_abort(${1: ${2:\\$value} })"
		},
		{
			"trigger": "image2wbmp",
			"contents": "image2wbmp( ${1:\\$im}${2:, ${3:\\$filename}${4:, ${5:\\$threshold}}} )"
		},
		{
			"trigger": "image_type_to_extension",
			"contents": "image_type_to_extension( ${1:\\$imagetype}${2:, ${3:\\$include_dot}} )"
		},
		{
			"trigger": "image_type_to_mime_type",
			"contents": "image_type_to_mime_type( ${1:\\$imagetype} )"
		},
		{
			"trigger": "imagealphablending",
			"contents": "imagealphablending( ${1:\\$im}, ${2:\\$blend} )"
		},
		{
			"trigger": "imagearc",
			"contents": "imagearc( ${1:\\$im}, ${2:\\$cx}, ${3:\\$cy}, ${4:\\$w}, ${5:\\$h}, ${6:\\$s}, ${7:\\$e}, ${8:\\$col} )"
		},
		{
			"trigger": "imagechar",
			"contents": "imagechar( ${1:\\$im}, ${2:\\$font}, ${3:\\$x}, ${4:\\$y}, ${5:\\$c}, ${6:\\$col} )"
		},
		{
			"trigger": "imagecharup",
			"contents": "imagecharup( ${1:\\$im}, ${2:\\$font}, ${3:\\$x}, ${4:\\$y}, ${5:\\$c}, ${6:\\$col} )"
		},
		{
			"trigger": "imagecolorallocate",
			"contents": "imagecolorallocate( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue} )"
		},
		{
			"trigger": "imagecolorallocatealpha",
			"contents": "imagecolorallocatealpha( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue}, ${5:\\$alpha} )"
		},
		{
			"trigger": "imagecolorat",
			"contents": "imagecolorat( ${1:\\$im}, ${2:\\$x}, ${3:\\$y} )"
		},
		{
			"trigger": "imagecolorclosest",
			"contents": "imagecolorclosest( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue} )"
		},
		{
			"trigger": "imagecolorclosestalpha",
			"contents": "imagecolorclosestalpha( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue}, ${5:\\$alpha} )"
		},
		{
			"trigger": "imagecolorclosesthwb",
			"contents": "imagecolorclosesthwb( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue} )"
		},
		{
			"trigger": "imagecolordeallocate",
			"contents": "imagecolordeallocate( ${1:\\$im}, ${2:\\$index} )"
		},
		{
			"trigger": "imagecolorexact",
			"contents": "imagecolorexact( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue} )"
		},
		{
			"trigger": "imagecolorexactalpha",
			"contents": "imagecolorexactalpha( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue}, ${5:\\$alpha} )"
		},
		{
			"trigger": "imagecolormatch",
			"contents": "imagecolormatch( ${1:\\$im1}, ${2:\\$im2} )"
		},
		{
			"trigger": "imagecolorresolve",
			"contents": "imagecolorresolve( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue} )"
		},
		{
			"trigger": "imagecolorresolvealpha",
			"contents": "imagecolorresolvealpha( ${1:\\$im}, ${2:\\$red}, ${3:\\$green}, ${4:\\$blue}, ${5:\\$alpha} )"
		},
		{
			"trigger": "imagecolorset",
			"contents": "imagecolorset( ${1:\\$im}, ${2:\\$color}, ${3:\\$red}, ${4:\\$green}, ${5:\\$blue}${6:, ${7:\\$alpha}} )"
		},
		{
			"trigger": "imagecolorsforindex",
			"contents": "imagecolorsforindex( ${1:\\$im}, ${2:\\$index} )"
		},
		{
			"trigger": "imagecolorstotal",
			"contents": "imagecolorstotal( ${1:\\$im} )"
		},
		{
			"trigger": "imagecolortransparent",
			"contents": "imagecolortransparent( ${1:\\$im}${2:, ${3:\\$col}} )"
		},
		{
			"trigger": "imageconvolution",
			"contents": "imageconvolution( ${1:\\$im}, ${2:\\$matrix3x3}, ${3:\\$div}, ${4:\\$offset} )"
		},
		{
			"trigger": "imagecopy",
			"contents": "imagecopy( ${1:\\$dst_im}, ${2:\\$src_im}, ${3:\\$dst_x}, ${4:\\$dst_y}, ${5:\\$src_x}, ${6:\\$src_y}, ${7:\\$src_w}, ${8:\\$src_h} )"
		},
		{
			"trigger": "imagecopymerge",
			"contents": "imagecopymerge( ${1:\\$src_im}, ${2:\\$dst_im}, ${3:\\$dst_x}, ${4:\\$dst_y}, ${5:\\$src_x}, ${6:\\$src_y}, ${7:\\$src_w}, ${8:\\$src_h}, ${9:\\$pct} )"
		},
		{
			"trigger": "imagecopymergegray",
			"contents": "imagecopymergegray( ${1:\\$src_im}, ${2:\\$dst_im}, ${3:\\$dst_x}, ${4:\\$dst_y}, ${5:\\$src_x}, ${6:\\$src_y}, ${7:\\$src_w}, ${8:\\$src_h}, ${9:\\$pct} )"
		},
		{
			"trigger": "imagecopyresampled",
			"contents": "imagecopyresampled( ${1:\\$dst_im}, ${2:\\$src_im}, ${3:\\$dst_x}, ${4:\\$dst_y}, ${5:\\$src_x}, ${6:\\$src_y}, ${7:\\$dst_w}, ${8:\\$dst_h}, ${9:\\$src_w}, ${10:\\$src_h} )"
		},
		{
			"trigger": "imagecopyresized",
			"contents": "imagecopyresized( ${1:\\$dst_im}, ${2:\\$src_im}, ${3:\\$dst_x}, ${4:\\$dst_y}, ${5:\\$src_x}, ${6:\\$src_y}, ${7:\\$dst_w}, ${8:\\$dst_h}, ${9:\\$src_w}, ${10:\\$src_h} )"
		},
		{
			"trigger": "imagecreate",
			"contents": "imagecreate( ${1:\\$x_size}, ${2:\\$y_size} )"
		},
		{
			"trigger": "imagecreatefromgd",
			"contents": "imagecreatefromgd( ${1:\\$filename} )"
		},
		{
			"trigger": "imagecreatefromgd2",
			"contents": "imagecreatefromgd2( ${1:\\$filename} )"
		},
		{
			"trigger": "imagecreatefromgd2part",
			"contents": "imagecreatefromgd2part( ${1:\\$filename}, ${2:\\$srcX}, ${3:\\$srcY}, ${4:\\$width}, ${5:\\$height} )"
		},
		{
			"trigger": "imagecreatefromgif",
			"contents": "imagecreatefromgif( ${1:\\$filename} )"
		},
		{
			"trigger": "imagecreatefromjpeg",
			"contents": "imagecreatefromjpeg( ${1:\\$filename} )"
		},
		{
			"trigger": "imagecreatefrompng",
			"contents": "imagecreatefrompng( ${1:\\$filename} )"
		},
		{
			"trigger": "imagecreatefromstring",
			"contents": "imagecreatefromstring( ${1:\\$image} )"
		},
		{
			"trigger": "imagecreatefromwbmp",
			"contents": "imagecreatefromwbmp( ${1:\\$filename} )"
		},
		{
			"trigger": "imagecreatetruecolor",
			"contents": "imagecreatetruecolor( ${1:\\$x_size}, ${2:\\$y_size} )"
		},
		{
			"trigger": "imagedashedline",
			"contents": "imagedashedline( ${1:\\$im}, ${2:\\$x1}, ${3:\\$y1}, ${4:\\$x2}, ${5:\\$y2}, ${6:\\$col} )"
		},
		{
			"trigger": "imagedestroy",
			"contents": "imagedestroy( ${1:\\$im} )"
		},
		{
			"trigger": "imageellipse",
			"contents": "imageellipse( ${1:\\$im}, ${2:\\$cx}, ${3:\\$cy}, ${4:\\$w}, ${5:\\$h}, ${6:\\$color} )"
		},
		{
			"trigger": "imagefill",
			"contents": "imagefill( ${1:\\$im}, ${2:\\$x}, ${3:\\$y}, ${4:\\$col} )"
		},
		{
			"trigger": "imagefilledarc",
			"contents": "imagefilledarc( ${1:\\$im}, ${2:\\$cx}, ${3:\\$cy}, ${4:\\$w}, ${5:\\$h}, ${6:\\$s}, ${7:\\$e}, ${8:\\$col}, ${9:\\$style} )"
		},
		{
			"trigger": "imagefilledellipse",
			"contents": "imagefilledellipse( ${1:\\$im}, ${2:\\$cx}, ${3:\\$cy}, ${4:\\$w}, ${5:\\$h}, ${6:\\$color} )"
		},
		{
			"trigger": "imagefilledpolygon",
			"contents": "imagefilledpolygon( ${1:\\$im}, ${2:\\$points}, ${3:\\$num_pos}, ${4:\\$col} )"
		},
		{
			"trigger": "imagefilledrectangle",
			"contents": "imagefilledrectangle( ${1:\\$im}, ${2:\\$x1}, ${3:\\$y1}, ${4:\\$x2}, ${5:\\$y2}, ${6:\\$col} )"
		},
		{
			"trigger": "imagefilltoborder",
			"contents": "imagefilltoborder( ${1:\\$im}, ${2:\\$x}, ${3:\\$y}, ${4:\\$border}, ${5:\\$col} )"
		},
		{
			"trigger": "imagefilter",
			"contents": "imagefilter( ${1:\\$im}, ${2:\\$filtertype}${3:, ${4:\\$arg1}${5:, ${6:\\$arg2}${7:, ${8:\\$arg3}${9:, ${10:\\$arg4}}}}} )"
		},
		{
			"trigger": "imagefontheight",
			"contents": "imagefontheight( ${1:\\$font} )"
		},
		{
			"trigger": "imagefontwidth",
			"contents": "imagefontwidth( ${1:\\$font} )"
		},
		{
			"trigger": "imageftbbox",
			"contents": "imageftbbox( ${1:\\$size}, ${2:\\$angle}, ${3:\\$font_file}, ${4:\\$text}${5:, ${6:\\$extrainfo}} )"
		},
		{
			"trigger": "imagefttext",
			"contents": "imagefttext( ${1:\\$im}, ${2:\\$size}, ${3:\\$angle}, ${4:\\$x}, ${5:\\$y}, ${6:\\$col}, ${7:\\$font_file}, ${8:\\$text}${9:, ${10:\\$extrainfo}} )"
		},
		{
			"trigger": "imagegammacorrect",
			"contents": "imagegammacorrect( ${1:\\$im}, ${2:\\$inputgamma}, ${3:\\$outputgamma} )"
		},
		{
			"trigger": "imagegd",
			"contents": "imagegd( ${1:\\$im}${2:, ${3:\\$filename}} )"
		},
		{
			"trigger": "imagegd2",
			"contents": "imagegd2( ${1:\\$im}${2:, ${3:\\$filename}${4:, ${5:\\$chunk_size}${6:, ${7:\\$type}}}} )"
		},
		{
			"trigger": "imagegif",
			"contents": "imagegif( ${1:\\$im}${2:, ${3:\\$filename}} )"
		},
		{
			"trigger": "imageinterlace",
			"contents": "imageinterlace( ${1:\\$im}${2:, ${3:\\$interlace}} )"
		},
		{
			"trigger": "imageistruecolor",
			"contents": "imageistruecolor( ${1:\\$im} )"
		},
		{
			"trigger": "imagejpeg",
			"contents": "imagejpeg( ${1:\\$im}${2:, ${3:\\$filename}${4:, ${5:\\$quality}}} )"
		},
		{
			"trigger": "imageline",
			"contents": "imageline( ${1:\\$im}, ${2:\\$x1}, ${3:\\$y1}, ${4:\\$x2}, ${5:\\$y2}, ${6:\\$col} )"
		},
		{
			"trigger": "imageloadfont",
			"contents": "imageloadfont( ${1:\\$filename} )"
		},
		{
			"trigger": "imagepalettecopy",
			"contents": "imagepalettecopy( ${1:\\$dst}, ${2:\\$src} )"
		},
		{
			"trigger": "imagepng",
			"contents": "imagepng( ${1:\\$im}${2:, ${3:\\$filename}} )"
		},
		{
			"trigger": "imagepolygon",
			"contents": "imagepolygon( ${1:\\$im}, ${2:\\$points}, ${3:\\$num_pos}, ${4:\\$col} )"
		},
		{
			"trigger": "imagerectangle",
			"contents": "imagerectangle( ${1:\\$im}, ${2:\\$x1}, ${3:\\$y1}, ${4:\\$x2}, ${5:\\$y2}, ${6:\\$col} )"
		},
		{
			"trigger": "imagerotate",
			"contents": "imagerotate( ${1:\\$im}, ${2:\\$angle}, ${3:\\$bgdcolor}${4:, ${5:\\$ignoretransparent}} )"
		},
		{
			"trigger": "imagesavealpha",
			"contents": "imagesavealpha( ${1:\\$im}, ${2:\\$save} )"
		},
		{
			"trigger": "imagesetbrush",
			"contents": "imagesetbrush( ${1:\\$im}, ${2:\\$brush} )"
		},
		{
			"trigger": "imagesetpixel",
			"contents": "imagesetpixel( ${1:\\$im}, ${2:\\$x}, ${3:\\$y}, ${4:\\$col} )"
		},
		{
			"trigger": "imagesetstyle",
			"contents": "imagesetstyle( ${1:\\$im}, ${2:\\$styles} )"
		},
		{
			"trigger": "imagesetthickness",
			"contents": "imagesetthickness( ${1:\\$im}, ${2:\\$thickness} )"
		},
		{
			"trigger": "imagesettile",
			"contents": "imagesettile( ${1:\\$im}, ${2:\\$tile} )"
		},
		{
			"trigger": "imagestring",
			"contents": "imagestring( ${1:\\$im}, ${2:\\$font}, ${3:\\$x}, ${4:\\$y}, ${5:\\$str}, ${6:\\$col} )"
		},
		{
			"trigger": "imagestringup",
			"contents": "imagestringup( ${1:\\$im}, ${2:\\$font}, ${3:\\$x}, ${4:\\$y}, ${5:\\$str}, ${6:\\$col} )"
		},
		{
			"trigger": "imagesx",
			"contents": "imagesx( ${1:\\$im} )"
		},
		{
			"trigger": "imagesy",
			"contents": "imagesy( ${1:\\$im} )"
		},
		{
			"trigger": "imagetruecolortopalette",
			"contents": "imagetruecolortopalette( ${1:\\$im}, ${2:\\$ditherFlag}, ${3:\\$colorsWanted} )"
		},
		{
			"trigger": "imagettfbbox",
			"contents": "imagettfbbox( ${1:\\$size}, ${2:\\$angle}, ${3:\\$font_file}, ${4:\\$text} )"
		},
		{
			"trigger": "imagettftext",
			"contents": "imagettftext( ${1:\\$im}, ${2:\\$size}, ${3:\\$angle}, ${4:\\$x}, ${5:\\$y}, ${6:\\$col}, ${7:\\$font_file}, ${8:\\$text} )"
		},
		{
			"trigger": "imagetypes",
			"contents": "imagetypes()"
		},
		{
			"trigger": "imagewbmp",
			"contents": "imagewbmp( ${1:\\$im}${2:, ${3:\\$filename}${4:, ${5:\\$foreground}}} )"
		},
		{
			"trigger": "imap_8bit",
			"contents": "imap_8bit( ${1:\\$text} )"
		},
		{
			"trigger": "imap_alerts",
			"contents": "imap_alerts()"
		},
		{
			"trigger": "imap_append",
			"contents": "imap_append( ${1:\\$stream_id}, ${2:\\$folder}, ${3:\\$message}${4:, ${5:\\$options}${6:, ${7:\\$date}}} )"
		},
		{
			"trigger": "imap_base64",
			"contents": "imap_base64( ${1:\\$text} )"
		},
		{
			"trigger": "imap_binary",
			"contents": "imap_binary( ${1:\\$text} )"
		},
		{
			"trigger": "imap_body",
			"contents": "imap_body( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$options}} )"
		},
		{
			"trigger": "imap_bodystruct",
			"contents": "imap_bodystruct( ${1:\\$stream_id}, ${2:\\$msg_no}, ${3:\\$section} )"
		},
		{
			"trigger": "imap_check",
			"contents": "imap_check( ${1:\\$stream_id} )"
		},
		{
			"trigger": "imap_clearflag_full",
			"contents": "imap_clearflag_full( ${1:\\$stream_id}, ${2:\\$sequence}, ${3:\\$flag}${4:, ${5:\\$options}} )"
		},
		{
			"trigger": "imap_close",
			"contents": "imap_close( ${1:\\$stream_id}${2:, ${3:\\$options}} )"
		},
		{
			"trigger": "imap_create",
			"contents": "imap_create( ${1:\\$stream_id}, ${2:\\$mailbox} )"
		},
		{
			"trigger": "imap_createmailbox",
			"contents": "imap_createmailbox( ${1:\\$stream_id}, ${2:\\$mailbox} )"
		},
		{
			"trigger": "imap_delete",
			"contents": "imap_delete( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$options}} )"
		},
		{
			"trigger": "imap_deletemailbox",
			"contents": "imap_deletemailbox( ${1:\\$stream_id}, ${2:\\$mailbox} )"
		},
		{
			"trigger": "imap_errors",
			"contents": "imap_errors()"
		},
		{
			"trigger": "imap_expunge",
			"contents": "imap_expunge( ${1:\\$stream_id} )"
		},
		{
			"trigger": "imap_fetch_overview",
			"contents": "imap_fetch_overview( ${1:\\$stream_id}, ${2:\\$sequence}${3:, ${4:\\$options}} )"
		},
		{
			"trigger": "imap_fetchbody",
			"contents": "imap_fetchbody( ${1:\\$stream_id}, ${2:\\$msg_no}, ${3:\\$section}${4:, ${5:\\$options}} )"
		},
		{
			"trigger": "imap_fetchheader",
			"contents": "imap_fetchheader( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$options}} )"
		},
		{
			"trigger": "imap_fetchmime",
			"contents": "imap_fetchmime( ${1:\\$stream_id}, ${2:\\$msg_no}, ${3:\\$section}${4:, ${5:\\$options}} )"
		},
		{
			"trigger": "imap_fetchstructure",
			"contents": "imap_fetchstructure( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$options}} )"
		},
		{
			"trigger": "imap_fetchtext",
			"contents": "imap_fetchtext( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$options}} )"
		},
		{
			"trigger": "imap_gc",
			"contents": "imap_gc( ${1:\\$stream_id}${2:, ${3:\\$flags}} )"
		},
		{
			"trigger": "imap_get_quota",
			"contents": "imap_get_quota( ${1:\\$stream_id}, ${2:\\$qroot} )"
		},
		{
			"trigger": "imap_get_quotaroot",
			"contents": "imap_get_quotaroot( ${1:\\$stream_id}, ${2:\\$mbox} )"
		},
		{
			"trigger": "imap_getacl",
			"contents": "imap_getacl( ${1:\\$stream_id}, ${2:\\$mailbox} )"
		},
		{
			"trigger": "imap_getmailboxes",
			"contents": "imap_getmailboxes( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern} )"
		},
		{
			"trigger": "imap_getsubscribed",
			"contents": "imap_getsubscribed( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern} )"
		},
		{
			"trigger": "imap_header",
			"contents": "imap_header( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$from_length}${5:, ${6:\\$subject_length}${7:, ${8:\\$default_host}}}} )"
		},
		{
			"trigger": "imap_headerinfo",
			"contents": "imap_headerinfo( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$from_length}${5:, ${6:\\$subject_length}${7:, ${8:\\$default_host}}}} )"
		},
		{
			"trigger": "imap_headers",
			"contents": "imap_headers( ${1:\\$stream_id} )"
		},
		{
			"trigger": "imap_last_error",
			"contents": "imap_last_error()"
		},
		{
			"trigger": "imap_list",
			"contents": "imap_list( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern} )"
		},
		{
			"trigger": "imap_listmailbox",
			"contents": "imap_listmailbox( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern} )"
		},
		{
			"trigger": "imap_listscan",
			"contents": "imap_listscan( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern}, ${4:\\$content} )"
		},
		{
			"trigger": "imap_listsubscribed",
			"contents": "imap_listsubscribed( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern} )"
		},
		{
			"trigger": "imap_lsub",
			"contents": "imap_lsub( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern} )"
		},
		{
			"trigger": "imap_mail",
			"contents": "imap_mail( ${1:\\$to}, ${2:\\$subject}, ${3:\\$message}${4:, ${5:\\$additional_headers}${6:, ${7:\\$cc}${8:, ${9:\\$bcc}${10:, ${11:\\$rpath}}}}} )"
		},
		{
			"trigger": "imap_mail_compose",
			"contents": "imap_mail_compose( ${1:\\$envelope}, ${2:\\$body} )"
		},
		{
			"trigger": "imap_mail_copy",
			"contents": "imap_mail_copy( ${1:\\$stream_id}, ${2:\\$msglist}, ${3:\\$mailbox}${4:, ${5:\\$options}} )"
		},
		{
			"trigger": "imap_mail_move",
			"contents": "imap_mail_move( ${1:\\$stream_id}, ${2:\\$sequence}, ${3:\\$mailbox}${4:, ${5:\\$options}} )"
		},
		{
			"trigger": "imap_mailboxmsginfo",
			"contents": "imap_mailboxmsginfo( ${1:\\$stream_id} )"
		},
		{
			"trigger": "imap_mime_header_decode",
			"contents": "imap_mime_header_decode( ${1:\\$str} )"
		},
		{
			"trigger": "imap_msgno",
			"contents": "imap_msgno( ${1:\\$stream_id}, ${2:\\$unique_msg_id} )"
		},
		{
			"trigger": "imap_num_msg",
			"contents": "imap_num_msg( ${1:\\$stream_id} )"
		},
		{
			"trigger": "imap_num_recent",
			"contents": "imap_num_recent( ${1:\\$stream_id} )"
		},
		{
			"trigger": "imap_open",
			"contents": "imap_open( ${1:\\$mailbox}, ${2:\\$user}, ${3:\\$password}${4:, ${5:\\$options}${6:, ${7:\\$n_retries}${8:, ${9:\\$params}}}} )"
		},
		{
			"trigger": "imap_ping",
			"contents": "imap_ping( ${1:\\$stream_id} )"
		},
		{
			"trigger": "imap_qprint",
			"contents": "imap_qprint( ${1:\\$text} )"
		},
		{
			"trigger": "imap_rename",
			"contents": "imap_rename( ${1:\\$stream_id}, ${2:\\$old_name}, ${3:\\$new_name} )"
		},
		{
			"trigger": "imap_renamemailbox",
			"contents": "imap_renamemailbox( ${1:\\$stream_id}, ${2:\\$old_name}, ${3:\\$new_name} )"
		},
		{
			"trigger": "imap_reopen",
			"contents": "imap_reopen( ${1:\\$stream_id}, ${2:\\$mailbox}${3:, ${4:\\$options}${5:, ${6:\\$n_retries}}} )"
		},
		{
			"trigger": "imap_rfc822_parse_adrlist",
			"contents": "imap_rfc822_parse_adrlist( ${1:\\$address_string}, ${2:\\$default_host} )"
		},
		{
			"trigger": "imap_rfc822_parse_headers",
			"contents": "imap_rfc822_parse_headers( ${1:\\$headers}${2:, ${3:\\$default_host}} )"
		},
		{
			"trigger": "imap_rfc822_write_address",
			"contents": "imap_rfc822_write_address( ${1:\\$mailbox}, ${2:\\$host}, ${3:\\$personal} )"
		},
		{
			"trigger": "imap_savebody",
			"contents": "imap_savebody( ${1:\\$stream_id}, ${2:\\$file}, ${3:\\$msg_no}${4:, ${5:\\$section}${6:, ${7:\\$options}}} )"
		},
		{
			"trigger": "imap_scan",
			"contents": "imap_scan( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern}, ${4:\\$content} )"
		},
		{
			"trigger": "imap_scanmailbox",
			"contents": "imap_scanmailbox( ${1:\\$stream_id}, ${2:\\$ref}, ${3:\\$pattern}, ${4:\\$content} )"
		},
		{
			"trigger": "imap_search",
			"contents": "imap_search( ${1:\\$stream_id}, ${2:\\$criteria}${3:, ${4:\\$options}${5:, ${6:\\$charset}}} )"
		},
		{
			"trigger": "imap_set_quota",
			"contents": "imap_set_quota( ${1:\\$stream_id}, ${2:\\$qroot}, ${3:\\$mailbox_size} )"
		},
		{
			"trigger": "imap_setacl",
			"contents": "imap_setacl( ${1:\\$stream_id}, ${2:\\$mailbox}, ${3:\\$id}, ${4:\\$rights} )"
		},
		{
			"trigger": "imap_setflag_full",
			"contents": "imap_setflag_full( ${1:\\$stream_id}, ${2:\\$sequence}, ${3:\\$flag}${4:, ${5:\\$options}} )"
		},
		{
			"trigger": "imap_sort",
			"contents": "imap_sort( ${1:\\$stream_id}, ${2:\\$criteria}, ${3:\\$reverse}${4:, ${5:\\$options}${6:, ${7:\\$search_criteria}${8:, ${9:\\$charset}}}} )"
		},
		{
			"trigger": "imap_status",
			"contents": "imap_status( ${1:\\$stream_id}, ${2:\\$mailbox}, ${3:\\$options} )"
		},
		{
			"trigger": "imap_subscribe",
			"contents": "imap_subscribe( ${1:\\$stream_id}, ${2:\\$mailbox} )"
		},
		{
			"trigger": "imap_thread",
			"contents": "imap_thread( ${1:\\$stream_id}${2:, ${3:\\$options}} )"
		},
		{
			"trigger": "imap_timeout",
			"contents": "imap_timeout( ${1:\\$timeout_type}${2:, ${3:\\$timeout}} )"
		},
		{
			"trigger": "imap_uid",
			"contents": "imap_uid( ${1:\\$stream_id}, ${2:\\$msg_no} )"
		},
		{
			"trigger": "imap_undelete",
			"contents": "imap_undelete( ${1:\\$stream_id}, ${2:\\$msg_no}${3:, ${4:\\$flags}} )"
		},
		{
			"trigger": "imap_unsubscribe",
			"contents": "imap_unsubscribe( ${1:\\$stream_id}, ${2:\\$mailbox} )"
		},
		{
			"trigger": "imap_utf7_decode",
			"contents": "imap_utf7_decode( ${1:\\$buf} )"
		},
		{
			"trigger": "imap_utf7_encode",
			"contents": "imap_utf7_encode( ${1:\\$buf} )"
		},
		{
			"trigger": "imap_utf8",
			"contents": "imap_utf8( ${1:\\$mime_encoded_text} )"
		},
		{
			"trigger": "implode",
			"contents": "implode( ${1:\\$glue}, ${2:\\$pieces} )"
		},
		{
			"trigger": "in_array",
			"contents": "in_array( ${1:\\$needle}, ${2:\\$haystack}${3:, ${4:\\$strict}} )"
		},
		{
			"trigger": "inet_ntop",
			"contents": "inet_ntop( ${1:\\$in_addr} )"
		},
		{
			"trigger": "inet_pton",
			"contents": "inet_pton( ${1:\\$ip_address} )"
		},
		{
			"trigger": "ini_alter",
			"contents": "ini_alter( ${1:\\$varname}, ${2:\\$newvalue} )"
		},
		{
			"trigger": "ini_get",
			"contents": "ini_get( ${1:\\$varname} )"
		},
		{
			"trigger": "ini_get_all",
			"contents": "ini_get_all(${1: ${2:\\$extension} })"
		},
		{
			"trigger": "ini_restore",
			"contents": "ini_restore( ${1:\\$varname} )"
		},
		{
			"trigger": "ini_set",
			"contents": "ini_set( ${1:\\$varname}, ${2:\\$newvalue} )"
		},
		{
			"trigger": "interface_exists",
			"contents": "interface_exists( ${1:\\$classname}${2:, ${3:\\$autoload}} )"
		},
		{
			"trigger": "intval",
			"contents": "intval( ${1:\\$var}${2:, ${3:\\$base}} )"
		},
		{
			"trigger": "ip2long",
			"contents": "ip2long( ${1:\\$ip_address} )"
		},
		{
			"trigger": "iptcembed",
			"contents": "iptcembed( ${1:\\$iptcdata}, ${2:\\$jpeg_file_name}${3:, ${4:\\$spool}} )"
		},
		{
			"trigger": "iptcparse",
			"contents": "iptcparse( ${1:\\$iptcdata} )"
		},
		{
			"trigger": "is_a",
			"contents": "is_a( ${1:\\$object}, ${2:\\$class_name}${3:, ${4:\\$allow_string}} )"
		},
		{
			"trigger": "is_array",
			"contents": "is_array( ${1:\\$var} )"
		},
		{
			"trigger": "is_bool",
			"contents": "is_bool( ${1:\\$var} )"
		},
		{
			"trigger": "is_callable",
			"contents": "is_callable( ${1:\\$var}${2:, ${3:\\$syntax_only}${4:, ${5:\\$callable_name}}} )"
		},
		{
			"trigger": "is_dir",
			"contents": "is_dir( ${1:\\$filename} )"
		},
		{
			"trigger": "is_double",
			"contents": "is_double( ${1:\\$var} )"
		},
		{
			"trigger": "is_executable",
			"contents": "is_executable( ${1:\\$filename} )"
		},
		{
			"trigger": "is_file",
			"contents": "is_file( ${1:\\$filename} )"
		},
		{
			"trigger": "is_finite",
			"contents": "is_finite( ${1:\\$val} )"
		},
		{
			"trigger": "is_float",
			"contents": "is_float( ${1:\\$var} )"
		},
		{
			"trigger": "is_infinite",
			"contents": "is_infinite( ${1:\\$val} )"
		},
		{
			"trigger": "is_int",
			"contents": "is_int( ${1:\\$var} )"
		},
		{
			"trigger": "is_integer",
			"contents": "is_integer( ${1:\\$var} )"
		},
		{
			"trigger": "is_link",
			"contents": "is_link( ${1:\\$filename} )"
		},
		{
			"trigger": "is_long",
			"contents": "is_long( ${1:\\$var} )"
		},
		{
			"trigger": "is_nan",
			"contents": "is_nan( ${1:\\$val} )"
		},
		{
			"trigger": "is_null",
			"contents": "is_null( ${1:\\$var} )"
		},
		{
			"trigger": "is_numeric",
			"contents": "is_numeric( ${1:\\$value} )"
		},
		{
			"trigger": "is_object",
			"contents": "is_object( ${1:\\$var} )"
		},
		{
			"trigger": "is_readable",
			"contents": "is_readable( ${1:\\$filename} )"
		},
		{
			"trigger": "is_real",
			"contents": "is_real( ${1:\\$var} )"
		},
		{
			"trigger": "is_resource",
			"contents": "is_resource( ${1:\\$var} )"
		},
		{
			"trigger": "is_scalar",
			"contents": "is_scalar( ${1:\\$value} )"
		},
		{
			"trigger": "is_soap_fault",
			"contents": "is_soap_fault( ${1:\\$object} )"
		},
		{
			"trigger": "is_string",
			"contents": "is_string( ${1:\\$var} )"
		},
		{
			"trigger": "is_subclass_of",
			"contents": "is_subclass_of( ${1:\\$object}, ${2:\\$class_name}${3:, ${4:\\$allow_string}} )"
		},
		{
			"trigger": "is_uploaded_file",
			"contents": "is_uploaded_file( ${1:\\$path} )"
		},
		{
			"trigger": "is_writable",
			"contents": "is_writable( ${1:\\$filename} )"
		},
		{
			"trigger": "is_writeable",
			"contents": "is_writeable( ${1:\\$filename} )"
		},
		{
			"trigger": "iterator_apply",
			"contents": "iterator_apply( ${1:\\$iterator}, ${2:\\$function}${3:, ${4:\\$args}} )"
		},
		{
			"trigger": "iterator_count",
			"contents": "iterator_count( ${1:\\$iterator} )"
		},
		{
			"trigger": "iterator_to_array",
			"contents": "iterator_to_array( ${1:\\$iterator}${2:, ${3:\\$use_keys}} )"
		},
		{
			"trigger": "jddayofweek",
			"contents": "jddayofweek( ${1:\\$juliandaycount}${2:, ${3:\\$mode}} )"
		},
		{
			"trigger": "jdmonthname",
			"contents": "jdmonthname( ${1:\\$juliandaycount}, ${2:\\$mode} )"
		},
		{
			"trigger": "jdtofrench",
			"contents": "jdtofrench( ${1:\\$juliandaycount} )"
		},
		{
			"trigger": "jdtogregorian",
			"contents": "jdtogregorian( ${1:\\$juliandaycount} )"
		},
		{
			"trigger": "jdtojewish",
			"contents": "jdtojewish( ${1:\\$juliandaycount}${2:, ${3:\\$hebrew}${4:, ${5:\\$fl}}} )"
		},
		{
			"trigger": "jdtojulian",
			"contents": "jdtojulian( ${1:\\$juliandaycount} )"
		},
		{
			"trigger": "jdtounix",
			"contents": "jdtounix( ${1:\\$jday} )"
		},
		{
			"trigger": "jewishtojd",
			"contents": "jewishtojd( ${1:\\$month}, ${2:\\$day}, ${3:\\$year} )"
		},
		{
			"trigger": "join",
			"contents": "join( ${1:\\$glue}, ${2:\\$pieces} )"
		},
		{
			"trigger": "jpeg2wbmp",
			"contents": "jpeg2wbmp( ${1:\\$f_org}, ${2:\\$f_dest}, ${3:\\$d_height}, ${4:\\$d_width}, ${5:\\$d_threshold} )"
		},
		{
			"trigger": "json_decode",
			"contents": "json_decode( ${1:\\$json}${2:, ${3:\\$assoc}${4:, ${5:\\$depth}${6:, ${7:\\$options}}}} )"
		},
		{
			"trigger": "json_encode",
			"contents": "json_encode( ${1:\\$value}${2:, ${3:\\$options}} )"
		},
		{
			"trigger": "json_last_error",
			"contents": "json_last_error()"
		},
		{
			"trigger": "juliantojd",
			"contents": "juliantojd( ${1:\\$month}, ${2:\\$day}, ${3:\\$year} )"
		},
		{
			"trigger": "key",
			"contents": "key( ${1:\\$arg} )"
		},
		{
			"trigger": "key_exists",
			"contents": "key_exists( ${1:\\$key}, ${2:\\$search} )"
		},
		{
			"trigger": "krsort",
			"contents": "krsort( ${1:\\$arg}${2:, ${3:\\$sort_flags}} )"
		},
		{
			"trigger": "ksort",
			"contents": "ksort( ${1:\\$arg}${2:, ${3:\\$sort_flags}} )"
		},
		{
			"trigger": "lcfirst",
			"contents": "lcfirst( ${1:\\$str} )"
		},
		{
			"trigger": "lcg_value",
			"contents": "lcg_value()"
		},
		{
			"trigger": "lchgrp",
			"contents": "lchgrp( ${1:\\$filename}, ${2:\\$group} )"
		},
		{
			"trigger": "lchown",
			"contents": "lchown( ${1:\\$filename}, ${2:\\$user} )"
		},
		{
			"trigger": "levenshtein",
			"contents": "levenshtein( ${1:\\$str1}, ${2:\\$str2}, ${3:\\$cost_ins}, ${4:\\$cost_rep}, ${5:\\$cost_del} )"
		},
		{
			"trigger": "libxml_clear_errors",
			"contents": "libxml_clear_errors()"
		},
		{
			"trigger": "libxml_disable_entity_loader",
			"contents": "libxml_disable_entity_loader(${1: ${2:\\$disable} })"
		},
		{
			"trigger": "libxml_get_errors",
			"contents": "libxml_get_errors()"
		},
		{
			"trigger": "libxml_get_last_error",
			"contents": "libxml_get_last_error()"
		},
		{
			"trigger": "libxml_set_external_entity_loader",
			"contents": "libxml_set_external_entity_loader( ${1:\\$resolver_function} )"
		},
		{
			"trigger": "libxml_set_streams_context",
			"contents": "libxml_set_streams_context( ${1:\\$context} )"
		},
		{
			"trigger": "libxml_use_internal_errors",
			"contents": "libxml_use_internal_errors(${1: ${2:\\$use_errors} })"
		},
		{
			"trigger": "link",
			"contents": "link( ${1:\\$target}, ${2:\\$link} )"
		},
		{
			"trigger": "linkinfo",
			"contents": "linkinfo( ${1:\\$filename} )"
		},
		{
			"trigger": "localeconv",
			"contents": "localeconv()"
		},
		{
			"trigger": "localtime",
			"contents": "localtime(${1: ${2:\\$timestamp}${3:, ${4:\\$associative_array}} })"
		},
		{
			"trigger": "log",
			"contents": "log( ${1:\\$number}${2:, ${3:\\$base}} )"
		},
		{
			"trigger": "log10",
			"contents": "log10( ${1:\\$number} )"
		},
		{
			"trigger": "log1p",
			"contents": "log1p( ${1:\\$number} )"
		},
		{
			"trigger": "long2ip",
			"contents": "long2ip( ${1:\\$proper_address} )"
		},
		{
			"trigger": "lstat",
			"contents": "lstat( ${1:\\$filename} )"
		},
		{
			"trigger": "ltrim",
			"contents": "ltrim( ${1:\\$str}${2:, ${3:\\$character_mask}} )"
		},
		{
			"trigger": "magic_quotes_runtime",
			"contents": "magic_quotes_runtime( ${1:\\$new_setting} )"
		},
		{
			"trigger": "mail",
			"contents": "mail( ${1:\\$to}, ${2:\\$subject}, ${3:\\$message}${4:, ${5:\\$additional_headers}${6:, ${7:\\$additional_parameters}}} )"
		},
		{
			"trigger": "max",
			"contents": "max( ${1:\\$arg1}${2:, ${3:\\$arg2}${4:, ${5:\\$...}}} )"
		},
		{
			"trigger": "mb_check_encoding",
			"contents": "mb_check_encoding(${1: ${2:\\$var}${3:, ${4:\\$encoding}} })"
		},
		{
			"trigger": "mb_convert_case",
			"contents": "mb_convert_case( ${1:\\$sourcestring}, ${2:\\$mode}${3:, ${4:\\$encoding}} )"
		},
		{
			"trigger": "mb_convert_encoding",
			"contents": "mb_convert_encoding( ${1:\\$str}, ${2:\\$to}${3:, ${4:\\$from}} )"
		},
		{
			"trigger": "mb_convert_kana",
			"contents": "mb_convert_kana( ${1:\\$str}${2:, ${3:\\$option}${4:, ${5:\\$encoding}}} )"
		},
		{
			"trigger": "mb_convert_variables",
			"contents": "mb_convert_variables( ${1:\\$to}, ${2:\\$from}, ${3:\\$...} )"
		},
		{
			"trigger": "mb_decode_mimeheader",
			"contents": "mb_decode_mimeheader( ${1:\\$string} )"
		},
		{
			"trigger": "mb_decode_numericentity",
			"contents": "mb_decode_numericentity( ${1:\\$string}, ${2:\\$convmap}${3:, ${4:\\$encoding}} )"
		},
		{
			"trigger": "mb_detect_encoding",
			"contents": "mb_detect_encoding( ${1:\\$str}${2:, ${3:\\$encoding_list}${4:, ${5:\\$strict}}} )"
		},
		{
			"trigger": "mb_detect_order",
			"contents": "mb_detect_order(${1: ${2:\\$encoding} })"
		},
		{
			"trigger": "mb_encode_mimeheader",
			"contents": "mb_encode_mimeheader( ${1:\\$str}${2:, ${3:\\$charset}${4:, ${5:\\$transfer}${6:, ${7:\\$linefeed}${8:, ${9:\\$indent}}}}} )"
		},
		{
			"trigger": "mb_encode_numericentity",
			"contents": "mb_encode_numericentity( ${1:\\$string}, ${2:\\$convmap}${3:, ${4:\\$encoding}${5:, ${6:\\$is_hex}}} )"
		},
		{
			"trigger": "mb_encoding_aliases",
			"contents": "mb_encoding_aliases( ${1:\\$encoding} )"
		},
		{
			"trigger": "mb_ereg",
			"contents": "mb_ereg( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$registers}} )"
		},
		{
			"trigger": "mb_ereg_match",
			"contents": "mb_ereg_match( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$option}} )"
		},
		{
			"trigger": "mb_ereg_replace",
			"contents": "mb_ereg_replace( ${1:\\$pattern}, ${2:\\$replacement}, ${3:\\$string}${4:, ${5:\\$option}} )"
		},
		{
			"trigger": "mb_ereg_replace_callback",
			"contents": "mb_ereg_replace_callback( ${1:\\$pattern}, ${2:\\$callback}, ${3:\\$string}${4:, ${5:\\$option}} )"
		},
		{
			"trigger": "mb_ereg_search",
			"contents": "mb_ereg_search(${1: ${2:\\$pattern}${3:, ${4:\\$option}} })"
		},
		{
			"trigger": "mb_ereg_search_getpos",
			"contents": "mb_ereg_search_getpos()"
		},
		{
			"trigger": "mb_ereg_search_getregs",
			"contents": "mb_ereg_search_getregs()"
		},
		{
			"trigger": "mb_ereg_search_init",
			"contents": "mb_ereg_search_init( ${1:\\$string}${2:, ${3:\\$pattern}${4:, ${5:\\$option}}} )"
		},
		{
			"trigger": "mb_ereg_search_pos",
			"contents": "mb_ereg_search_pos(${1: ${2:\\$pattern}${3:, ${4:\\$option}} })"
		},
		{
			"trigger": "mb_ereg_search_regs",
			"contents": "mb_ereg_search_regs(${1: ${2:\\$pattern}${3:, ${4:\\$option}} })"
		},
		{
			"trigger": "mb_ereg_search_setpos",
			"contents": "mb_ereg_search_setpos( ${1:\\$position} )"
		},
		{
			"trigger": "mb_eregi",
			"contents": "mb_eregi( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$registers}} )"
		},
		{
			"trigger": "mb_eregi_replace",
			"contents": "mb_eregi_replace( ${1:\\$pattern}, ${2:\\$replacement}, ${3:\\$string} )"
		},
		{
			"trigger": "mb_get_info",
			"contents": "mb_get_info(${1: ${2:\\$type} })"
		},
		{
			"trigger": "mb_http_input",
			"contents": "mb_http_input(${1: ${2:\\$type} })"
		},
		{
			"trigger": "mb_http_output",
			"contents": "mb_http_output(${1: ${2:\\$encoding} })"
		},
		{
			"trigger": "mb_internal_encoding",
			"contents": "mb_internal_encoding(${1: ${2:\\$encoding} })"
		},
		{
			"trigger": "mb_language",
			"contents": "mb_language(${1: ${2:\\$language} })"
		},
		{
			"trigger": "mb_list_encodings",
			"contents": "mb_list_encodings()"
		},
		{
			"trigger": "mb_output_handler",
			"contents": "mb_output_handler( ${1:\\$contents}, ${2:\\$status} )"
		},
		{
			"trigger": "mb_parse_str",
			"contents": "mb_parse_str( ${1:\\$encoded_string}${2:, ${3:\\$result}} )"
		},
		{
			"trigger": "mb_preferred_mime_name",
			"contents": "mb_preferred_mime_name( ${1:\\$encoding} )"
		},
		{
			"trigger": "mb_regex_encoding",
			"contents": "mb_regex_encoding(${1: ${2:\\$encoding} })"
		},
		{
			"trigger": "mb_regex_set_options",
			"contents": "mb_regex_set_options(${1: ${2:\\$options} })"
		},
		{
			"trigger": "mb_send_mail",
			"contents": "mb_send_mail( ${1:\\$to}, ${2:\\$subject}, ${3:\\$message}${4:, ${5:\\$additional_headers}${6:, ${7:\\$additional_parameters}}} )"
		},
		{
			"trigger": "mb_split",
			"contents": "mb_split( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$limit}} )"
		},
		{
			"trigger": "mb_strcut",
			"contents": "mb_strcut( ${1:\\$str}, ${2:\\$start}${3:, ${4:\\$length}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strimwidth",
			"contents": "mb_strimwidth( ${1:\\$str}, ${2:\\$start}, ${3:\\$width}${4:, ${5:\\$trimmarker}${6:, ${7:\\$encoding}}} )"
		},
		{
			"trigger": "mb_stripos",
			"contents": "mb_stripos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_stristr",
			"contents": "mb_stristr( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$part}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strlen",
			"contents": "mb_strlen( ${1:\\$str}${2:, ${3:\\$encoding}} )"
		},
		{
			"trigger": "mb_strpos",
			"contents": "mb_strpos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strrchr",
			"contents": "mb_strrchr( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$part}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strrichr",
			"contents": "mb_strrichr( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$part}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strripos",
			"contents": "mb_strripos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strrpos",
			"contents": "mb_strrpos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strstr",
			"contents": "mb_strstr( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$part}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_strtolower",
			"contents": "mb_strtolower( ${1:\\$sourcestring}${2:, ${3:\\$encoding}} )"
		},
		{
			"trigger": "mb_strtoupper",
			"contents": "mb_strtoupper( ${1:\\$sourcestring}${2:, ${3:\\$encoding}} )"
		},
		{
			"trigger": "mb_strwidth",
			"contents": "mb_strwidth( ${1:\\$str}${2:, ${3:\\$encoding}} )"
		},
		{
			"trigger": "mb_substitute_character",
			"contents": "mb_substitute_character(${1: ${2:\\$substchar} })"
		},
		{
			"trigger": "mb_substr",
			"contents": "mb_substr( ${1:\\$str}, ${2:\\$start}${3:, ${4:\\$length}${5:, ${6:\\$encoding}}} )"
		},
		{
			"trigger": "mb_substr_count",
			"contents": "mb_substr_count( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$encoding}} )"
		},
		{
			"trigger": "mbereg",
			"contents": "mbereg( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$registers}} )"
		},
		{
			"trigger": "mbereg_match",
			"contents": "mbereg_match( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$option}} )"
		},
		{
			"trigger": "mbereg_replace",
			"contents": "mbereg_replace( ${1:\\$pattern}, ${2:\\$replacement}, ${3:\\$string}${4:, ${5:\\$option}} )"
		},
		{
			"trigger": "mbereg_search",
			"contents": "mbereg_search(${1: ${2:\\$pattern}${3:, ${4:\\$option}} })"
		},
		{
			"trigger": "mbereg_search_getpos",
			"contents": "mbereg_search_getpos()"
		},
		{
			"trigger": "mbereg_search_getregs",
			"contents": "mbereg_search_getregs()"
		},
		{
			"trigger": "mbereg_search_init",
			"contents": "mbereg_search_init( ${1:\\$string}${2:, ${3:\\$pattern}${4:, ${5:\\$option}}} )"
		},
		{
			"trigger": "mbereg_search_pos",
			"contents": "mbereg_search_pos(${1: ${2:\\$pattern}${3:, ${4:\\$option}} })"
		},
		{
			"trigger": "mbereg_search_regs",
			"contents": "mbereg_search_regs(${1: ${2:\\$pattern}${3:, ${4:\\$option}} })"
		},
		{
			"trigger": "mbereg_search_setpos",
			"contents": "mbereg_search_setpos( ${1:\\$position} )"
		},
		{
			"trigger": "mberegi",
			"contents": "mberegi( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$registers}} )"
		},
		{
			"trigger": "mberegi_replace",
			"contents": "mberegi_replace( ${1:\\$pattern}, ${2:\\$replacement}, ${3:\\$string} )"
		},
		{
			"trigger": "mbregex_encoding",
			"contents": "mbregex_encoding(${1: ${2:\\$encoding} })"
		},
		{
			"trigger": "mbsplit",
			"contents": "mbsplit( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$limit}} )"
		},
		{
			"trigger": "mcrypt_cbc",
			"contents": "mcrypt_cbc( ${1:\\$cipher}, ${2:\\$key}, ${3:\\$data}, ${4:\\$mode}, ${5:\\$iv} )"
		},
		{
			"trigger": "mcrypt_cfb",
			"contents": "mcrypt_cfb( ${1:\\$cipher}, ${2:\\$key}, ${3:\\$data}, ${4:\\$mode}, ${5:\\$iv} )"
		},
		{
			"trigger": "mcrypt_create_iv",
			"contents": "mcrypt_create_iv( ${1:\\$size}, ${2:\\$source} )"
		},
		{
			"trigger": "mcrypt_decrypt",
			"contents": "mcrypt_decrypt( ${1:\\$cipher}, ${2:\\$key}, ${3:\\$data}, ${4:\\$mode}, ${5:\\$iv} )"
		},
		{
			"trigger": "mcrypt_ecb",
			"contents": "mcrypt_ecb( ${1:\\$cipher}, ${2:\\$key}, ${3:\\$data}, ${4:\\$mode}, ${5:\\$iv} )"
		},
		{
			"trigger": "mcrypt_enc_get_algorithms_name",
			"contents": "mcrypt_enc_get_algorithms_name( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_get_block_size",
			"contents": "mcrypt_enc_get_block_size( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_get_iv_size",
			"contents": "mcrypt_enc_get_iv_size( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_get_key_size",
			"contents": "mcrypt_enc_get_key_size( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_get_modes_name",
			"contents": "mcrypt_enc_get_modes_name( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_get_supported_key_sizes",
			"contents": "mcrypt_enc_get_supported_key_sizes( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_is_block_algorithm",
			"contents": "mcrypt_enc_is_block_algorithm( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_is_block_algorithm_mode",
			"contents": "mcrypt_enc_is_block_algorithm_mode( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_is_block_mode",
			"contents": "mcrypt_enc_is_block_mode( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_enc_self_test",
			"contents": "mcrypt_enc_self_test( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_encrypt",
			"contents": "mcrypt_encrypt( ${1:\\$cipher}, ${2:\\$key}, ${3:\\$data}, ${4:\\$mode}, ${5:\\$iv} )"
		},
		{
			"trigger": "mcrypt_generic",
			"contents": "mcrypt_generic( ${1:\\$td}, ${2:\\$data} )"
		},
		{
			"trigger": "mcrypt_generic_deinit",
			"contents": "mcrypt_generic_deinit( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_generic_end",
			"contents": "mcrypt_generic_end( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_generic_init",
			"contents": "mcrypt_generic_init( ${1:\\$td}, ${2:\\$key}, ${3:\\$iv} )"
		},
		{
			"trigger": "mcrypt_get_block_size",
			"contents": "mcrypt_get_block_size( ${1:\\$cipher}, ${2:\\$module} )"
		},
		{
			"trigger": "mcrypt_get_cipher_name",
			"contents": "mcrypt_get_cipher_name( ${1:\\$cipher} )"
		},
		{
			"trigger": "mcrypt_get_iv_size",
			"contents": "mcrypt_get_iv_size( ${1:\\$cipher}, ${2:\\$module} )"
		},
		{
			"trigger": "mcrypt_get_key_size",
			"contents": "mcrypt_get_key_size( ${1:\\$cipher}, ${2:\\$module} )"
		},
		{
			"trigger": "mcrypt_list_algorithms",
			"contents": "mcrypt_list_algorithms(${1: ${2:\\$lib_dir} })"
		},
		{
			"trigger": "mcrypt_list_modes",
			"contents": "mcrypt_list_modes(${1: ${2:\\$lib_dir} })"
		},
		{
			"trigger": "mcrypt_module_close",
			"contents": "mcrypt_module_close( ${1:\\$td} )"
		},
		{
			"trigger": "mcrypt_module_get_algo_block_size",
			"contents": "mcrypt_module_get_algo_block_size( ${1:\\$algorithm}${2:, ${3:\\$lib_dir}} )"
		},
		{
			"trigger": "mcrypt_module_get_algo_key_size",
			"contents": "mcrypt_module_get_algo_key_size( ${1:\\$algorithm}${2:, ${3:\\$lib_dir}} )"
		},
		{
			"trigger": "mcrypt_module_get_supported_key_sizes",
			"contents": "mcrypt_module_get_supported_key_sizes( ${1:\\$algorithm}${2:, ${3:\\$lib_dir}} )"
		},
		{
			"trigger": "mcrypt_module_is_block_algorithm",
			"contents": "mcrypt_module_is_block_algorithm( ${1:\\$algorithm}${2:, ${3:\\$lib_dir}} )"
		},
		{
			"trigger": "mcrypt_module_is_block_algorithm_mode",
			"contents": "mcrypt_module_is_block_algorithm_mode( ${1:\\$mode}${2:, ${3:\\$lib_dir}} )"
		},
		{
			"trigger": "mcrypt_module_is_block_mode",
			"contents": "mcrypt_module_is_block_mode( ${1:\\$mode}${2:, ${3:\\$lib_dir}} )"
		},
		{
			"trigger": "mcrypt_module_open",
			"contents": "mcrypt_module_open( ${1:\\$cipher}, ${2:\\$cipher_directory}, ${3:\\$mode}, ${4:\\$mode_directory} )"
		},
		{
			"trigger": "mcrypt_module_self_test",
			"contents": "mcrypt_module_self_test( ${1:\\$algorithm}${2:, ${3:\\$lib_dir}} )"
		},
		{
			"trigger": "mcrypt_ofb",
			"contents": "mcrypt_ofb( ${1:\\$cipher}, ${2:\\$key}, ${3:\\$data}, ${4:\\$mode}, ${5:\\$iv} )"
		},
		{
			"trigger": "md5",
			"contents": "md5( ${1:\\$str}${2:, ${3:\\$raw_output}} )"
		},
		{
			"trigger": "md5_file",
			"contents": "md5_file( ${1:\\$filename}${2:, ${3:\\$raw_output}} )"
		},
		{
			"trigger": "mdecrypt_generic",
			"contents": "mdecrypt_generic( ${1:\\$td}, ${2:\\$data} )"
		},
		{
			"trigger": "memcache_add",
			"contents": "memcache_add()"
		},
		{
			"trigger": "memcache_add_server",
			"contents": "memcache_add_server()"
		},
		{
			"trigger": "memcache_append",
			"contents": "memcache_append()"
		},
		{
			"trigger": "memcache_cas",
			"contents": "memcache_cas()"
		},
		{
			"trigger": "memcache_close",
			"contents": "memcache_close()"
		},
		{
			"trigger": "memcache_connect",
			"contents": "memcache_connect()"
		},
		{
			"trigger": "memcache_debug",
			"contents": "memcache_debug()"
		},
		{
			"trigger": "memcache_decrement",
			"contents": "memcache_decrement()"
		},
		{
			"trigger": "memcache_delete",
			"contents": "memcache_delete()"
		},
		{
			"trigger": "memcache_flush",
			"contents": "memcache_flush()"
		},
		{
			"trigger": "memcache_get",
			"contents": "memcache_get()"
		},
		{
			"trigger": "memcache_get_extended_stats",
			"contents": "memcache_get_extended_stats()"
		},
		{
			"trigger": "memcache_get_server_status",
			"contents": "memcache_get_server_status()"
		},
		{
			"trigger": "memcache_get_stats",
			"contents": "memcache_get_stats()"
		},
		{
			"trigger": "memcache_get_version",
			"contents": "memcache_get_version()"
		},
		{
			"trigger": "memcache_increment",
			"contents": "memcache_increment()"
		},
		{
			"trigger": "memcache_pconnect",
			"contents": "memcache_pconnect()"
		},
		{
			"trigger": "memcache_prepend",
			"contents": "memcache_prepend()"
		},
		{
			"trigger": "memcache_replace",
			"contents": "memcache_replace()"
		},
		{
			"trigger": "memcache_set",
			"contents": "memcache_set()"
		},
		{
			"trigger": "memcache_set_compress_threshold",
			"contents": "memcache_set_compress_threshold()"
		},
		{
			"trigger": "memcache_set_failure_callback",
			"contents": "memcache_set_failure_callback()"
		},
		{
			"trigger": "memcache_set_server_params",
			"contents": "memcache_set_server_params()"
		},
		{
			"trigger": "memory_get_peak_usage",
			"contents": "memory_get_peak_usage(${1: ${2:\\$real_usage} })"
		},
		{
			"trigger": "memory_get_usage",
			"contents": "memory_get_usage(${1: ${2:\\$real_usage} })"
		},
		{
			"trigger": "metaphone",
			"contents": "metaphone( ${1:\\$text}${2:, ${3:\\$phones}} )"
		},
		{
			"trigger": "method_exists",
			"contents": "method_exists( ${1:\\$object}, ${2:\\$method} )"
		},
		{
			"trigger": "mhash",
			"contents": "mhash( ${1:\\$hash}, ${2:\\$data}${3:, ${4:\\$key}} )"
		},
		{
			"trigger": "mhash_count",
			"contents": "mhash_count()"
		},
		{
			"trigger": "mhash_get_block_size",
			"contents": "mhash_get_block_size( ${1:\\$hash} )"
		},
		{
			"trigger": "mhash_get_hash_name",
			"contents": "mhash_get_hash_name( ${1:\\$hash} )"
		},
		{
			"trigger": "mhash_keygen_s2k",
			"contents": "mhash_keygen_s2k( ${1:\\$hash}, ${2:\\$input_password}, ${3:\\$salt}, ${4:\\$bytes} )"
		},
		{
			"trigger": "microtime",
			"contents": "microtime(${1: ${2:\\$get_as_float} })"
		},
		{
			"trigger": "mime_content_type",
			"contents": "mime_content_type( ${1:\\$string} )"
		},
		{
			"trigger": "min",
			"contents": "min( ${1:\\$arg1}${2:, ${3:\\$arg2}${4:, ${5:\\$...}}} )"
		},
		{
			"trigger": "mkdir",
			"contents": "mkdir( ${1:\\$pathname}${2:, ${3:\\$mode}${4:, ${5:\\$recursive}${6:, ${7:\\$context}}}} )"
		},
		{
			"trigger": "mktime",
			"contents": "mktime(${1: ${2:\\$hour}${3:, ${4:\\$min}${5:, ${6:\\$sec}${7:, ${8:\\$mon}${9:, ${10:\\$day}${11:, ${12:\\$year}}}}}} })"
		},
		{
			"trigger": "money_format",
			"contents": "money_format( ${1:\\$format}, ${2:\\$value} )"
		},
		{
			"trigger": "move_uploaded_file",
			"contents": "move_uploaded_file( ${1:\\$path}, ${2:\\$new_path} )"
		},
		{
			"trigger": "msg_get_queue",
			"contents": "msg_get_queue( ${1:\\$key}${2:, ${3:\\$perms}} )"
		},
		{
			"trigger": "msg_queue_exists",
			"contents": "msg_queue_exists( ${1:\\$key} )"
		},
		{
			"trigger": "msg_receive",
			"contents": "msg_receive( ${1:\\$queue}, ${2:\\$desiredmsgtype}, ${3:\\$msgtype}, ${4:\\$maxsize}, ${5:\\$message}${6:, ${7:\\$unserialize}${8:, ${9:\\$flags}${10:, ${11:\\$errorcode}}}} )"
		},
		{
			"trigger": "msg_remove_queue",
			"contents": "msg_remove_queue( ${1:\\$queue} )"
		},
		{
			"trigger": "msg_send",
			"contents": "msg_send( ${1:\\$queue}, ${2:\\$msgtype}, ${3:\\$message}${4:, ${5:\\$serialize}${6:, ${7:\\$blocking}${8:, ${9:\\$errorcode}}}} )"
		},
		{
			"trigger": "msg_set_queue",
			"contents": "msg_set_queue( ${1:\\$queue}, ${2:\\$data} )"
		},
		{
			"trigger": "msg_stat_queue",
			"contents": "msg_stat_queue( ${1:\\$queue} )"
		},
		{
			"trigger": "mt_getrandmax",
			"contents": "mt_getrandmax()"
		},
		{
			"trigger": "mt_rand",
			"contents": "mt_rand(${1: ${2:\\$min}${3:, ${4:\\$max}} })"
		},
		{
			"trigger": "mt_srand",
			"contents": "mt_srand(${1: ${2:\\$seed} })"
		},
		{
			"trigger": "mysql",
			"contents": "mysql( ${1:\\$database_name}, ${2:\\$query}${3:, ${4:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_affected_rows",
			"contents": "mysql_affected_rows(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_client_encoding",
			"contents": "mysql_client_encoding(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_close",
			"contents": "mysql_close(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_connect",
			"contents": "mysql_connect(${1: ${2:\\$hostname}${3:, ${4:\\$username}${5:, ${6:\\$password}${7:, ${8:\\$new}${9:, ${10:\\$flags}}}}} })"
		},
		{
			"trigger": "mysql_data_seek",
			"contents": "mysql_data_seek( ${1:\\$result}, ${2:\\$row_number} )"
		},
		{
			"trigger": "mysql_db_name",
			"contents": "mysql_db_name( ${1:\\$result}, ${2:\\$row}${3:, ${4:\\$field}} )"
		},
		{
			"trigger": "mysql_db_query",
			"contents": "mysql_db_query( ${1:\\$database_name}, ${2:\\$query}${3:, ${4:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_dbname",
			"contents": "mysql_dbname( ${1:\\$result}, ${2:\\$row}${3:, ${4:\\$field}} )"
		},
		{
			"trigger": "mysql_errno",
			"contents": "mysql_errno(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_error",
			"contents": "mysql_error(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_escape_string",
			"contents": "mysql_escape_string( ${1:\\$string} )"
		},
		{
			"trigger": "mysql_fetch_array",
			"contents": "mysql_fetch_array( ${1:\\$result}${2:, ${3:\\$result_type}} )"
		},
		{
			"trigger": "mysql_fetch_assoc",
			"contents": "mysql_fetch_assoc( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_fetch_field",
			"contents": "mysql_fetch_field( ${1:\\$result}${2:, ${3:\\$field_offset}} )"
		},
		{
			"trigger": "mysql_fetch_lengths",
			"contents": "mysql_fetch_lengths( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_fetch_object",
			"contents": "mysql_fetch_object( ${1:\\$result}${2:, ${3:\\$class_name}${4:, ${5:\\$ctor_params}}} )"
		},
		{
			"trigger": "mysql_fetch_row",
			"contents": "mysql_fetch_row( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_field_flags",
			"contents": "mysql_field_flags( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_field_len",
			"contents": "mysql_field_len( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_field_name",
			"contents": "mysql_field_name( ${1:\\$result}, ${2:\\$field_index} )"
		},
		{
			"trigger": "mysql_field_seek",
			"contents": "mysql_field_seek( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_field_table",
			"contents": "mysql_field_table( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_field_type",
			"contents": "mysql_field_type( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_fieldflags",
			"contents": "mysql_fieldflags( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_fieldlen",
			"contents": "mysql_fieldlen( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_fieldname",
			"contents": "mysql_fieldname( ${1:\\$result}, ${2:\\$field_index} )"
		},
		{
			"trigger": "mysql_fieldtable",
			"contents": "mysql_fieldtable( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_fieldtype",
			"contents": "mysql_fieldtype( ${1:\\$result}, ${2:\\$field_offset} )"
		},
		{
			"trigger": "mysql_free_result",
			"contents": "mysql_free_result( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_freeresult",
			"contents": "mysql_freeresult( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_get_client_info",
			"contents": "mysql_get_client_info()"
		},
		{
			"trigger": "mysql_get_host_info",
			"contents": "mysql_get_host_info(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_get_proto_info",
			"contents": "mysql_get_proto_info(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_get_server_info",
			"contents": "mysql_get_server_info(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_info",
			"contents": "mysql_info(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_insert_id",
			"contents": "mysql_insert_id(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_list_dbs",
			"contents": "mysql_list_dbs(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_list_fields",
			"contents": "mysql_list_fields( ${1:\\$database_name}, ${2:\\$table_name}${3:, ${4:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_list_processes",
			"contents": "mysql_list_processes(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_list_tables",
			"contents": "mysql_list_tables( ${1:\\$database_name}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_listdbs",
			"contents": "mysql_listdbs(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_listfields",
			"contents": "mysql_listfields( ${1:\\$database_name}, ${2:\\$table_name}${3:, ${4:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_listtables",
			"contents": "mysql_listtables( ${1:\\$database_name}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_num_fields",
			"contents": "mysql_num_fields( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_num_rows",
			"contents": "mysql_num_rows( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_numfields",
			"contents": "mysql_numfields( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_numrows",
			"contents": "mysql_numrows( ${1:\\$result} )"
		},
		{
			"trigger": "mysql_pconnect",
			"contents": "mysql_pconnect(${1: ${2:\\$hostname}${3:, ${4:\\$username}${5:, ${6:\\$password}${7:, ${8:\\$flags}}}} })"
		},
		{
			"trigger": "mysql_ping",
			"contents": "mysql_ping(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_query",
			"contents": "mysql_query( ${1:\\$query}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_real_escape_string",
			"contents": "mysql_real_escape_string( ${1:\\$string}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_result",
			"contents": "mysql_result( ${1:\\$result}, ${2:\\$row}${3:, ${4:\\$field}} )"
		},
		{
			"trigger": "mysql_select_db",
			"contents": "mysql_select_db( ${1:\\$database_name}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_selectdb",
			"contents": "mysql_selectdb( ${1:\\$database_name}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_set_charset",
			"contents": "mysql_set_charset( ${1:\\$charset_name}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysql_stat",
			"contents": "mysql_stat(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_table_name",
			"contents": "mysql_table_name( ${1:\\$result}, ${2:\\$row}${3:, ${4:\\$field}} )"
		},
		{
			"trigger": "mysql_tablename",
			"contents": "mysql_tablename( ${1:\\$result}, ${2:\\$row}${3:, ${4:\\$field}} )"
		},
		{
			"trigger": "mysql_thread_id",
			"contents": "mysql_thread_id(${1: ${2:\\$link_identifier} })"
		},
		{
			"trigger": "mysql_unbuffered_query",
			"contents": "mysql_unbuffered_query( ${1:\\$query}${2:, ${3:\\$link_identifier}} )"
		},
		{
			"trigger": "mysqli_affected_rows",
			"contents": "mysqli_affected_rows( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_autocommit",
			"contents": "mysqli_autocommit( ${1:\\$link}, ${2:\\$mode} )"
		},
		{
			"trigger": "mysqli_change_user",
			"contents": "mysqli_change_user( ${1:\\$link}, ${2:\\$user}, ${3:\\$password}, ${4:\\$database} )"
		},
		{
			"trigger": "mysqli_character_set_name",
			"contents": "mysqli_character_set_name( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_close",
			"contents": "mysqli_close( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_commit",
			"contents": "mysqli_commit( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_connect",
			"contents": "mysqli_connect(${1: ${2:\\$host}${3:, ${4:\\$user}${5:, ${6:\\$password}${7:, ${8:\\$database}${9:, ${10:\\$port}${11:, ${12:\\$socket}}}}}} })"
		},
		{
			"trigger": "mysqli_connect_errno",
			"contents": "mysqli_connect_errno()"
		},
		{
			"trigger": "mysqli_connect_error",
			"contents": "mysqli_connect_error()"
		},
		{
			"trigger": "mysqli_data_seek",
			"contents": "mysqli_data_seek( ${1:\\$result}, ${2:\\$offset} )"
		},
		{
			"trigger": "mysqli_debug",
			"contents": "mysqli_debug( ${1:\\$debug_options} )"
		},
		{
			"trigger": "mysqli_dump_debug_info",
			"contents": "mysqli_dump_debug_info( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_errno",
			"contents": "mysqli_errno( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_error",
			"contents": "mysqli_error( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_error_list",
			"contents": "mysqli_error_list( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_escape_string",
			"contents": "mysqli_escape_string( ${1:\\$link}, ${2:\\$query} )"
		},
		{
			"trigger": "mysqli_execute",
			"contents": "mysqli_execute( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_fetch_array",
			"contents": "mysqli_fetch_array( ${1:\\$result}${2:, ${3:\\$result_type}} )"
		},
		{
			"trigger": "mysqli_fetch_assoc",
			"contents": "mysqli_fetch_assoc( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_fetch_field",
			"contents": "mysqli_fetch_field( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_fetch_field_direct",
			"contents": "mysqli_fetch_field_direct( ${1:\\$result}, ${2:\\$field_nr} )"
		},
		{
			"trigger": "mysqli_fetch_fields",
			"contents": "mysqli_fetch_fields( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_fetch_lengths",
			"contents": "mysqli_fetch_lengths( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_fetch_object",
			"contents": "mysqli_fetch_object( ${1:\\$result}${2:, ${3:\\$class_name}${4:, ${5:\\$params}}} )"
		},
		{
			"trigger": "mysqli_fetch_row",
			"contents": "mysqli_fetch_row( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_field_count",
			"contents": "mysqli_field_count( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_field_seek",
			"contents": "mysqli_field_seek( ${1:\\$result}, ${2:\\$field_nr} )"
		},
		{
			"trigger": "mysqli_field_tell",
			"contents": "mysqli_field_tell( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_free_result",
			"contents": "mysqli_free_result( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_get_charset",
			"contents": "mysqli_get_charset( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_get_client_info",
			"contents": "mysqli_get_client_info( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_get_client_version",
			"contents": "mysqli_get_client_version( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_get_host_info",
			"contents": "mysqli_get_host_info( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_get_proto_info",
			"contents": "mysqli_get_proto_info( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_get_server_info",
			"contents": "mysqli_get_server_info( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_get_server_version",
			"contents": "mysqli_get_server_version( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_get_warnings",
			"contents": "mysqli_get_warnings( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_info",
			"contents": "mysqli_info( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_init",
			"contents": "mysqli_init()"
		},
		{
			"trigger": "mysqli_insert_id",
			"contents": "mysqli_insert_id( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_kill",
			"contents": "mysqli_kill( ${1:\\$link}, ${2:\\$connection_id} )"
		},
		{
			"trigger": "mysqli_more_results",
			"contents": "mysqli_more_results( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_multi_query",
			"contents": "mysqli_multi_query( ${1:\\$link}, ${2:\\$query} )"
		},
		{
			"trigger": "mysqli_next_result",
			"contents": "mysqli_next_result( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_num_fields",
			"contents": "mysqli_num_fields( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_num_rows",
			"contents": "mysqli_num_rows( ${1:\\$result} )"
		},
		{
			"trigger": "mysqli_options",
			"contents": "mysqli_options( ${1:\\$link}, ${2:\\$option}, ${3:\\$value} )"
		},
		{
			"trigger": "mysqli_ping",
			"contents": "mysqli_ping( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_prepare",
			"contents": "mysqli_prepare( ${1:\\$link}, ${2:\\$query} )"
		},
		{
			"trigger": "mysqli_query",
			"contents": "mysqli_query( ${1:\\$link}, ${2:\\$query} )"
		},
		{
			"trigger": "mysqli_real_connect",
			"contents": "mysqli_real_connect( ${1:\\$link}${2:, ${3:\\$host}${4:, ${5:\\$user}${6:, ${7:\\$password}${8:, ${9:\\$database}${10:, ${11:\\$port}${12:, ${13:\\$socket}${14:, ${15:\\$flags}}}}}}}} )"
		},
		{
			"trigger": "mysqli_real_escape_string",
			"contents": "mysqli_real_escape_string( ${1:\\$link}, ${2:\\$string_to_escape} )"
		},
		{
			"trigger": "mysqli_real_query",
			"contents": "mysqli_real_query( ${1:\\$link}, ${2:\\$query} )"
		},
		{
			"trigger": "mysqli_refresh",
			"contents": "mysqli_refresh( ${1:\\$link}, ${2:\\$options} )"
		},
		{
			"trigger": "mysqli_report",
			"contents": "mysqli_report( ${1:\\$flags} )"
		},
		{
			"trigger": "mysqli_rollback",
			"contents": "mysqli_rollback( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_select_db",
			"contents": "mysqli_select_db( ${1:\\$link}, ${2:\\$database} )"
		},
		{
			"trigger": "mysqli_set_charset",
			"contents": "mysqli_set_charset( ${1:\\$link}, ${2:\\$charset} )"
		},
		{
			"trigger": "mysqli_set_local_infile_default",
			"contents": "mysqli_set_local_infile_default( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_set_local_infile_handler",
			"contents": "mysqli_set_local_infile_handler( ${1:\\$link}, ${2:\\$read_callback} )"
		},
		{
			"trigger": "mysqli_set_opt",
			"contents": "mysqli_set_opt()"
		},
		{
			"trigger": "mysqli_sqlstate",
			"contents": "mysqli_sqlstate( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_ssl_set",
			"contents": "mysqli_ssl_set( ${1:\\$link}, ${2:\\$key}, ${3:\\$cert}, ${4:\\$certificate_authority}, ${5:\\$certificate_authority_path}, ${6:\\$cipher} )"
		},
		{
			"trigger": "mysqli_stat",
			"contents": "mysqli_stat( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_stmt_affected_rows",
			"contents": "mysqli_stmt_affected_rows( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_attr_get",
			"contents": "mysqli_stmt_attr_get( ${1:\\$stmt}, ${2:\\$attribute} )"
		},
		{
			"trigger": "mysqli_stmt_attr_set",
			"contents": "mysqli_stmt_attr_set( ${1:\\$stmt}, ${2:\\$attribute}, ${3:\\$value} )"
		},
		{
			"trigger": "mysqli_stmt_bind_param",
			"contents": "mysqli_stmt_bind_param( ${1:\\$stmt}, ${2:\\$types} )"
		},
		{
			"trigger": "mysqli_stmt_bind_result",
			"contents": "mysqli_stmt_bind_result( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_close",
			"contents": "mysqli_stmt_close( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_data_seek",
			"contents": "mysqli_stmt_data_seek( ${1:\\$stmt}, ${2:\\$offset} )"
		},
		{
			"trigger": "mysqli_stmt_errno",
			"contents": "mysqli_stmt_errno( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_error",
			"contents": "mysqli_stmt_error( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_error_list",
			"contents": "mysqli_stmt_error_list( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_execute",
			"contents": "mysqli_stmt_execute( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_fetch",
			"contents": "mysqli_stmt_fetch( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_field_count",
			"contents": "mysqli_stmt_field_count( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_free_result",
			"contents": "mysqli_stmt_free_result( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_get_warnings",
			"contents": "mysqli_stmt_get_warnings( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_init",
			"contents": "mysqli_stmt_init( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_stmt_insert_id",
			"contents": "mysqli_stmt_insert_id( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_num_rows",
			"contents": "mysqli_stmt_num_rows( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_param_count",
			"contents": "mysqli_stmt_param_count( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_prepare",
			"contents": "mysqli_stmt_prepare( ${1:\\$stmt}, ${2:\\$query} )"
		},
		{
			"trigger": "mysqli_stmt_reset",
			"contents": "mysqli_stmt_reset( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_result_metadata",
			"contents": "mysqli_stmt_result_metadata( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_send_long_data",
			"contents": "mysqli_stmt_send_long_data( ${1:\\$stmt}, ${2:\\$param_nr}, ${3:\\$data} )"
		},
		{
			"trigger": "mysqli_stmt_sqlstate",
			"contents": "mysqli_stmt_sqlstate( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_stmt_store_result",
			"contents": "mysqli_stmt_store_result( ${1:\\$stmt} )"
		},
		{
			"trigger": "mysqli_store_result",
			"contents": "mysqli_store_result( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_thread_id",
			"contents": "mysqli_thread_id( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_thread_safe",
			"contents": "mysqli_thread_safe()"
		},
		{
			"trigger": "mysqli_use_result",
			"contents": "mysqli_use_result( ${1:\\$link} )"
		},
		{
			"trigger": "mysqli_warning_count",
			"contents": "mysqli_warning_count( ${1:\\$link} )"
		},
		{
			"trigger": "natcasesort",
			"contents": "natcasesort( ${1:\\$arg} )"
		},
		{
			"trigger": "natsort",
			"contents": "natsort( ${1:\\$arg} )"
		},
		{
			"trigger": "next",
			"contents": "next( ${1:\\$arg} )"
		},
		{
			"trigger": "ngettext",
			"contents": "ngettext( ${1:\\$msgid1}, ${2:\\$msgid2}, ${3:\\$count} )"
		},
		{
			"trigger": "nl2br",
			"contents": "nl2br( ${1:\\$str}${2:, ${3:\\$is_xhtml}} )"
		},
		{
			"trigger": "nl_langinfo",
			"contents": "nl_langinfo( ${1:\\$item} )"
		},
		{
			"trigger": "number_format",
			"contents": "number_format( ${1:\\$number}${2:, ${3:\\$num_decimal_places}${4:, ${5:\\$dec_seperator}${6:, ${7:\\$thousands_seperator}}}} )"
		},
		{
			"trigger": "ob_clean",
			"contents": "ob_clean()"
		},
		{
			"trigger": "ob_end_clean",
			"contents": "ob_end_clean()"
		},
		{
			"trigger": "ob_end_flush",
			"contents": "ob_end_flush()"
		},
		{
			"trigger": "ob_flush",
			"contents": "ob_flush()"
		},
		{
			"trigger": "ob_get_clean",
			"contents": "ob_get_clean()"
		},
		{
			"trigger": "ob_get_contents",
			"contents": "ob_get_contents()"
		},
		{
			"trigger": "ob_get_flush",
			"contents": "ob_get_flush()"
		},
		{
			"trigger": "ob_get_length",
			"contents": "ob_get_length()"
		},
		{
			"trigger": "ob_get_level",
			"contents": "ob_get_level()"
		},
		{
			"trigger": "ob_get_status",
			"contents": "ob_get_status(${1: ${2:\\$full_status} })"
		},
		{
			"trigger": "ob_gzhandler",
			"contents": "ob_gzhandler( ${1:\\$data}, ${2:\\$flags} )"
		},
		{
			"trigger": "ob_implicit_flush",
			"contents": "ob_implicit_flush(${1: ${2:\\$flag} })"
		},
		{
			"trigger": "ob_list_handlers",
			"contents": "ob_list_handlers()"
		},
		{
			"trigger": "ob_start",
			"contents": "ob_start(${1: ${2:\\$user_function}${3:, ${4:\\$chunk_size}${5:, ${6:\\$flags}}} })"
		},
		{
			"trigger": "octdec",
			"contents": "octdec( ${1:\\$octal_number} )"
		},
		{
			"trigger": "opendir",
			"contents": "opendir( ${1:\\$path}${2:, ${3:\\$context}} )"
		},
		{
			"trigger": "openlog",
			"contents": "openlog( ${1:\\$ident}, ${2:\\$option}, ${3:\\$facility} )"
		},
		{
			"trigger": "openssl_cipher_iv_length",
			"contents": "openssl_cipher_iv_length( ${1:\\$method} )"
		},
		{
			"trigger": "openssl_csr_export",
			"contents": "openssl_csr_export( ${1:\\$csr}, ${2:\\$out}${3:, ${4:\\$notext}} )"
		},
		{
			"trigger": "openssl_csr_export_to_file",
			"contents": "openssl_csr_export_to_file( ${1:\\$csr}, ${2:\\$outfilename}${3:, ${4:\\$notext}} )"
		},
		{
			"trigger": "openssl_csr_get_public_key",
			"contents": "openssl_csr_get_public_key( ${1:\\$csr} )"
		},
		{
			"trigger": "openssl_csr_get_subject",
			"contents": "openssl_csr_get_subject( ${1:\\$csr} )"
		},
		{
			"trigger": "openssl_csr_new",
			"contents": "openssl_csr_new( ${1:\\$dn}, ${2:\\$privkey}${3:, ${4:\\$configargs}${5:, ${6:\\$extraattribs}}} )"
		},
		{
			"trigger": "openssl_csr_sign",
			"contents": "openssl_csr_sign( ${1:\\$csr}, ${2:\\$x509}, ${3:\\$priv_key}, ${4:\\$days}${5:, ${6:\\$config_args}${7:, ${8:\\$serial}}} )"
		},
		{
			"trigger": "openssl_decrypt",
			"contents": "openssl_decrypt( ${1:\\$data}, ${2:\\$method}, ${3:\\$password}${4:, ${5:\\$options}${6:, ${7:\\$iv}}} )"
		},
		{
			"trigger": "openssl_dh_compute_key",
			"contents": "openssl_dh_compute_key( ${1:\\$pub_key}, ${2:\\$dh_key} )"
		},
		{
			"trigger": "openssl_digest",
			"contents": "openssl_digest( ${1:\\$data}, ${2:\\$method}${3:, ${4:\\$raw_output}} )"
		},
		{
			"trigger": "openssl_encrypt",
			"contents": "openssl_encrypt( ${1:\\$data}, ${2:\\$method}, ${3:\\$password}${4:, ${5:\\$options}${6:, ${7:\\$iv}}} )"
		},
		{
			"trigger": "openssl_error_string",
			"contents": "openssl_error_string()"
		},
		{
			"trigger": "openssl_free_key",
			"contents": "openssl_free_key( ${1:\\$key} )"
		},
		{
			"trigger": "openssl_get_cipher_methods",
			"contents": "openssl_get_cipher_methods(${1: ${2:\\$aliases} })"
		},
		{
			"trigger": "openssl_get_md_methods",
			"contents": "openssl_get_md_methods(${1: ${2:\\$aliases} })"
		},
		{
			"trigger": "openssl_get_privatekey",
			"contents": "openssl_get_privatekey( ${1:\\$key}${2:, ${3:\\$passphrase}} )"
		},
		{
			"trigger": "openssl_get_publickey",
			"contents": "openssl_get_publickey( ${1:\\$cert} )"
		},
		{
			"trigger": "openssl_open",
			"contents": "openssl_open( ${1:\\$data}, ${2:\\$opendata}, ${3:\\$ekey}, ${4:\\$privkey} )"
		},
		{
			"trigger": "openssl_pkcs12_export",
			"contents": "openssl_pkcs12_export( ${1:\\$x509}, ${2:\\$out}, ${3:\\$priv_key}, ${4:\\$pass}, ${5:\\$args} )"
		},
		{
			"trigger": "openssl_pkcs12_export_to_file",
			"contents": "openssl_pkcs12_export_to_file( ${1:\\$x509}, ${2:\\$filename}, ${3:\\$priv_key}, ${4:\\$pass}${5:, ${6:\\$args}} )"
		},
		{
			"trigger": "openssl_pkcs12_read",
			"contents": "openssl_pkcs12_read( ${1:\\$PKCS12}, ${2:\\$certs}, ${3:\\$pass} )"
		},
		{
			"trigger": "openssl_pkcs7_decrypt",
			"contents": "openssl_pkcs7_decrypt( ${1:\\$infilename}, ${2:\\$outfilename}, ${3:\\$recipcert}${4:, ${5:\\$recipkey}} )"
		},
		{
			"trigger": "openssl_pkcs7_encrypt",
			"contents": "openssl_pkcs7_encrypt( ${1:\\$infile}, ${2:\\$outfile}, ${3:\\$recipcerts}, ${4:\\$headers}${5:, ${6:\\$flags}${7:, ${8:\\$cipher}}} )"
		},
		{
			"trigger": "openssl_pkcs7_sign",
			"contents": "openssl_pkcs7_sign( ${1:\\$infile}, ${2:\\$outfile}, ${3:\\$signcert}, ${4:\\$signkey}, ${5:\\$headers}${6:, ${7:\\$flags}${8:, ${9:\\$extracertsfilename}}} )"
		},
		{
			"trigger": "openssl_pkcs7_verify",
			"contents": "openssl_pkcs7_verify( ${1:\\$filename}, ${2:\\$flags}${3:, ${4:\\$signerscerts}${5:, ${6:\\$cainfo}${7:, ${8:\\$extracerts}${9:, ${10:\\$content}}}}} )"
		},
		{
			"trigger": "openssl_pkey_export",
			"contents": "openssl_pkey_export( ${1:\\$key}, ${2:\\$out}${3:, ${4:\\$passphrase}${5:, ${6:\\$config_args}}} )"
		},
		{
			"trigger": "openssl_pkey_export_to_file",
			"contents": "openssl_pkey_export_to_file( ${1:\\$key}, ${2:\\$outfilename}${3:, ${4:\\$passphrase}${5:, ${6:\\$config_args}}} )"
		},
		{
			"trigger": "openssl_pkey_free",
			"contents": "openssl_pkey_free( ${1:\\$key} )"
		},
		{
			"trigger": "openssl_pkey_get_details",
			"contents": "openssl_pkey_get_details( ${1:\\$key} )"
		},
		{
			"trigger": "openssl_pkey_get_private",
			"contents": "openssl_pkey_get_private( ${1:\\$key}${2:, ${3:\\$passphrase}} )"
		},
		{
			"trigger": "openssl_pkey_get_public",
			"contents": "openssl_pkey_get_public( ${1:\\$cert} )"
		},
		{
			"trigger": "openssl_pkey_new",
			"contents": "openssl_pkey_new(${1: ${2:\\$configargs} })"
		},
		{
			"trigger": "openssl_private_decrypt",
			"contents": "openssl_private_decrypt( ${1:\\$data}, ${2:\\$crypted}, ${3:\\$key}${4:, ${5:\\$padding}} )"
		},
		{
			"trigger": "openssl_private_encrypt",
			"contents": "openssl_private_encrypt( ${1:\\$data}, ${2:\\$crypted}, ${3:\\$key}${4:, ${5:\\$padding}} )"
		},
		{
			"trigger": "openssl_public_decrypt",
			"contents": "openssl_public_decrypt( ${1:\\$data}, ${2:\\$crypted}, ${3:\\$key}${4:, ${5:\\$padding}} )"
		},
		{
			"trigger": "openssl_public_encrypt",
			"contents": "openssl_public_encrypt( ${1:\\$data}, ${2:\\$crypted}, ${3:\\$key}${4:, ${5:\\$padding}} )"
		},
		{
			"trigger": "openssl_random_pseudo_bytes",
			"contents": "openssl_random_pseudo_bytes( ${1:\\$length}${2:, ${3:\\$result_is_strong}} )"
		},
		{
			"trigger": "openssl_seal",
			"contents": "openssl_seal( ${1:\\$data}, ${2:\\$sealdata}, ${3:\\$ekeys}, ${4:\\$pubkeys} )"
		},
		{
			"trigger": "openssl_sign",
			"contents": "openssl_sign( ${1:\\$data}, ${2:\\$signature}, ${3:\\$key}${4:, ${5:\\$method}} )"
		},
		{
			"trigger": "openssl_verify",
			"contents": "openssl_verify( ${1:\\$data}, ${2:\\$signature}, ${3:\\$key}${4:, ${5:\\$method}} )"
		},
		{
			"trigger": "openssl_x509_check_private_key",
			"contents": "openssl_x509_check_private_key( ${1:\\$cert}, ${2:\\$key} )"
		},
		{
			"trigger": "openssl_x509_checkpurpose",
			"contents": "openssl_x509_checkpurpose( ${1:\\$x509cert}, ${2:\\$purpose}, ${3:\\$cainfo}${4:, ${5:\\$untrustedfile}} )"
		},
		{
			"trigger": "openssl_x509_export",
			"contents": "openssl_x509_export( ${1:\\$x509}, ${2:\\$out}${3:, ${4:\\$notext}} )"
		},
		{
			"trigger": "openssl_x509_export_to_file",
			"contents": "openssl_x509_export_to_file( ${1:\\$x509}, ${2:\\$outfilename}${3:, ${4:\\$notext}} )"
		},
		{
			"trigger": "openssl_x509_free",
			"contents": "openssl_x509_free( ${1:\\$x509} )"
		},
		{
			"trigger": "openssl_x509_parse",
			"contents": "openssl_x509_parse( ${1:\\$x509}, ${2:\\$shortname} )"
		},
		{
			"trigger": "openssl_x509_read",
			"contents": "openssl_x509_read( ${1:\\$cert} )"
		},
		{
			"trigger": "ord",
			"contents": "ord( ${1:\\$character} )"
		},
		{
			"trigger": "output_add_rewrite_var",
			"contents": "output_add_rewrite_var( ${1:\\$name}, ${2:\\$value} )"
		},
		{
			"trigger": "output_reset_rewrite_vars",
			"contents": "output_reset_rewrite_vars()"
		},
		{
			"trigger": "pack",
			"contents": "pack( ${1:\\$format}, ${2:\\$arg1}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "parse_ini_file",
			"contents": "parse_ini_file( ${1:\\$filename}${2:, ${3:\\$process_sections}${4:, ${5:\\$scanner_mode}}} )"
		},
		{
			"trigger": "parse_ini_string",
			"contents": "parse_ini_string( ${1:\\$ini_string}${2:, ${3:\\$process_sections}${4:, ${5:\\$scanner_mode}}} )"
		},
		{
			"trigger": "parse_str",
			"contents": "parse_str( ${1:\\$encoded_string}${2:, ${3:\\$result}} )"
		},
		{
			"trigger": "parse_url",
			"contents": "parse_url( ${1:\\$url}${2:, ${3:\\$component}} )"
		},
		{
			"trigger": "passthru",
			"contents": "passthru( ${1:\\$command}${2:, ${3:\\$return_value}} )"
		},
		{
			"trigger": "pathinfo",
			"contents": "pathinfo( ${1:\\$path}${2:, ${3:\\$options}} )"
		},
		{
			"trigger": "pclose",
			"contents": "pclose( ${1:\\$fp} )"
		},
		{
			"trigger": "pdo_drivers",
			"contents": "pdo_drivers()"
		},
		{
			"trigger": "pfsockopen",
			"contents": "pfsockopen( ${1:\\$hostname}, ${2:\\$port}${3:, ${4:\\$errno}${5:, ${6:\\$errstr}${7:, ${8:\\$timeout}}}} )"
		},
		{
			"trigger": "php_egg_logo_guid",
			"contents": "php_egg_logo_guid()"
		},
		{
			"trigger": "php_ini_loaded_file",
			"contents": "php_ini_loaded_file()"
		},
		{
			"trigger": "php_ini_scanned_files",
			"contents": "php_ini_scanned_files()"
		},
		{
			"trigger": "php_logo_guid",
			"contents": "php_logo_guid()"
		},
		{
			"trigger": "php_real_logo_guid",
			"contents": "php_real_logo_guid()"
		},
		{
			"trigger": "php_sapi_name",
			"contents": "php_sapi_name()"
		},
		{
			"trigger": "php_strip_whitespace",
			"contents": "php_strip_whitespace( ${1:\\$file_name} )"
		},
		{
			"trigger": "php_uname",
			"contents": "php_uname()"
		},
		{
			"trigger": "phpcredits",
			"contents": "phpcredits(${1: ${2:\\$flag} })"
		},
		{
			"trigger": "phpinfo",
			"contents": "phpinfo(${1: ${2:\\$what} })"
		},
		{
			"trigger": "phpversion",
			"contents": "phpversion(${1: ${2:\\$extension} })"
		},
		{
			"trigger": "pi",
			"contents": "pi()"
		},
		{
			"trigger": "png2wbmp",
			"contents": "png2wbmp( ${1:\\$f_org}, ${2:\\$f_dest}, ${3:\\$d_height}, ${4:\\$d_width}, ${5:\\$d_threshold} )"
		},
		{
			"trigger": "popen",
			"contents": "popen( ${1:\\$command}, ${2:\\$mode} )"
		},
		{
			"trigger": "pos",
			"contents": "pos( ${1:\\$arg} )"
		},
		{
			"trigger": "posix_access",
			"contents": "posix_access( ${1:\\$file}${2:, ${3:\\$mode}} )"
		},
		{
			"trigger": "posix_ctermid",
			"contents": "posix_ctermid()"
		},
		{
			"trigger": "posix_errno",
			"contents": "posix_errno()"
		},
		{
			"trigger": "posix_get_last_error",
			"contents": "posix_get_last_error()"
		},
		{
			"trigger": "posix_getcwd",
			"contents": "posix_getcwd()"
		},
		{
			"trigger": "posix_getegid",
			"contents": "posix_getegid()"
		},
		{
			"trigger": "posix_geteuid",
			"contents": "posix_geteuid()"
		},
		{
			"trigger": "posix_getgid",
			"contents": "posix_getgid()"
		},
		{
			"trigger": "posix_getgrgid",
			"contents": "posix_getgrgid( ${1:\\$gid} )"
		},
		{
			"trigger": "posix_getgrnam",
			"contents": "posix_getgrnam( ${1:\\$name} )"
		},
		{
			"trigger": "posix_getgroups",
			"contents": "posix_getgroups()"
		},
		{
			"trigger": "posix_getlogin",
			"contents": "posix_getlogin()"
		},
		{
			"trigger": "posix_getpgid",
			"contents": "posix_getpgid( ${1:\\$pid} )"
		},
		{
			"trigger": "posix_getpgrp",
			"contents": "posix_getpgrp()"
		},
		{
			"trigger": "posix_getpid",
			"contents": "posix_getpid()"
		},
		{
			"trigger": "posix_getppid",
			"contents": "posix_getppid()"
		},
		{
			"trigger": "posix_getpwnam",
			"contents": "posix_getpwnam( ${1:\\$username} )"
		},
		{
			"trigger": "posix_getpwuid",
			"contents": "posix_getpwuid( ${1:\\$uid} )"
		},
		{
			"trigger": "posix_getrlimit",
			"contents": "posix_getrlimit()"
		},
		{
			"trigger": "posix_getsid",
			"contents": "posix_getsid( ${1:\\$pid} )"
		},
		{
			"trigger": "posix_getuid",
			"contents": "posix_getuid()"
		},
		{
			"trigger": "posix_initgroups",
			"contents": "posix_initgroups( ${1:\\$name}, ${2:\\$base_group_id} )"
		},
		{
			"trigger": "posix_isatty",
			"contents": "posix_isatty( ${1:\\$fd} )"
		},
		{
			"trigger": "posix_kill",
			"contents": "posix_kill( ${1:\\$pid}, ${2:\\$sig} )"
		},
		{
			"trigger": "posix_mkfifo",
			"contents": "posix_mkfifo( ${1:\\$pathname}, ${2:\\$mode} )"
		},
		{
			"trigger": "posix_mknod",
			"contents": "posix_mknod( ${1:\\$pathname}, ${2:\\$mode}${3:, ${4:\\$major}${5:, ${6:\\$minor}}} )"
		},
		{
			"trigger": "posix_setegid",
			"contents": "posix_setegid( ${1:\\$gid} )"
		},
		{
			"trigger": "posix_seteuid",
			"contents": "posix_seteuid( ${1:\\$uid} )"
		},
		{
			"trigger": "posix_setgid",
			"contents": "posix_setgid( ${1:\\$gid} )"
		},
		{
			"trigger": "posix_setpgid",
			"contents": "posix_setpgid( ${1:\\$pid}, ${2:\\$pgid} )"
		},
		{
			"trigger": "posix_setsid",
			"contents": "posix_setsid()"
		},
		{
			"trigger": "posix_setuid",
			"contents": "posix_setuid( ${1:\\$uid} )"
		},
		{
			"trigger": "posix_strerror",
			"contents": "posix_strerror( ${1:\\$errno} )"
		},
		{
			"trigger": "posix_times",
			"contents": "posix_times()"
		},
		{
			"trigger": "posix_ttyname",
			"contents": "posix_ttyname( ${1:\\$fd} )"
		},
		{
			"trigger": "posix_uname",
			"contents": "posix_uname()"
		},
		{
			"trigger": "pow",
			"contents": "pow( ${1:\\$base}, ${2:\\$exponent} )"
		},
		{
			"trigger": "preg_filter",
			"contents": "preg_filter( ${1:\\$regex}, ${2:\\$replace}, ${3:\\$subject}${4:, ${5:\\$limit}${6:, ${7:\\$count}}} )"
		},
		{
			"trigger": "preg_grep",
			"contents": "preg_grep( ${1:\\$regex}, ${2:\\$input}${3:, ${4:\\$flags}} )"
		},
		{
			"trigger": "preg_last_error",
			"contents": "preg_last_error()"
		},
		{
			"trigger": "preg_match",
			"contents": "preg_match( ${1:\\$pattern}, ${2:\\$subject}${3:, ${4:\\$subpatterns}${5:, ${6:\\$flags}${7:, ${8:\\$offset}}}} )"
		},
		{
			"trigger": "preg_match_all",
			"contents": "preg_match_all( ${1:\\$pattern}, ${2:\\$subject}${3:, ${4:\\$subpatterns}${5:, ${6:\\$flags}${7:, ${8:\\$offset}}}} )"
		},
		{
			"trigger": "preg_quote",
			"contents": "preg_quote( ${1:\\$str}${2:, ${3:\\$delim_char}} )"
		},
		{
			"trigger": "preg_replace",
			"contents": "preg_replace( ${1:\\$regex}, ${2:\\$replace}, ${3:\\$subject}${4:, ${5:\\$limit}${6:, ${7:\\$count}}} )"
		},
		{
			"trigger": "preg_replace_callback",
			"contents": "preg_replace_callback( ${1:\\$regex}, ${2:\\$callback}, ${3:\\$subject}${4:, ${5:\\$limit}${6:, ${7:\\$count}}} )"
		},
		{
			"trigger": "preg_split",
			"contents": "preg_split( ${1:\\$pattern}, ${2:\\$subject}${3:, ${4:\\$limit}${5:, ${6:\\$flags}}} )"
		},
		{
			"trigger": "prev",
			"contents": "prev( ${1:\\$arg} )"
		},
		{
			"trigger": "print_r",
			"contents": "print_r( ${1:\\$var}${2:, ${3:\\$return}} )"
		},
		{
			"trigger": "printf",
			"contents": "printf( ${1:\\$format}${2:, ${3:\\$arg1}${4:, ${5:\\$...}}} )"
		},
		{
			"trigger": "proc_close",
			"contents": "proc_close( ${1:\\$process} )"
		},
		{
			"trigger": "proc_get_status",
			"contents": "proc_get_status( ${1:\\$process} )"
		},
		{
			"trigger": "proc_nice",
			"contents": "proc_nice( ${1:\\$priority} )"
		},
		{
			"trigger": "proc_open",
			"contents": "proc_open( ${1:\\$command}, ${2:\\$descriptorspec}, ${3:\\$pipes}${4:, ${5:\\$cwd}${6:, ${7:\\$env}${8:, ${9:\\$other_options}}}} )"
		},
		{
			"trigger": "proc_terminate",
			"contents": "proc_terminate( ${1:\\$process}${2:, ${3:\\$signal}} )"
		},
		{
			"trigger": "property_exists",
			"contents": "property_exists( ${1:\\$object_or_class}, ${2:\\$property_name} )"
		},
		{
			"trigger": "putenv",
			"contents": "putenv( ${1:\\$setting} )"
		},
		{
			"trigger": "quoted_printable_decode",
			"contents": "quoted_printable_decode( ${1:\\$str} )"
		},
		{
			"trigger": "quoted_printable_encode",
			"contents": "quoted_printable_encode( ${1:\\$str} )"
		},
		{
			"trigger": "quotemeta",
			"contents": "quotemeta( ${1:\\$str} )"
		},
		{
			"trigger": "rad2deg",
			"contents": "rad2deg( ${1:\\$number} )"
		},
		{
			"trigger": "rand",
			"contents": "rand(${1: ${2:\\$min}${3:, ${4:\\$max}} })"
		},
		{
			"trigger": "range",
			"contents": "range( ${1:\\$low}, ${2:\\$high}${3:, ${4:\\$step}} )"
		},
		{
			"trigger": "rawurldecode",
			"contents": "rawurldecode( ${1:\\$str} )"
		},
		{
			"trigger": "rawurlencode",
			"contents": "rawurlencode( ${1:\\$str} )"
		},
		{
			"trigger": "read_exif_data",
			"contents": "read_exif_data( ${1:\\$filename}${2:, ${3:\\$sections_needed}${4:, ${5:\\$sub_arrays}${6:, ${7:\\$read_thumbnail}}}} )"
		},
		{
			"trigger": "readdir",
			"contents": "readdir(${1: ${2:\\$dir_handle} })"
		},
		{
			"trigger": "readfile",
			"contents": "readfile( ${1:\\$filename}${2:, ${3:\\$flags}${4:, ${5:\\$context}}} )"
		},
		{
			"trigger": "readgzfile",
			"contents": "readgzfile( ${1:\\$filename}${2:, ${3:\\$use_include_path}} )"
		},
		{
			"trigger": "readline",
			"contents": "readline(${1: ${2:\\$prompt} })"
		},
		{
			"trigger": "readline_add_history",
			"contents": "readline_add_history( ${1:\\$prompt} )"
		},
		{
			"trigger": "readline_callback_handler_install",
			"contents": "readline_callback_handler_install( ${1:\\$prompt}, ${2:\\$callback} )"
		},
		{
			"trigger": "readline_callback_handler_remove",
			"contents": "readline_callback_handler_remove()"
		},
		{
			"trigger": "readline_callback_read_char",
			"contents": "readline_callback_read_char()"
		},
		{
			"trigger": "readline_clear_history",
			"contents": "readline_clear_history()"
		},
		{
			"trigger": "readline_completion_function",
			"contents": "readline_completion_function( ${1:\\$funcname} )"
		},
		{
			"trigger": "readline_info",
			"contents": "readline_info(${1: ${2:\\$varname}${3:, ${4:\\$newvalue}} })"
		},
		{
			"trigger": "readline_read_history",
			"contents": "readline_read_history(${1: ${2:\\$filename} })"
		},
		{
			"trigger": "readline_redisplay",
			"contents": "readline_redisplay()"
		},
		{
			"trigger": "readline_write_history",
			"contents": "readline_write_history(${1: ${2:\\$filename} })"
		},
		{
			"trigger": "readlink",
			"contents": "readlink( ${1:\\$filename} )"
		},
		{
			"trigger": "realpath",
			"contents": "realpath( ${1:\\$path} )"
		},
		{
			"trigger": "realpath_cache_get",
			"contents": "realpath_cache_get()"
		},
		{
			"trigger": "realpath_cache_size",
			"contents": "realpath_cache_size()"
		},
		{
			"trigger": "register_shutdown_function",
			"contents": "register_shutdown_function( ${1:\\$function_name} )"
		},
		{
			"trigger": "register_tick_function",
			"contents": "register_tick_function( ${1:\\$function_name}${2:, ${3:\\$arg}${4:, ${5:\\$...}}} )"
		},
		{
			"trigger": "rename",
			"contents": "rename( ${1:\\$old_name}, ${2:\\$new_name}${3:, ${4:\\$context}} )"
		},
		{
			"trigger": "reset",
			"contents": "reset( ${1:\\$arg} )"
		},
		{
			"trigger": "restore_error_handler",
			"contents": "restore_error_handler()"
		},
		{
			"trigger": "restore_exception_handler",
			"contents": "restore_exception_handler()"
		},
		{
			"trigger": "restore_include_path",
			"contents": "restore_include_path()"
		},
		{
			"trigger": "rewind",
			"contents": "rewind( ${1:\\$fp} )"
		},
		{
			"trigger": "rewinddir",
			"contents": "rewinddir(${1: ${2:\\$dir_handle} })"
		},
		{
			"trigger": "rmdir",
			"contents": "rmdir( ${1:\\$dirname}${2:, ${3:\\$context}} )"
		},
		{
			"trigger": "round",
			"contents": "round( ${1:\\$number}${2:, ${3:\\$precision}${4:, ${5:\\$mode}}} )"
		},
		{
			"trigger": "rsort",
			"contents": "rsort( ${1:\\$arg}${2:, ${3:\\$sort_flags}} )"
		},
		{
			"trigger": "rtrim",
			"contents": "rtrim( ${1:\\$str}${2:, ${3:\\$character_mask}} )"
		},
		{
			"trigger": "scandir",
			"contents": "scandir( ${1:\\$dir}${2:, ${3:\\$sorting_order}${4:, ${5:\\$context}}} )"
		},
		{
			"trigger": "sem_acquire",
			"contents": "sem_acquire( ${1:\\$sem_identifier} )"
		},
		{
			"trigger": "sem_get",
			"contents": "sem_get( ${1:\\$key}${2:, ${3:\\$max_acquire}${4:, ${5:\\$perm}${6:, ${7:\\$auto_release}}}} )"
		},
		{
			"trigger": "sem_release",
			"contents": "sem_release( ${1:\\$sem_identifier} )"
		},
		{
			"trigger": "sem_remove",
			"contents": "sem_remove( ${1:\\$sem_identifier} )"
		},
		{
			"trigger": "serialize",
			"contents": "serialize( ${1:\\$var} )"
		},
		{
			"trigger": "session_cache_expire",
			"contents": "session_cache_expire(${1: ${2:\\$new_cache_expire} })"
		},
		{
			"trigger": "session_cache_limiter",
			"contents": "session_cache_limiter(${1: ${2:\\$cache_limiter} })"
		},
		{
			"trigger": "session_commit",
			"contents": "session_commit()"
		},
		{
			"trigger": "session_decode",
			"contents": "session_decode( ${1:\\$data} )"
		},
		{
			"trigger": "session_destroy",
			"contents": "session_destroy()"
		},
		{
			"trigger": "session_encode",
			"contents": "session_encode()"
		},
		{
			"trigger": "session_get_cookie_params",
			"contents": "session_get_cookie_params()"
		},
		{
			"trigger": "session_id",
			"contents": "session_id(${1: ${2:\\$id} })"
		},
		{
			"trigger": "session_module_name",
			"contents": "session_module_name(${1: ${2:\\$module} })"
		},
		{
			"trigger": "session_name",
			"contents": "session_name(${1: ${2:\\$name} })"
		},
		{
			"trigger": "session_regenerate_id",
			"contents": "session_regenerate_id(${1: ${2:\\$delete_old_session} })"
		},
		{
			"trigger": "session_register_shutdown",
			"contents": "session_register_shutdown()"
		},
		{
			"trigger": "session_save_path",
			"contents": "session_save_path(${1: ${2:\\$path} })"
		},
		{
			"trigger": "session_set_cookie_params",
			"contents": "session_set_cookie_params( ${1:\\$lifetime}${2:, ${3:\\$path}${4:, ${5:\\$domain}${6:, ${7:\\$secure}${8:, ${9:\\$httponly}}}}} )"
		},
		{
			"trigger": "session_set_save_handler",
			"contents": "session_set_save_handler( ${1:\\$open}, ${2:\\$close}, ${3:\\$read}, ${4:\\$write}, ${5:\\$destroy}, ${6:\\$gc} )"
		},
		{
			"trigger": "session_start",
			"contents": "session_start()"
		},
		{
			"trigger": "session_status",
			"contents": "session_status()"
		},
		{
			"trigger": "session_unset",
			"contents": "session_unset()"
		},
		{
			"trigger": "session_write_close",
			"contents": "session_write_close()"
		},
		{
			"trigger": "set_error_handler",
			"contents": "set_error_handler( ${1:\\$error_handler}${2:, ${3:\\$error_types}} )"
		},
		{
			"trigger": "set_exception_handler",
			"contents": "set_exception_handler( ${1:\\$exception_handler} )"
		},
		{
			"trigger": "set_file_buffer",
			"contents": "set_file_buffer( ${1:\\$fp}, ${2:\\$buffer} )"
		},
		{
			"trigger": "set_include_path",
			"contents": "set_include_path( ${1:\\$new_include_path} )"
		},
		{
			"trigger": "set_magic_quotes_runtime",
			"contents": "set_magic_quotes_runtime( ${1:\\$new_setting} )"
		},
		{
			"trigger": "set_socket_blocking",
			"contents": "set_socket_blocking( ${1:\\$socket}, ${2:\\$mode} )"
		},
		{
			"trigger": "set_time_limit",
			"contents": "set_time_limit( ${1:\\$seconds} )"
		},
		{
			"trigger": "setcookie",
			"contents": "setcookie( ${1:\\$name}${2:, ${3:\\$value}${4:, ${5:\\$expires}${6:, ${7:\\$path}${8:, ${9:\\$domain}${10:, ${11:\\$secure}}}}}} )"
		},
		{
			"trigger": "setlocale",
			"contents": "setlocale( ${1:\\$category}, ${2:\\$locale}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "setrawcookie",
			"contents": "setrawcookie( ${1:\\$name}${2:, ${3:\\$value}${4:, ${5:\\$expires}${6:, ${7:\\$path}${8:, ${9:\\$domain}${10:, ${11:\\$secure}}}}}} )"
		},
		{
			"trigger": "settype",
			"contents": "settype( ${1:\\$var}, ${2:\\$type} )"
		},
		{
			"trigger": "sha1",
			"contents": "sha1( ${1:\\$str}${2:, ${3:\\$raw_output}} )"
		},
		{
			"trigger": "sha1_file",
			"contents": "sha1_file( ${1:\\$filename}${2:, ${3:\\$raw_output}} )"
		},
		{
			"trigger": "shell_exec",
			"contents": "shell_exec( ${1:\\$cmd} )"
		},
		{
			"trigger": "shm_attach",
			"contents": "shm_attach( ${1:\\$key}${2:, ${3:\\$memsize}${4:, ${5:\\$perm}}} )"
		},
		{
			"trigger": "shm_detach",
			"contents": "shm_detach( ${1:\\$shm_identifier} )"
		},
		{
			"trigger": "shm_get_var",
			"contents": "shm_get_var( ${1:\\$id}, ${2:\\$variable_key} )"
		},
		{
			"trigger": "shm_has_var",
			"contents": "shm_has_var( ${1:\\$id}, ${2:\\$variable_key} )"
		},
		{
			"trigger": "shm_put_var",
			"contents": "shm_put_var( ${1:\\$shm_identifier}, ${2:\\$variable_key}, ${3:\\$variable} )"
		},
		{
			"trigger": "shm_remove",
			"contents": "shm_remove( ${1:\\$shm_identifier} )"
		},
		{
			"trigger": "shm_remove_var",
			"contents": "shm_remove_var( ${1:\\$id}, ${2:\\$variable_key} )"
		},
		{
			"trigger": "shmop_close",
			"contents": "shmop_close( ${1:\\$shmid} )"
		},
		{
			"trigger": "shmop_delete",
			"contents": "shmop_delete( ${1:\\$shmid} )"
		},
		{
			"trigger": "shmop_open",
			"contents": "shmop_open( ${1:\\$key}, ${2:\\$flags}, ${3:\\$mode}, ${4:\\$size} )"
		},
		{
			"trigger": "shmop_read",
			"contents": "shmop_read( ${1:\\$shmid}, ${2:\\$start}, ${3:\\$count} )"
		},
		{
			"trigger": "shmop_size",
			"contents": "shmop_size( ${1:\\$shmid} )"
		},
		{
			"trigger": "shmop_write",
			"contents": "shmop_write( ${1:\\$shmid}, ${2:\\$data}, ${3:\\$offset} )"
		},
		{
			"trigger": "show_source",
			"contents": "show_source( ${1:\\$file_name}${2:, ${3:\\$return}} )"
		},
		{
			"trigger": "shuffle",
			"contents": "shuffle( ${1:\\$arg} )"
		},
		{
			"trigger": "similar_text",
			"contents": "similar_text( ${1:\\$str1}, ${2:\\$str2}${3:, ${4:\\$percent}} )"
		},
		{
			"trigger": "simplexml_import_dom",
			"contents": "simplexml_import_dom( ${1:\\$node}${2:, ${3:\\$class_name}} )"
		},
		{
			"trigger": "simplexml_load_file",
			"contents": "simplexml_load_file( ${1:\\$filename}${2:, ${3:\\$class_name}${4:, ${5:\\$options}${6:, ${7:\\$ns}${8:, ${9:\\$is_prefix}}}}} )"
		},
		{
			"trigger": "simplexml_load_string",
			"contents": "simplexml_load_string( ${1:\\$data}${2:, ${3:\\$class_name}${4:, ${5:\\$options}${6:, ${7:\\$ns}${8:, ${9:\\$is_prefix}}}}} )"
		},
		{
			"trigger": "sin",
			"contents": "sin( ${1:\\$number} )"
		},
		{
			"trigger": "sinh",
			"contents": "sinh( ${1:\\$number} )"
		},
		{
			"trigger": "sizeof",
			"contents": "sizeof( ${1:\\$var}${2:, ${3:\\$mode}} )"
		},
		{
			"trigger": "sleep",
			"contents": "sleep( ${1:\\$seconds} )"
		},
		{
			"trigger": "socket_accept",
			"contents": "socket_accept( ${1:\\$socket} )"
		},
		{
			"trigger": "socket_bind",
			"contents": "socket_bind( ${1:\\$socket}, ${2:\\$addr}${3:, ${4:\\$port}} )"
		},
		{
			"trigger": "socket_clear_error",
			"contents": "socket_clear_error(${1: ${2:\\$socket} })"
		},
		{
			"trigger": "socket_close",
			"contents": "socket_close( ${1:\\$socket} )"
		},
		{
			"trigger": "socket_connect",
			"contents": "socket_connect( ${1:\\$socket}, ${2:\\$addr}${3:, ${4:\\$port}} )"
		},
		{
			"trigger": "socket_create",
			"contents": "socket_create( ${1:\\$domain}, ${2:\\$type}, ${3:\\$protocol} )"
		},
		{
			"trigger": "socket_create_listen",
			"contents": "socket_create_listen( ${1:\\$port}${2:, ${3:\\$backlog}} )"
		},
		{
			"trigger": "socket_create_pair",
			"contents": "socket_create_pair( ${1:\\$domain}, ${2:\\$type}, ${3:\\$protocol}, ${4:\\$fd} )"
		},
		{
			"trigger": "socket_get_option",
			"contents": "socket_get_option( ${1:\\$socket}, ${2:\\$level}, ${3:\\$optname} )"
		},
		{
			"trigger": "socket_get_status",
			"contents": "socket_get_status( ${1:\\$fp} )"
		},
		{
			"trigger": "socket_getopt",
			"contents": "socket_getopt( ${1:\\$socket}, ${2:\\$level}, ${3:\\$optname} )"
		},
		{
			"trigger": "socket_getpeername",
			"contents": "socket_getpeername( ${1:\\$socket}, ${2:\\$addr}${3:, ${4:\\$port}} )"
		},
		{
			"trigger": "socket_getsockname",
			"contents": "socket_getsockname( ${1:\\$socket}, ${2:\\$addr}${3:, ${4:\\$port}} )"
		},
		{
			"trigger": "socket_import_stream",
			"contents": "socket_import_stream( ${1:\\$stream} )"
		},
		{
			"trigger": "socket_last_error",
			"contents": "socket_last_error(${1: ${2:\\$socket} })"
		},
		{
			"trigger": "socket_listen",
			"contents": "socket_listen( ${1:\\$socket}${2:, ${3:\\$backlog}} )"
		},
		{
			"trigger": "socket_read",
			"contents": "socket_read( ${1:\\$socket}, ${2:\\$length}${3:, ${4:\\$type}} )"
		},
		{
			"trigger": "socket_recv",
			"contents": "socket_recv( ${1:\\$socket}, ${2:\\$buf}, ${3:\\$len}, ${4:\\$flags} )"
		},
		{
			"trigger": "socket_recvfrom",
			"contents": "socket_recvfrom( ${1:\\$socket}, ${2:\\$buf}, ${3:\\$len}, ${4:\\$flags}, ${5:\\$name}${6:, ${7:\\$port}} )"
		},
		{
			"trigger": "socket_select",
			"contents": "socket_select( ${1:\\$read_fds}, ${2:\\$write_fds}, ${3:\\$except_fds}, ${4:\\$tv_sec}${5:, ${6:\\$tv_usec}} )"
		},
		{
			"trigger": "socket_send",
			"contents": "socket_send( ${1:\\$socket}, ${2:\\$buf}, ${3:\\$len}, ${4:\\$flags} )"
		},
		{
			"trigger": "socket_sendto",
			"contents": "socket_sendto( ${1:\\$socket}, ${2:\\$buf}, ${3:\\$len}, ${4:\\$flags}, ${5:\\$addr}${6:, ${7:\\$port}} )"
		},
		{
			"trigger": "socket_set_block",
			"contents": "socket_set_block( ${1:\\$socket} )"
		},
		{
			"trigger": "socket_set_blocking",
			"contents": "socket_set_blocking( ${1:\\$socket}, ${2:\\$mode} )"
		},
		{
			"trigger": "socket_set_nonblock",
			"contents": "socket_set_nonblock( ${1:\\$socket} )"
		},
		{
			"trigger": "socket_set_option",
			"contents": "socket_set_option( ${1:\\$socket}, ${2:\\$level}, ${3:\\$optname}, ${4:\\$optval} )"
		},
		{
			"trigger": "socket_set_timeout",
			"contents": "socket_set_timeout( ${1:\\$stream}, ${2:\\$seconds}, ${3:\\$microseconds} )"
		},
		{
			"trigger": "socket_setopt",
			"contents": "socket_setopt( ${1:\\$socket}, ${2:\\$level}, ${3:\\$optname}, ${4:\\$optval} )"
		},
		{
			"trigger": "socket_shutdown",
			"contents": "socket_shutdown( ${1:\\$socket}${2:, ${3:\\$how}} )"
		},
		{
			"trigger": "socket_strerror",
			"contents": "socket_strerror( ${1:\\$errno} )"
		},
		{
			"trigger": "socket_write",
			"contents": "socket_write( ${1:\\$socket}, ${2:\\$buf}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "sort",
			"contents": "sort( ${1:\\$arg}${2:, ${3:\\$sort_flags}} )"
		},
		{
			"trigger": "soundex",
			"contents": "soundex( ${1:\\$str} )"
		},
		{
			"trigger": "spl_autoload",
			"contents": "spl_autoload( ${1:\\$class_name}${2:, ${3:\\$file_extensions}} )"
		},
		{
			"trigger": "spl_autoload_call",
			"contents": "spl_autoload_call( ${1:\\$class_name} )"
		},
		{
			"trigger": "spl_autoload_extensions",
			"contents": "spl_autoload_extensions(${1: ${2:\\$file_extensions} })"
		},
		{
			"trigger": "spl_autoload_functions",
			"contents": "spl_autoload_functions()"
		},
		{
			"trigger": "spl_autoload_register",
			"contents": "spl_autoload_register(${1: ${2:\\$autoload_function} })"
		},
		{
			"trigger": "spl_autoload_unregister",
			"contents": "spl_autoload_unregister( ${1:\\$autoload_function} )"
		},
		{
			"trigger": "spl_classes",
			"contents": "spl_classes()"
		},
		{
			"trigger": "spl_object_hash",
			"contents": "spl_object_hash( ${1:\\$obj} )"
		},
		{
			"trigger": "split",
			"contents": "split( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$limit}} )"
		},
		{
			"trigger": "spliti",
			"contents": "spliti( ${1:\\$pattern}, ${2:\\$string}${3:, ${4:\\$limit}} )"
		},
		{
			"trigger": "sprintf",
			"contents": "sprintf( ${1:\\$format}, ${2:\\$arg1}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "sql_regcase",
			"contents": "sql_regcase( ${1:\\$string} )"
		},
		{
			"trigger": "sqrt",
			"contents": "sqrt( ${1:\\$number} )"
		},
		{
			"trigger": "srand",
			"contents": "srand(${1: ${2:\\$seed} })"
		},
		{
			"trigger": "sscanf",
			"contents": "sscanf( ${1:\\$str}, ${2:\\$format}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "stat",
			"contents": "stat( ${1:\\$filename} )"
		},
		{
			"trigger": "str_getcsv",
			"contents": "str_getcsv( ${1:\\$string}${2:, ${3:\\$delimiter}${4:, ${5:\\$enclosure}${6:, ${7:\\$escape}}}} )"
		},
		{
			"trigger": "str_ireplace",
			"contents": "str_ireplace( ${1:\\$search}, ${2:\\$replace}, ${3:\\$subject}${4:, ${5:\\$replace_count}} )"
		},
		{
			"trigger": "str_pad",
			"contents": "str_pad( ${1:\\$input}, ${2:\\$pad_length}${3:, ${4:\\$pad_string}${5:, ${6:\\$pad_type}}} )"
		},
		{
			"trigger": "str_repeat",
			"contents": "str_repeat( ${1:\\$input}, ${2:\\$mult} )"
		},
		{
			"trigger": "str_replace",
			"contents": "str_replace( ${1:\\$search}, ${2:\\$replace}, ${3:\\$subject}${4:, ${5:\\$replace_count}} )"
		},
		{
			"trigger": "str_rot13",
			"contents": "str_rot13( ${1:\\$str} )"
		},
		{
			"trigger": "str_shuffle",
			"contents": "str_shuffle( ${1:\\$str} )"
		},
		{
			"trigger": "str_split",
			"contents": "str_split( ${1:\\$str}${2:, ${3:\\$split_length}} )"
		},
		{
			"trigger": "str_word_count",
			"contents": "str_word_count( ${1:\\$str}${2:, ${3:\\$format}${4:, ${5:\\$charlist}}} )"
		},
		{
			"trigger": "strcasecmp",
			"contents": "strcasecmp( ${1:\\$str1}, ${2:\\$str2} )"
		},
		{
			"trigger": "strchr",
			"contents": "strchr( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$part}} )"
		},
		{
			"trigger": "strcmp",
			"contents": "strcmp( ${1:\\$str1}, ${2:\\$str2} )"
		},
		{
			"trigger": "strcoll",
			"contents": "strcoll( ${1:\\$str1}, ${2:\\$str2} )"
		},
		{
			"trigger": "strcspn",
			"contents": "strcspn( ${1:\\$str}, ${2:\\$mask}${3:, ${4:\\$start}${5:, ${6:\\$len}}} )"
		},
		{
			"trigger": "stream_bucket_append",
			"contents": "stream_bucket_append( ${1:\\$brigade}, ${2:\\$bucket} )"
		},
		{
			"trigger": "stream_bucket_make_writeable",
			"contents": "stream_bucket_make_writeable( ${1:\\$brigade} )"
		},
		{
			"trigger": "stream_bucket_new",
			"contents": "stream_bucket_new( ${1:\\$stream}, ${2:\\$buffer} )"
		},
		{
			"trigger": "stream_bucket_prepend",
			"contents": "stream_bucket_prepend( ${1:\\$brigade}, ${2:\\$bucket} )"
		},
		{
			"trigger": "stream_context_create",
			"contents": "stream_context_create(${1: ${2:\\$options}${3:, ${4:\\$params}} })"
		},
		{
			"trigger": "stream_context_get_default",
			"contents": "stream_context_get_default(${1: ${2:\\$options} })"
		},
		{
			"trigger": "stream_context_get_options",
			"contents": "stream_context_get_options( ${1:\\$stream_or_context} )"
		},
		{
			"trigger": "stream_context_get_params",
			"contents": "stream_context_get_params( ${1:\\$stream_or_context} )"
		},
		{
			"trigger": "stream_context_set_default",
			"contents": "stream_context_set_default( ${1:\\$options} )"
		},
		{
			"trigger": "stream_context_set_option",
			"contents": "stream_context_set_option( ${1:\\$stream_or_context}, ${2:\\$wrappername}, ${3:\\$optionname}, ${4:\\$value} )"
		},
		{
			"trigger": "stream_context_set_params",
			"contents": "stream_context_set_params( ${1:\\$stream_or_context}, ${2:\\$options} )"
		},
		{
			"trigger": "stream_copy_to_stream",
			"contents": "stream_copy_to_stream( ${1:\\$source}, ${2:\\$dest}${3:, ${4:\\$maxlen}${5:, ${6:\\$pos}}} )"
		},
		{
			"trigger": "stream_filter_append",
			"contents": "stream_filter_append( ${1:\\$stream}, ${2:\\$filtername}${3:, ${4:\\$read_write}${5:, ${6:\\$filterparams}}} )"
		},
		{
			"trigger": "stream_filter_prepend",
			"contents": "stream_filter_prepend( ${1:\\$stream}, ${2:\\$filtername}${3:, ${4:\\$read_write}${5:, ${6:\\$filterparams}}} )"
		},
		{
			"trigger": "stream_filter_register",
			"contents": "stream_filter_register( ${1:\\$filtername}, ${2:\\$classname} )"
		},
		{
			"trigger": "stream_filter_remove",
			"contents": "stream_filter_remove( ${1:\\$stream_filter} )"
		},
		{
			"trigger": "stream_get_contents",
			"contents": "stream_get_contents( ${1:\\$source}${2:, ${3:\\$maxlen}${4:, ${5:\\$offset}}} )"
		},
		{
			"trigger": "stream_get_filters",
			"contents": "stream_get_filters()"
		},
		{
			"trigger": "stream_get_line",
			"contents": "stream_get_line( ${1:\\$stream}, ${2:\\$maxlen}${3:, ${4:\\$ending}} )"
		},
		{
			"trigger": "stream_get_meta_data",
			"contents": "stream_get_meta_data( ${1:\\$fp} )"
		},
		{
			"trigger": "stream_get_transports",
			"contents": "stream_get_transports()"
		},
		{
			"trigger": "stream_get_wrappers",
			"contents": "stream_get_wrappers()"
		},
		{
			"trigger": "stream_is_local",
			"contents": "stream_is_local( ${1:\\$stream} )"
		},
		{
			"trigger": "stream_register_wrapper",
			"contents": "stream_register_wrapper( ${1:\\$protocol}, ${2:\\$classname}${3:, ${4:\\$flags}} )"
		},
		{
			"trigger": "stream_resolve_include_path",
			"contents": "stream_resolve_include_path( ${1:\\$filename} )"
		},
		{
			"trigger": "stream_select",
			"contents": "stream_select( ${1:\\$read_streams}, ${2:\\$write_streams}, ${3:\\$except_streams}, ${4:\\$tv_sec}${5:, ${6:\\$tv_usec}} )"
		},
		{
			"trigger": "stream_set_blocking",
			"contents": "stream_set_blocking( ${1:\\$socket}, ${2:\\$mode} )"
		},
		{
			"trigger": "stream_set_chunk_size",
			"contents": "stream_set_chunk_size( ${1:\\$fp}, ${2:\\$chunk_size} )"
		},
		{
			"trigger": "stream_set_read_buffer",
			"contents": "stream_set_read_buffer( ${1:\\$fp}, ${2:\\$buffer} )"
		},
		{
			"trigger": "stream_set_timeout",
			"contents": "stream_set_timeout( ${1:\\$stream}, ${2:\\$seconds}, ${3:\\$microseconds} )"
		},
		{
			"trigger": "stream_set_write_buffer",
			"contents": "stream_set_write_buffer( ${1:\\$fp}, ${2:\\$buffer} )"
		},
		{
			"trigger": "stream_socket_accept",
			"contents": "stream_socket_accept( ${1:\\$serverstream}${2:, ${3:\\$timeout}${4:, ${5:\\$peername}}} )"
		},
		{
			"trigger": "stream_socket_client",
			"contents": "stream_socket_client( ${1:\\$remoteaddress}${2:, ${3:\\$errcode}${4:, ${5:\\$errstring}${6:, ${7:\\$timeout}${8:, ${9:\\$flags}${10:, ${11:\\$context}}}}}} )"
		},
		{
			"trigger": "stream_socket_enable_crypto",
			"contents": "stream_socket_enable_crypto( ${1:\\$stream}, ${2:\\$enable}${3:, ${4:\\$cryptokind}${5:, ${6:\\$sessionstream}}} )"
		},
		{
			"trigger": "stream_socket_get_name",
			"contents": "stream_socket_get_name( ${1:\\$stream}, ${2:\\$want_peer} )"
		},
		{
			"trigger": "stream_socket_pair",
			"contents": "stream_socket_pair( ${1:\\$domain}, ${2:\\$type}, ${3:\\$protocol} )"
		},
		{
			"trigger": "stream_socket_recvfrom",
			"contents": "stream_socket_recvfrom( ${1:\\$stream}, ${2:\\$amount}${3:, ${4:\\$flags}${5:, ${6:\\$remote_addr}}} )"
		},
		{
			"trigger": "stream_socket_sendto",
			"contents": "stream_socket_sendto( ${1:\\$stream}, ${2:\\$data}${3:, ${4:\\$flags}${5:, ${6:\\$target_addr}}} )"
		},
		{
			"trigger": "stream_socket_server",
			"contents": "stream_socket_server( ${1:\\$localaddress}${2:, ${3:\\$errcode}${4:, ${5:\\$errstring}${6:, ${7:\\$flags}${8:, ${9:\\$context}}}}} )"
		},
		{
			"trigger": "stream_socket_shutdown",
			"contents": "stream_socket_shutdown( ${1:\\$stream}, ${2:\\$how} )"
		},
		{
			"trigger": "stream_supports_lock",
			"contents": "stream_supports_lock( ${1:\\$stream} )"
		},
		{
			"trigger": "stream_wrapper_register",
			"contents": "stream_wrapper_register( ${1:\\$protocol}, ${2:\\$classname}${3:, ${4:\\$flags}} )"
		},
		{
			"trigger": "stream_wrapper_restore",
			"contents": "stream_wrapper_restore( ${1:\\$protocol} )"
		},
		{
			"trigger": "stream_wrapper_unregister",
			"contents": "stream_wrapper_unregister( ${1:\\$protocol} )"
		},
		{
			"trigger": "strftime",
			"contents": "strftime( ${1:\\$format}${2:, ${3:\\$timestamp}} )"
		},
		{
			"trigger": "strip_tags",
			"contents": "strip_tags( ${1:\\$str}${2:, ${3:\\$allowable_tags}} )"
		},
		{
			"trigger": "stripcslashes",
			"contents": "stripcslashes( ${1:\\$str} )"
		},
		{
			"trigger": "stripos",
			"contents": "stripos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}} )"
		},
		{
			"trigger": "stripslashes",
			"contents": "stripslashes( ${1:\\$str} )"
		},
		{
			"trigger": "stristr",
			"contents": "stristr( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$part}} )"
		},
		{
			"trigger": "strlen",
			"contents": "strlen( ${1:\\$str} )"
		},
		{
			"trigger": "strnatcasecmp",
			"contents": "strnatcasecmp( ${1:\\$s1}, ${2:\\$s2} )"
		},
		{
			"trigger": "strnatcmp",
			"contents": "strnatcmp( ${1:\\$s1}, ${2:\\$s2} )"
		},
		{
			"trigger": "strncasecmp",
			"contents": "strncasecmp( ${1:\\$str1}, ${2:\\$str2}, ${3:\\$len} )"
		},
		{
			"trigger": "strncmp",
			"contents": "strncmp( ${1:\\$str1}, ${2:\\$str2}, ${3:\\$len} )"
		},
		{
			"trigger": "strpbrk",
			"contents": "strpbrk( ${1:\\$haystack}${2:, ${3:\\$char_list}} )"
		},
		{
			"trigger": "strpos",
			"contents": "strpos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}} )"
		},
		{
			"trigger": "strptime",
			"contents": "strptime( ${1:\\$timestamp}, ${2:\\$format} )"
		},
		{
			"trigger": "strrchr",
			"contents": "strrchr( ${1:\\$haystack}, ${2:\\$needle} )"
		},
		{
			"trigger": "strrev",
			"contents": "strrev( ${1:\\$str} )"
		},
		{
			"trigger": "strripos",
			"contents": "strripos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}} )"
		},
		{
			"trigger": "strrpos",
			"contents": "strrpos( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}} )"
		},
		{
			"trigger": "strspn",
			"contents": "strspn( ${1:\\$str}, ${2:\\$mask}${3:, ${4:\\$start}${5:, ${6:\\$len}}} )"
		},
		{
			"trigger": "strstr",
			"contents": "strstr( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$part}} )"
		},
		{
			"trigger": "strtok",
			"contents": "strtok( ${1:\\$str}, ${2:\\$token} )"
		},
		{
			"trigger": "strtolower",
			"contents": "strtolower( ${1:\\$str} )"
		},
		{
			"trigger": "strtotime",
			"contents": "strtotime( ${1:\\$time}${2:, ${3:\\$now}} )"
		},
		{
			"trigger": "strtoupper",
			"contents": "strtoupper( ${1:\\$str} )"
		},
		{
			"trigger": "strtr",
			"contents": "strtr( ${1:\\$str}, ${2:\\$from}${3:, ${4:\\$to}} )"
		},
		{
			"trigger": "strval",
			"contents": "strval( ${1:\\$var} )"
		},
		{
			"trigger": "substr",
			"contents": "substr( ${1:\\$str}, ${2:\\$start}${3:, ${4:\\$length}} )"
		},
		{
			"trigger": "substr_compare",
			"contents": "substr_compare( ${1:\\$main_str}, ${2:\\$str}, ${3:\\$offset}${4:, ${5:\\$length}${6:, ${7:\\$case_sensitivity}}} )"
		},
		{
			"trigger": "substr_count",
			"contents": "substr_count( ${1:\\$haystack}, ${2:\\$needle}${3:, ${4:\\$offset}${5:, ${6:\\$length}}} )"
		},
		{
			"trigger": "substr_replace",
			"contents": "substr_replace( ${1:\\$str}, ${2:\\$replace}, ${3:\\$start}${4:, ${5:\\$length}} )"
		},
		{
			"trigger": "symlink",
			"contents": "symlink( ${1:\\$target}, ${2:\\$link} )"
		},
		{
			"trigger": "sys_get_temp_dir",
			"contents": "sys_get_temp_dir()"
		},
		{
			"trigger": "sys_getloadavg",
			"contents": "sys_getloadavg()"
		},
		{
			"trigger": "syslog",
			"contents": "syslog( ${1:\\$priority}, ${2:\\$message} )"
		},
		{
			"trigger": "system",
			"contents": "system( ${1:\\$command}${2:, ${3:\\$return_value}} )"
		},
		{
			"trigger": "tan",
			"contents": "tan( ${1:\\$number} )"
		},
		{
			"trigger": "tanh",
			"contents": "tanh( ${1:\\$number} )"
		},
		{
			"trigger": "tempnam",
			"contents": "tempnam( ${1:\\$dir}, ${2:\\$prefix} )"
		},
		{
			"trigger": "textdomain",
			"contents": "textdomain( ${1:\\$domain} )"
		},
		{
			"trigger": "time",
			"contents": "time()"
		},
		{
			"trigger": "time_nanosleep",
			"contents": "time_nanosleep( ${1:\\$seconds}, ${2:\\$nanoseconds} )"
		},
		{
			"trigger": "time_sleep_until",
			"contents": "time_sleep_until( ${1:\\$timestamp} )"
		},
		{
			"trigger": "timezone_abbreviations_list",
			"contents": "timezone_abbreviations_list()"
		},
		{
			"trigger": "timezone_identifiers_list",
			"contents": "timezone_identifiers_list(${1: ${2:\\$what}${3:, ${4:\\$country}} })"
		},
		{
			"trigger": "timezone_location_get",
			"contents": "timezone_location_get( ${1:\\$object} )"
		},
		{
			"trigger": "timezone_name_from_abbr",
			"contents": "timezone_name_from_abbr( ${1:\\$abbr}${2:, ${3:\\$gmtoffset}${4:, ${5:\\$isdst}}} )"
		},
		{
			"trigger": "timezone_name_get",
			"contents": "timezone_name_get( ${1:\\$object} )"
		},
		{
			"trigger": "timezone_offset_get",
			"contents": "timezone_offset_get( ${1:\\$object}, ${2:\\$datetime} )"
		},
		{
			"trigger": "timezone_open",
			"contents": "timezone_open( ${1:\\$timezone} )"
		},
		{
			"trigger": "timezone_transitions_get",
			"contents": "timezone_transitions_get( ${1:\\$object}${2:, ${3:\\$timestamp_begin}${4:, ${5:\\$timestamp_end}}} )"
		},
		{
			"trigger": "timezone_version_get",
			"contents": "timezone_version_get()"
		},
		{
			"trigger": "tmpfile",
			"contents": "tmpfile()"
		},
		{
			"trigger": "token_get_all",
			"contents": "token_get_all( ${1:\\$source} )"
		},
		{
			"trigger": "token_name",
			"contents": "token_name( ${1:\\$token} )"
		},
		{
			"trigger": "touch",
			"contents": "touch( ${1:\\$filename}${2:, ${3:\\$time}${4:, ${5:\\$atime}}} )"
		},
		{
			"trigger": "trait_exists",
			"contents": "trait_exists( ${1:\\$traitname}${2:, ${3:\\$autoload}} )"
		},
		{
			"trigger": "trigger_error",
			"contents": "trigger_error( ${1:\\$message}${2:, ${3:\\$error_type}} )"
		},
		{
			"trigger": "trim",
			"contents": "trim( ${1:\\$str}${2:, ${3:\\$character_mask}} )"
		},
		{
			"trigger": "uasort",
			"contents": "uasort( ${1:\\$arg}, ${2:\\$cmp_function} )"
		},
		{
			"trigger": "ucfirst",
			"contents": "ucfirst( ${1:\\$str} )"
		},
		{
			"trigger": "ucwords",
			"contents": "ucwords( ${1:\\$str} )"
		},
		{
			"trigger": "uksort",
			"contents": "uksort( ${1:\\$arg}, ${2:\\$cmp_function} )"
		},
		{
			"trigger": "umask",
			"contents": "umask(${1: ${2:\\$mask} })"
		},
		{
			"trigger": "uniqid",
			"contents": "uniqid(${1: ${2:\\$prefix}${3:, ${4:\\$more_entropy}} })"
		},
		{
			"trigger": "unixtojd",
			"contents": "unixtojd(${1: ${2:\\$timestamp} })"
		},
		{
			"trigger": "unlink",
			"contents": "unlink( ${1:\\$filename}${2:, ${3:\\$context}} )"
		},
		{
			"trigger": "unpack",
			"contents": "unpack( ${1:\\$format}, ${2:\\$input} )"
		},
		{
			"trigger": "unregister_tick_function",
			"contents": "unregister_tick_function( ${1:\\$function_name} )"
		},
		{
			"trigger": "unserialize",
			"contents": "unserialize( ${1:\\$variable_representation} )"
		},
		{
			"trigger": "urldecode",
			"contents": "urldecode( ${1:\\$str} )"
		},
		{
			"trigger": "urlencode",
			"contents": "urlencode( ${1:\\$str} )"
		},
		{
			"trigger": "use_soap_error_handler",
			"contents": "use_soap_error_handler(${1: ${2:\\$handler} })"
		},
		{
			"trigger": "user_error",
			"contents": "user_error( ${1:\\$message}${2:, ${3:\\$error_type}} )"
		},
		{
			"trigger": "usleep",
			"contents": "usleep( ${1:\\$micro_seconds} )"
		},
		{
			"trigger": "usort",
			"contents": "usort( ${1:\\$arg}, ${2:\\$cmp_function} )"
		},
		{
			"trigger": "utf8_decode",
			"contents": "utf8_decode( ${1:\\$data} )"
		},
		{
			"trigger": "utf8_encode",
			"contents": "utf8_encode( ${1:\\$data} )"
		},
		{
			"trigger": "var_dump",
			"contents": "var_dump( ${1:\\$var}${2:, ${3:\\$...}} )"
		},
		{
			"trigger": "var_export",
			"contents": "var_export( ${1:\\$var}${2:, ${3:\\$return}} )"
		},
		{
			"trigger": "version_compare",
			"contents": "version_compare( ${1:\\$ver1}, ${2:\\$ver2}${3:, ${4:\\$oper}} )"
		},
		{
			"trigger": "vfprintf",
			"contents": "vfprintf( ${1:\\$stream}, ${2:\\$format}, ${3:\\$args} )"
		},
		{
			"trigger": "vprintf",
			"contents": "vprintf( ${1:\\$format}, ${2:\\$args} )"
		},
		{
			"trigger": "vsprintf",
			"contents": "vsprintf( ${1:\\$format}, ${2:\\$args} )"
		},
		{
			"trigger": "wddx_add_vars",
			"contents": "wddx_add_vars( ${1:\\$packet_id}, ${2:\\$var_name}${3:, ${4:\\$...}} )"
		},
		{
			"trigger": "wddx_deserialize",
			"contents": "wddx_deserialize( ${1:\\$packet} )"
		},
		{
			"trigger": "wddx_packet_end",
			"contents": "wddx_packet_end( ${1:\\$packet_id} )"
		},
		{
			"trigger": "wddx_packet_start",
			"contents": "wddx_packet_start(${1: ${2:\\$comment} })"
		},
		{
			"trigger": "wddx_serialize_value",
			"contents": "wddx_serialize_value( ${1:\\$var}${2:, ${3:\\$comment}} )"
		},
		{
			"trigger": "wddx_serialize_vars",
			"contents": "wddx_serialize_vars( ${1:\\$var_name}${2:, ${3:\\$...}} )"
		},
		{
			"trigger": "wordwrap",
			"contents": "wordwrap( ${1:\\$str}${2:, ${3:\\$width}${4:, ${5:\\$break}${6:, ${7:\\$cut}}}} )"
		},
		{
			"trigger": "xml_error_string",
			"contents": "xml_error_string( ${1:\\$code} )"
		},
		{
			"trigger": "xml_get_current_byte_index",
			"contents": "xml_get_current_byte_index( ${1:\\$parser} )"
		},
		{
			"trigger": "xml_get_current_column_number",
			"contents": "xml_get_current_column_number( ${1:\\$parser} )"
		},
		{
			"trigger": "xml_get_current_line_number",
			"contents": "xml_get_current_line_number( ${1:\\$parser} )"
		},
		{
			"trigger": "xml_get_error_code",
			"contents": "xml_get_error_code( ${1:\\$parser} )"
		},
		{
			"trigger": "xml_parse",
			"contents": "xml_parse( ${1:\\$parser}, ${2:\\$data}${3:, ${4:\\$isfinal}} )"
		},
		{
			"trigger": "xml_parse_into_struct",
			"contents": "xml_parse_into_struct( ${1:\\$parser}, ${2:\\$data}, ${3:\\$values}${4:, ${5:\\$index}} )"
		},
		{
			"trigger": "xml_parser_create",
			"contents": "xml_parser_create(${1: ${2:\\$encoding} })"
		},
		{
			"trigger": "xml_parser_create_ns",
			"contents": "xml_parser_create_ns(${1: ${2:\\$encoding}${3:, ${4:\\$sep}} })"
		},
		{
			"trigger": "xml_parser_free",
			"contents": "xml_parser_free( ${1:\\$parser} )"
		},
		{
			"trigger": "xml_parser_get_option",
			"contents": "xml_parser_get_option( ${1:\\$parser}, ${2:\\$option} )"
		},
		{
			"trigger": "xml_parser_set_option",
			"contents": "xml_parser_set_option( ${1:\\$parser}, ${2:\\$option}, ${3:\\$value} )"
		},
		{
			"trigger": "xml_set_character_data_handler",
			"contents": "xml_set_character_data_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xml_set_default_handler",
			"contents": "xml_set_default_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xml_set_element_handler",
			"contents": "xml_set_element_handler( ${1:\\$parser}, ${2:\\$shdl}, ${3:\\$ehdl} )"
		},
		{
			"trigger": "xml_set_end_namespace_decl_handler",
			"contents": "xml_set_end_namespace_decl_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xml_set_external_entity_ref_handler",
			"contents": "xml_set_external_entity_ref_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xml_set_notation_decl_handler",
			"contents": "xml_set_notation_decl_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xml_set_object",
			"contents": "xml_set_object( ${1:\\$parser}, ${2:\\$obj} )"
		},
		{
			"trigger": "xml_set_processing_instruction_handler",
			"contents": "xml_set_processing_instruction_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xml_set_start_namespace_decl_handler",
			"contents": "xml_set_start_namespace_decl_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xml_set_unparsed_entity_decl_handler",
			"contents": "xml_set_unparsed_entity_decl_handler( ${1:\\$parser}, ${2:\\$hdl} )"
		},
		{
			"trigger": "xmlwriter_end_attribute",
			"contents": "xmlwriter_end_attribute( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_cdata",
			"contents": "xmlwriter_end_cdata( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_comment",
			"contents": "xmlwriter_end_comment( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_document",
			"contents": "xmlwriter_end_document( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_dtd",
			"contents": "xmlwriter_end_dtd( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_dtd_attlist",
			"contents": "xmlwriter_end_dtd_attlist( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_dtd_element",
			"contents": "xmlwriter_end_dtd_element( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_dtd_entity",
			"contents": "xmlwriter_end_dtd_entity( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_element",
			"contents": "xmlwriter_end_element( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_end_pi",
			"contents": "xmlwriter_end_pi( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_flush",
			"contents": "xmlwriter_flush( ${1:\\$xmlwriter}${2:, ${3:\\$empty}} )"
		},
		{
			"trigger": "xmlwriter_full_end_element",
			"contents": "xmlwriter_full_end_element( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_open_memory",
			"contents": "xmlwriter_open_memory()"
		},
		{
			"trigger": "xmlwriter_open_uri",
			"contents": "xmlwriter_open_uri( ${1:\\$uri} )"
		},
		{
			"trigger": "xmlwriter_output_memory",
			"contents": "xmlwriter_output_memory( ${1:\\$xmlwriter}${2:, ${3:\\$flush}} )"
		},
		{
			"trigger": "xmlwriter_set_indent",
			"contents": "xmlwriter_set_indent( ${1:\\$xmlwriter}, ${2:\\$indent} )"
		},
		{
			"trigger": "xmlwriter_set_indent_string",
			"contents": "xmlwriter_set_indent_string( ${1:\\$xmlwriter}, ${2:\\$indentString} )"
		},
		{
			"trigger": "xmlwriter_start_attribute",
			"contents": "xmlwriter_start_attribute( ${1:\\$xmlwriter}, ${2:\\$name} )"
		},
		{
			"trigger": "xmlwriter_start_attribute_ns",
			"contents": "xmlwriter_start_attribute_ns( ${1:\\$xmlwriter}, ${2:\\$prefix}, ${3:\\$name}, ${4:\\$uri} )"
		},
		{
			"trigger": "xmlwriter_start_cdata",
			"contents": "xmlwriter_start_cdata( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_start_comment",
			"contents": "xmlwriter_start_comment( ${1:\\$xmlwriter} )"
		},
		{
			"trigger": "xmlwriter_start_document",
			"contents": "xmlwriter_start_document( ${1:\\$xmlwriter}${2:, ${3:\\$version}${4:, ${5:\\$encoding}${6:, ${7:\\$standalone}}}} )"
		},
		{
			"trigger": "xmlwriter_start_dtd",
			"contents": "xmlwriter_start_dtd( ${1:\\$xmlwriter}, ${2:\\$qualifiedName}${3:, ${4:\\$publicId}${5:, ${6:\\$systemId}}} )"
		},
		{
			"trigger": "xmlwriter_start_dtd_attlist",
			"contents": "xmlwriter_start_dtd_attlist( ${1:\\$xmlwriter}, ${2:\\$name} )"
		},
		{
			"trigger": "xmlwriter_start_dtd_element",
			"contents": "xmlwriter_start_dtd_element( ${1:\\$xmlwriter}, ${2:\\$qualifiedName} )"
		},
		{
			"trigger": "xmlwriter_start_dtd_entity",
			"contents": "xmlwriter_start_dtd_entity( ${1:\\$xmlwriter}, ${2:\\$name}, ${3:\\$isparam} )"
		},
		{
			"trigger": "xmlwriter_start_element",
			"contents": "xmlwriter_start_element( ${1:\\$xmlwriter}, ${2:\\$name} )"
		},
		{
			"trigger": "xmlwriter_start_element_ns",
			"contents": "xmlwriter_start_element_ns( ${1:\\$xmlwriter}, ${2:\\$prefix}, ${3:\\$name}, ${4:\\$uri} )"
		},
		{
			"trigger": "xmlwriter_start_pi",
			"contents": "xmlwriter_start_pi( ${1:\\$xmlwriter}, ${2:\\$target} )"
		},
		{
			"trigger": "xmlwriter_text",
			"contents": "xmlwriter_text( ${1:\\$xmlwriter}, ${2:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_attribute",
			"contents": "xmlwriter_write_attribute( ${1:\\$xmlwriter}, ${2:\\$name}, ${3:\\$value} )"
		},
		{
			"trigger": "xmlwriter_write_attribute_ns",
			"contents": "xmlwriter_write_attribute_ns( ${1:\\$xmlwriter}, ${2:\\$prefix}, ${3:\\$name}, ${4:\\$uri}, ${5:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_cdata",
			"contents": "xmlwriter_write_cdata( ${1:\\$xmlwriter}, ${2:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_comment",
			"contents": "xmlwriter_write_comment( ${1:\\$xmlwriter}, ${2:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_dtd",
			"contents": "xmlwriter_write_dtd( ${1:\\$xmlwriter}, ${2:\\$name}${3:, ${4:\\$publicId}${5:, ${6:\\$systemId}${7:, ${8:\\$subset}}}} )"
		},
		{
			"trigger": "xmlwriter_write_dtd_attlist",
			"contents": "xmlwriter_write_dtd_attlist( ${1:\\$xmlwriter}, ${2:\\$name}, ${3:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_dtd_element",
			"contents": "xmlwriter_write_dtd_element( ${1:\\$xmlwriter}, ${2:\\$name}, ${3:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_dtd_entity",
			"contents": "xmlwriter_write_dtd_entity( ${1:\\$xmlwriter}, ${2:\\$name}, ${3:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_element",
			"contents": "xmlwriter_write_element( ${1:\\$xmlwriter}, ${2:\\$name}${3:, ${4:\\$content}} )"
		},
		{
			"trigger": "xmlwriter_write_element_ns",
			"contents": "xmlwriter_write_element_ns( ${1:\\$xmlwriter}, ${2:\\$prefix}, ${3:\\$name}, ${4:\\$uri}${5:, ${6:\\$content}} )"
		},
		{
			"trigger": "xmlwriter_write_pi",
			"contents": "xmlwriter_write_pi( ${1:\\$xmlwriter}, ${2:\\$target}, ${3:\\$content} )"
		},
		{
			"trigger": "xmlwriter_write_raw",
			"contents": "xmlwriter_write_raw( ${1:\\$xmlwriter}, ${2:\\$content} )"
		},
		{
			"trigger": "zend_logo_guid",
			"contents": "zend_logo_guid()"
		},
		{
			"trigger": "zend_version",
			"contents": "zend_version()"
		},
		{
			"trigger": "zip_close",
			"contents": "zip_close( ${1:\\$zip} )"
		},
		{
			"trigger": "zip_entry_close",
			"contents": "zip_entry_close( ${1:\\$zip_ent} )"
		},
		{
			"trigger": "zip_entry_compressedsize",
			"contents": "zip_entry_compressedsize( ${1:\\$zip_entry} )"
		},
		{
			"trigger": "zip_entry_compressionmethod",
			"contents": "zip_entry_compressionmethod( ${1:\\$zip_entry} )"
		},
		{
			"trigger": "zip_entry_filesize",
			"contents": "zip_entry_filesize( ${1:\\$zip_entry} )"
		},
		{
			"trigger": "zip_entry_name",
			"contents": "zip_entry_name( ${1:\\$zip_entry} )"
		},
		{
			"trigger": "zip_entry_open",
			"contents": "zip_entry_open( ${1:\\$zip_dp}, ${2:\\$zip_entry}${3:, ${4:\\$mode}} )"
		},
		{
			"trigger": "zip_entry_read",
			"contents": "zip_entry_read( ${1:\\$zip_entry}${2:, ${3:\\$len}} )"
		},
		{
			"trigger": "zip_open",
			"contents": "zip_open( ${1:\\$filename} )"
		},
		{
			"trigger": "zip_read",
			"contents": "zip_read( ${1:\\$zip} )"
		},
		{
			"trigger": "zlib_decode",
			"contents": "zlib_decode( ${1:\\$data}${2:, ${3:\\$max_decoded_len}} )"
		},
		{
			"trigger": "zlib_encode",
			"contents": "zlib_encode( ${1:\\$data}, ${2:\\$encoding}${3:, ${4:\\$level}} )"
		},
		{
			"trigger": "zlib_get_coding_type",
			"contents": "zlib_get_coding_type()"
		}
	]
}